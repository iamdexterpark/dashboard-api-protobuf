/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.clientsservice;

import "google/protobuf/empty.proto";
import public "models/get_network_client200_response.proto";
import public "models/get_network_clients200_response.proto";
import public "models/get_organization_clients_bandwidth_usage_history200_response_inner.proto";
import public "models/get_organization_clients_overview200_response.proto";
import public "models/get_organization_summary_top_clients_by_usage200_response_inner.proto";
import public "models/get_organization_summary_top_clients_manufacturers_by_usage200_response_inner.proto";
import public "models/provision_network_clients_request.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_network_client_policy_request.proto";
import public "models/update_network_client_splash_authorization_status_request.proto";

service ClientsService {
  rpc GetDeviceClients (GetDeviceClientsRequest) returns (GetDeviceClientsResponse);

  rpc GetNetworkApplianceClientSecurityEvents (GetNetworkApplianceClientSecurityEventsRequest) returns (GetNetworkApplianceClientSecurityEventsResponse);

  rpc GetNetworkClient (GetNetworkClientRequest) returns (GetNetworkClient200Response);

  rpc GetNetworkClientPolicy (GetNetworkClientPolicyRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkClientSplashAuthorizationStatus (GetNetworkClientSplashAuthorizationStatusRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkClientTrafficHistory (GetNetworkClientTrafficHistoryRequest) returns (GetNetworkClientTrafficHistoryResponse);

  rpc GetNetworkClientUsageHistory (GetNetworkClientUsageHistoryRequest) returns (GetNetworkClientUsageHistoryResponse);

  rpc GetNetworkClients (GetNetworkClientsRequest) returns (GetNetworkClients200Response);

  rpc GetNetworkClientsApplicationUsage (GetNetworkClientsApplicationUsageRequest) returns (GetNetworkClientsApplicationUsageResponse);

  rpc GetNetworkClientsBandwidthUsageHistory (GetNetworkClientsBandwidthUsageHistoryRequest) returns (GetNetworkClientsBandwidthUsageHistoryResponse);

  rpc GetNetworkClientsOverview (GetNetworkClientsOverviewRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkClientsUsageHistories (GetNetworkClientsUsageHistoriesRequest) returns (GetNetworkClientsUsageHistoriesResponse);

  rpc GetNetworkWirelessClientConnectionStats (GetNetworkWirelessClientConnectionStatsRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessClientConnectivityEvents (GetNetworkWirelessClientConnectivityEventsRequest) returns (GetNetworkWirelessClientConnectivityEventsResponse);

  rpc GetNetworkWirelessClientLatencyHistory (GetNetworkWirelessClientLatencyHistoryRequest) returns (GetNetworkWirelessClientLatencyHistoryResponse);

  rpc GetNetworkWirelessClientLatencyStats (GetNetworkWirelessClientLatencyStatsRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessClientsConnectionStats (GetNetworkWirelessClientsConnectionStatsRequest) returns (GetNetworkWirelessClientsConnectionStatsResponse);

  rpc GetNetworkWirelessClientsLatencyStats (GetNetworkWirelessClientsLatencyStatsRequest) returns (GetNetworkWirelessClientsLatencyStatsResponse);

  rpc GetOrganizationClientsBandwidthUsageHistory (GetOrganizationClientsBandwidthUsageHistoryRequest) returns (GetOrganizationClientsBandwidthUsageHistoryResponse);

  rpc GetOrganizationClientsOverview (GetOrganizationClientsOverviewRequest) returns (GetOrganizationClientsOverview200Response);

  rpc GetOrganizationClientsSearch (GetOrganizationClientsSearchRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationSummaryTopClientsByUsage (GetOrganizationSummaryTopClientsByUsageRequest) returns (GetOrganizationSummaryTopClientsByUsageResponse);

  rpc GetOrganizationSummaryTopClientsManufacturersByUsage (GetOrganizationSummaryTopClientsManufacturersByUsageRequest) returns (GetOrganizationSummaryTopClientsManufacturersByUsageResponse);

  rpc ProvisionNetworkClients (ProvisionNetworkClientsRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkClientPolicy (UpdateNetworkClientPolicyRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkClientSplashAuthorizationStatus (UpdateNetworkClientSplashAuthorizationStatusRequest) returns (TODO_OBJECT_MAPPING);

}

message GetDeviceClientsRequest {
  // Serial
  string serial = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 3;

}

message GetDeviceClientsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkApplianceClientSecurityEventsRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 791 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days.
  float timespan = 5;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
  int32 perPage = 6;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 7;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 8;
  // Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.
  string sortOrder = 9;

}

message GetNetworkApplianceClientSecurityEventsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkClientRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;

}

message GetNetworkClientPolicyRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;

}

message GetNetworkClientSplashAuthorizationStatusRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;

}

message GetNetworkClientTrafficHistoryRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The number of entries per page returned. Acceptable range is 3 - 1000.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;

}

message GetNetworkClientTrafficHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkClientUsageHistoryRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;

}

message GetNetworkClientUsageHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkClientsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // Filters clients based on status. Can be one of 'Online' or 'Offline'.
  repeated string statuses = 7;
  // Filters clients based on a partial or full match for the ip address field.
  string ip = 8;
  // Filters clients based on a partial or full match for the ip6 address field.
  string ip6 = 9;
  // Filters clients based on a partial or full match for the ip6Local address field.
  string ip6Local = 10;
  // Filters clients based on a partial or full match for the mac address field.
  string mac = 11;
  // Filters clients based on a partial or full match for the os (operating system) field.
  string os = 12;
  // Filters clients based on partial or full match for the iPSK name field.
  string pskGroup = 13;
  // Filters clients based on a partial or full match for the description field.
  string description = 14;
  // Filters clients based on the full match for the VLAN field.
  string vlan = 15;
  // Filters clients based on the partial or full match for the named VLAN field.
  string namedVlan = 16;
  // Filters clients based on recent connection type. Can be one of 'Wired' or 'Wireless'.
  repeated string recentDeviceConnections = 17;

}

message GetNetworkClientsApplicationUsageRequest {
  // Network ID
  string networkId = 1;
  // A list of client keys, MACs or IPs separated by comma.
  string clients = 2;
  // An SSID number to include. If not specified, eveusage histories application usagents for all SSIDs will be returned.
  int32 ssidNumber = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 7;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 8;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 9;

}

message GetNetworkClientsApplicationUsageResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkClientsBandwidthUsageHistoryRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 30 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 5;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 6;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 7;

}

message GetNetworkClientsBandwidthUsageHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkClientsOverviewRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 7200, 86400, 604800, 2592000. The default is 604800.
  int32 resolution = 5;

}

message GetNetworkClientsUsageHistoriesRequest {
  // Network ID
  string networkId = 1;
  // A list of client keys, MACs or IPs separated by comma.
  string clients = 2;
  // An SSID number to include. If not specified, events for all SSIDs will be returned.
  int32 ssidNumber = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 7;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 8;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 9;

}

message GetNetworkClientsUsageHistoriesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessClientConnectionStatsRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 5;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 6;
  // Filter results by SSID
  int32 ssid = 7;
  // Filter results by VLAN
  int32 vlan = 8;
  // Filter results by AP Tag
  string apTag = 9;

}

message GetNetworkWirelessClientConnectivityEventsRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The number of entries per page returned. Acceptable range is 3 - 1000.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 6;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 7;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 8;
  // A list of event types to include. If not specified, events of all types will be returned. Valid types are 'assoc', 'disassoc', 'auth', 'deauth', 'dns', 'dhcp', 'roam', 'connection' and/or 'sticky'.
  repeated string types = 9;
  // A list of severities to include. If not specified, events of all severities will be returned. Valid severities are 'good', 'info', 'warn' and/or 'bad'.
  repeated string includedSeverities = 10;
  // Filter results by band (either '2.4', '5', '6').
  string band = 11;
  // An SSID number to include. If not specified, events for all SSIDs will be returned.
  int32 ssidNumber = 12;
  // Filter results by an AP's serial number.
  string deviceSerial = 13;

}

message GetNetworkWirelessClientConnectivityEventsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessClientLatencyHistoryRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 791 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day.
  float timespan = 5;
  // The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400.
  int32 resolution = 6;

}

message GetNetworkWirelessClientLatencyHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessClientLatencyStatsRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 5;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 6;
  // Filter results by SSID
  int32 ssid = 7;
  // Filter results by VLAN
  int32 vlan = 8;
  // Filter results by AP Tag
  string apTag = 9;
  // Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
  string fields = 10;

}

message GetNetworkWirelessClientsConnectionStatsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 4;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 5;
  // Filter results by SSID
  int32 ssid = 6;
  // Filter results by VLAN
  int32 vlan = 7;
  // Filter results by AP Tag
  string apTag = 8;

}

message GetNetworkWirelessClientsConnectionStatsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessClientsLatencyStatsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 4;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 5;
  // Filter results by SSID
  int32 ssid = 6;
  // Filter results by VLAN
  int32 vlan = 7;
  // Filter results by AP Tag
  string apTag = 8;
  // Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
  string fields = 9;

}

message GetNetworkWirelessClientsLatencyStatsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationClientsBandwidthUsageHistoryRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationClientsBandwidthUsageHistoryResponse {
  repeated GetOrganizationClientsBandwidthUsageHistory200ResponseInner data = 1;
}

message GetOrganizationClientsOverviewRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationClientsSearchRequest {
  // Organization ID
  string organizationId = 1;
  // The MAC address of the client. Required.
  string mac = 2;
  // The number of entries per page returned. Acceptable range is 3 - 5. Default is 5.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;

}

message GetOrganizationSummaryTopClientsByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopClientsByUsageResponse {
  repeated GetOrganizationSummaryTopClientsByUsage200ResponseInner data = 1;
}

message GetOrganizationSummaryTopClientsManufacturersByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopClientsManufacturersByUsageResponse {
  repeated GetOrganizationSummaryTopClientsManufacturersByUsage200ResponseInner data = 1;
}

message ProvisionNetworkClientsRequest {
  // Network ID
  string networkId = 1;
  ProvisionNetworkClientsRequest provisionNetworkClientsRequest = 2;

}

message UpdateNetworkClientPolicyRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  UpdateNetworkClientPolicyRequest updateNetworkClientPolicyRequest = 3;

}

message UpdateNetworkClientSplashAuthorizationStatusRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  UpdateNetworkClientSplashAuthorizationStatusRequest updateNetworkClientSplashAuthorizationStatusRequest = 3;

}

