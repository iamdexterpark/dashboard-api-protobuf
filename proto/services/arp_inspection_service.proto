/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.arpinspectionservice;

import "google/protobuf/empty.proto";
import public "models/create_network_switch_dhcp_server_policy_arp_inspection_trusted_server_request.proto";
import public "models/get_network_switch_dhcp_server_policy_arp_inspection_trusted_servers200_response_inner.proto";
import public "models/get_network_switch_dhcp_server_policy_arp_inspection_warnings_by_device200_response_inner.proto";
import public "models/update_network_switch_dhcp_server_policy_arp_inspection_trusted_server_request.proto";

service ArpInspectionService {
  rpc CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer (CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequest) returns (GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers200ResponseInner);

  rpc DeleteNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer (DeleteNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequest) returns (google.protobuf.Empty);

  rpc GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers (GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServersRequest) returns (GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServersResponse);

  rpc GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice (GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDeviceRequest) returns (GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResponse);

  rpc UpdateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer (UpdateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequest) returns (GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers200ResponseInner);

}

message CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequest {
  // Network ID
  string networkId = 1;
  CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequest createNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequest = 2;

}

message DeleteNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequest {
  // Network ID
  string networkId = 1;
  // Trusted server ID
  string trustedServerId = 2;

}

message GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServersRequest {
  // Network ID
  string networkId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;

}

message GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServersResponse {
  repeated GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers200ResponseInner data = 1;
}

message GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDeviceRequest {
  // Network ID
  string networkId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;

}

message GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResponse {
  repeated GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner data = 1;
}

message UpdateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequest {
  // Network ID
  string networkId = 1;
  // Trusted server ID
  string trustedServerId = 2;
  UpdateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequest updateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequest = 3;

}

