/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.ssidsservice;

import "google/protobuf/empty.proto";
import public "models/create_network_wireless_ssid_identity_psk_request.proto";
import public "models/get_network_appliance_ssids200_response_inner.proto";
import public "models/get_network_wireless_ssid_eap_override200_response.proto";
import public "models/get_network_wireless_ssid_identity_psks200_response_inner.proto";
import public "models/get_network_wireless_ssid_splash_settings200_response.proto";
import public "models/get_network_wireless_ssid_traffic_shaping_rules200_response.proto";
import public "models/get_network_wireless_ssids200_response_inner.proto";
import public "models/get_organization_summary_top_ssids_by_usage200_response_inner.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_network_appliance_ssid_request.proto";
import public "models/update_network_wireless_ssid_bonjour_forwarding_request.proto";
import public "models/update_network_wireless_ssid_device_type_group_policies_request.proto";
import public "models/update_network_wireless_ssid_eap_override_request.proto";
import public "models/update_network_wireless_ssid_firewall_l3_firewall_rules_request.proto";
import public "models/update_network_wireless_ssid_firewall_l7_firewall_rules_request.proto";
import public "models/update_network_wireless_ssid_hotspot20_request.proto";
import public "models/update_network_wireless_ssid_identity_psk_request.proto";
import public "models/update_network_wireless_ssid_request.proto";
import public "models/update_network_wireless_ssid_schedules_request.proto";
import public "models/update_network_wireless_ssid_splash_settings_request.proto";
import public "models/update_network_wireless_ssid_traffic_shaping_rules_request.proto";
import public "models/update_network_wireless_ssid_vpn_request.proto";

service SsidsService {
  rpc CreateNetworkWirelessSsidIdentityPsk (CreateNetworkWirelessSsidIdentityPskRequest) returns (TODO_OBJECT_MAPPING);

  rpc DeleteNetworkWirelessSsidIdentityPsk (DeleteNetworkWirelessSsidIdentityPskRequest) returns (google.protobuf.Empty);

  rpc GetNetworkApplianceSsid (GetNetworkApplianceSsidRequest) returns (GetNetworkApplianceSsids200ResponseInner);

  rpc GetNetworkApplianceSsids (GetNetworkApplianceSsidsRequest) returns (GetNetworkApplianceSsidsResponse);

  rpc GetNetworkWirelessSsid (GetNetworkWirelessSsidRequest) returns (GetNetworkWirelessSsids200ResponseInner);

  rpc GetNetworkWirelessSsidBonjourForwarding (GetNetworkWirelessSsidBonjourForwardingRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessSsidDeviceTypeGroupPolicies (GetNetworkWirelessSsidDeviceTypeGroupPoliciesRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessSsidEapOverride (GetNetworkWirelessSsidEapOverrideRequest) returns (GetNetworkWirelessSsidEapOverride200Response);

  rpc GetNetworkWirelessSsidFirewallL3FirewallRules (GetNetworkWirelessSsidFirewallL3FirewallRulesRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessSsidFirewallL7FirewallRules (GetNetworkWirelessSsidFirewallL7FirewallRulesRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessSsidHotspot20 (GetNetworkWirelessSsidHotspot20Request) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessSsidIdentityPsk (GetNetworkWirelessSsidIdentityPskRequest) returns (GetNetworkWirelessSsidIdentityPsks200ResponseInner);

  rpc GetNetworkWirelessSsidIdentityPsks (GetNetworkWirelessSsidIdentityPsksRequest) returns (GetNetworkWirelessSsidIdentityPsksResponse);

  rpc GetNetworkWirelessSsidSchedules (GetNetworkWirelessSsidSchedulesRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessSsidSplashSettings (GetNetworkWirelessSsidSplashSettingsRequest) returns (GetNetworkWirelessSsidSplashSettings200Response);

  rpc GetNetworkWirelessSsidTrafficShapingRules (GetNetworkWirelessSsidTrafficShapingRulesRequest) returns (GetNetworkWirelessSsidTrafficShapingRules200Response);

  rpc GetNetworkWirelessSsidVpn (GetNetworkWirelessSsidVpnRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessSsids (GetNetworkWirelessSsidsRequest) returns (GetNetworkWirelessSsidsResponse);

  rpc GetOrganizationSummaryTopSsidsByUsage (GetOrganizationSummaryTopSsidsByUsageRequest) returns (GetOrganizationSummaryTopSsidsByUsageResponse);

  rpc UpdateNetworkApplianceSsid (UpdateNetworkApplianceSsidRequest) returns (GetNetworkApplianceSsids200ResponseInner);

  rpc UpdateNetworkWirelessSsid (UpdateNetworkWirelessSsidRequest) returns (GetNetworkWirelessSsids200ResponseInner);

  rpc UpdateNetworkWirelessSsidBonjourForwarding (UpdateNetworkWirelessSsidBonjourForwardingRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkWirelessSsidDeviceTypeGroupPolicies (UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkWirelessSsidEapOverride (UpdateNetworkWirelessSsidEapOverrideRequest) returns (GetNetworkWirelessSsidEapOverride200Response);

  rpc UpdateNetworkWirelessSsidFirewallL3FirewallRules (UpdateNetworkWirelessSsidFirewallL3FirewallRulesRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkWirelessSsidFirewallL7FirewallRules (UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkWirelessSsidHotspot20 (UpdateNetworkWirelessSsidHotspot20Request) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkWirelessSsidIdentityPsk (UpdateNetworkWirelessSsidIdentityPskRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkWirelessSsidSchedules (UpdateNetworkWirelessSsidSchedulesRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkWirelessSsidSplashSettings (UpdateNetworkWirelessSsidSplashSettingsRequest) returns (GetNetworkWirelessSsidSplashSettings200Response);

  rpc UpdateNetworkWirelessSsidTrafficShapingRules (UpdateNetworkWirelessSsidTrafficShapingRulesRequest) returns (GetNetworkWirelessSsidTrafficShapingRules200Response);

  rpc UpdateNetworkWirelessSsidVpn (UpdateNetworkWirelessSsidVpnRequest) returns (TODO_OBJECT_MAPPING);

}

message CreateNetworkWirelessSsidIdentityPskRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  CreateNetworkWirelessSsidIdentityPskRequest createNetworkWirelessSsidIdentityPskRequest = 3;

}

message DeleteNetworkWirelessSsidIdentityPskRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  // Identity psk ID
  string identityPskId = 3;

}

message GetNetworkApplianceSsidRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkApplianceSsidsRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkApplianceSsidsResponse {
  repeated GetNetworkApplianceSsids200ResponseInner data = 1;
}

message GetNetworkWirelessSsidRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidBonjourForwardingRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidDeviceTypeGroupPoliciesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidEapOverrideRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidFirewallL3FirewallRulesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidFirewallL7FirewallRulesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidHotspot20Request {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidIdentityPskRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  // Identity psk ID
  string identityPskId = 3;

}

message GetNetworkWirelessSsidIdentityPsksRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidIdentityPsksResponse {
  repeated GetNetworkWirelessSsidIdentityPsks200ResponseInner data = 1;
}

message GetNetworkWirelessSsidSchedulesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidSplashSettingsRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidTrafficShapingRulesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidVpnRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetNetworkWirelessSsidsRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkWirelessSsidsResponse {
  repeated GetNetworkWirelessSsids200ResponseInner data = 1;
}

message GetOrganizationSummaryTopSsidsByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopSsidsByUsageResponse {
  repeated GetOrganizationSummaryTopSsidsByUsage200ResponseInner data = 1;
}

message UpdateNetworkApplianceSsidRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkApplianceSsidRequest updateNetworkApplianceSsidRequest = 3;

}

message UpdateNetworkWirelessSsidRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidRequest updateNetworkWirelessSsidRequest = 3;

}

message UpdateNetworkWirelessSsidBonjourForwardingRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidBonjourForwardingRequest updateNetworkWirelessSsidBonjourForwardingRequest = 3;

}

message UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequest updateNetworkWirelessSsidDeviceTypeGroupPoliciesRequest = 3;

}

message UpdateNetworkWirelessSsidEapOverrideRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidEapOverrideRequest updateNetworkWirelessSsidEapOverrideRequest = 3;

}

message UpdateNetworkWirelessSsidFirewallL3FirewallRulesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidFirewallL3FirewallRulesRequest updateNetworkWirelessSsidFirewallL3FirewallRulesRequest = 3;

}

message UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequest updateNetworkWirelessSsidFirewallL7FirewallRulesRequest = 3;

}

message UpdateNetworkWirelessSsidHotspot20Request {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidHotspot20Request updateNetworkWirelessSsidHotspot20Request = 3;

}

message UpdateNetworkWirelessSsidIdentityPskRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  // Identity psk ID
  string identityPskId = 3;
  UpdateNetworkWirelessSsidIdentityPskRequest updateNetworkWirelessSsidIdentityPskRequest = 4;

}

message UpdateNetworkWirelessSsidSchedulesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidSchedulesRequest updateNetworkWirelessSsidSchedulesRequest = 3;

}

message UpdateNetworkWirelessSsidSplashSettingsRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidSplashSettingsRequest updateNetworkWirelessSsidSplashSettingsRequest = 3;

}

message UpdateNetworkWirelessSsidTrafficShapingRulesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidTrafficShapingRulesRequest updateNetworkWirelessSsidTrafficShapingRulesRequest = 3;

}

message UpdateNetworkWirelessSsidVpnRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidVpnRequest updateNetworkWirelessSsidVpnRequest = 3;

}

