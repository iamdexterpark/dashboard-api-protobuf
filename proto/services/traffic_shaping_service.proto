/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.trafficshapingservice;

import "google/protobuf/empty.proto";
import public "models/create_network_appliance_traffic_shaping_custom_performance_class_request.proto";
import public "models/get_network_appliance_traffic_shaping_uplink_bandwidth200_response.proto";
import public "models/get_network_appliance_traffic_shaping_uplink_selection200_response.proto";
import public "models/get_network_wireless_ssid_traffic_shaping_rules200_response.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_network_appliance_traffic_shaping_custom_performance_class_request.proto";
import public "models/update_network_appliance_traffic_shaping_request.proto";
import public "models/update_network_appliance_traffic_shaping_rules_request.proto";
import public "models/update_network_appliance_traffic_shaping_uplink_bandwidth_request.proto";
import public "models/update_network_appliance_traffic_shaping_uplink_selection_request.proto";
import public "models/update_network_appliance_traffic_shaping_vpn_exclusions200_response.proto";
import public "models/update_network_appliance_traffic_shaping_vpn_exclusions_request.proto";
import public "models/update_network_wireless_ssid_traffic_shaping_rules_request.proto";

service TrafficShapingService {
  rpc CreateNetworkApplianceTrafficShapingCustomPerformanceClass (CreateNetworkApplianceTrafficShapingCustomPerformanceClassRequest) returns (TODO_OBJECT_MAPPING);

  rpc DeleteNetworkApplianceTrafficShapingCustomPerformanceClass (DeleteNetworkApplianceTrafficShapingCustomPerformanceClassRequest) returns (google.protobuf.Empty);

  rpc GetNetworkApplianceTrafficShaping (GetNetworkApplianceTrafficShapingRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkApplianceTrafficShapingCustomPerformanceClass (GetNetworkApplianceTrafficShapingCustomPerformanceClassRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkApplianceTrafficShapingCustomPerformanceClasses (GetNetworkApplianceTrafficShapingCustomPerformanceClassesRequest) returns (GetNetworkApplianceTrafficShapingCustomPerformanceClassesResponse);

  rpc GetNetworkApplianceTrafficShapingRules (GetNetworkApplianceTrafficShapingRulesRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkApplianceTrafficShapingUplinkBandwidth (GetNetworkApplianceTrafficShapingUplinkBandwidthRequest) returns (GetNetworkApplianceTrafficShapingUplinkBandwidth200Response);

  rpc GetNetworkApplianceTrafficShapingUplinkSelection (GetNetworkApplianceTrafficShapingUplinkSelectionRequest) returns (GetNetworkApplianceTrafficShapingUplinkSelection200Response);

  rpc GetNetworkTrafficShapingApplicationCategories (GetNetworkTrafficShapingApplicationCategoriesRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkTrafficShapingDscpTaggingOptions (GetNetworkTrafficShapingDscpTaggingOptionsRequest) returns (GetNetworkTrafficShapingDscpTaggingOptionsResponse);

  rpc GetNetworkWirelessSsidTrafficShapingRules (GetNetworkWirelessSsidTrafficShapingRulesRequest) returns (GetNetworkWirelessSsidTrafficShapingRules200Response);

  rpc GetOrganizationApplianceTrafficShapingVpnExclusionsByNetwork (GetOrganizationApplianceTrafficShapingVpnExclusionsByNetworkRequest) returns (GetOrganizationApplianceTrafficShapingVpnExclusionsByNetworkResponse);

  rpc UpdateNetworkApplianceTrafficShaping (UpdateNetworkApplianceTrafficShapingRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkApplianceTrafficShapingCustomPerformanceClass (UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkApplianceTrafficShapingRules (UpdateNetworkApplianceTrafficShapingRulesRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkApplianceTrafficShapingUplinkBandwidth (UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkApplianceTrafficShapingUplinkSelection (UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest) returns (GetNetworkApplianceTrafficShapingUplinkSelection200Response);

  rpc UpdateNetworkApplianceTrafficShapingVpnExclusions (UpdateNetworkApplianceTrafficShapingVpnExclusionsRequest) returns (UpdateNetworkApplianceTrafficShapingVpnExclusions200Response);

  rpc UpdateNetworkWirelessSsidTrafficShapingRules (UpdateNetworkWirelessSsidTrafficShapingRulesRequest) returns (GetNetworkWirelessSsidTrafficShapingRules200Response);

}

message CreateNetworkApplianceTrafficShapingCustomPerformanceClassRequest {
  // Network ID
  string networkId = 1;
  CreateNetworkApplianceTrafficShapingCustomPerformanceClassRequest createNetworkApplianceTrafficShapingCustomPerformanceClassRequest = 2;

}

message DeleteNetworkApplianceTrafficShapingCustomPerformanceClassRequest {
  // Network ID
  string networkId = 1;
  // Custom performance class ID
  string customPerformanceClassId = 2;

}

message GetNetworkApplianceTrafficShapingRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkApplianceTrafficShapingCustomPerformanceClassRequest {
  // Network ID
  string networkId = 1;
  // Custom performance class ID
  string customPerformanceClassId = 2;

}

message GetNetworkApplianceTrafficShapingCustomPerformanceClassesRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkApplianceTrafficShapingCustomPerformanceClassesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkApplianceTrafficShapingRulesRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkApplianceTrafficShapingUplinkBandwidthRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkApplianceTrafficShapingUplinkSelectionRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkTrafficShapingApplicationCategoriesRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkTrafficShapingDscpTaggingOptionsRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkTrafficShapingDscpTaggingOptionsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessSsidTrafficShapingRulesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;

}

message GetOrganizationApplianceTrafficShapingVpnExclusionsByNetworkRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter the results by network IDs
  repeated string networkIds = 5;

}

message GetOrganizationApplianceTrafficShapingVpnExclusionsByNetworkResponse {
  repeated UpdateNetworkApplianceTrafficShapingVpnExclusions200Response data = 1;
}

message UpdateNetworkApplianceTrafficShapingRequest {
  // Network ID
  string networkId = 1;
  UpdateNetworkApplianceTrafficShapingRequest updateNetworkApplianceTrafficShapingRequest = 2;

}

message UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest {
  // Network ID
  string networkId = 1;
  // Custom performance class ID
  string customPerformanceClassId = 2;
  UpdateNetworkApplianceTrafficShapingCustomPerformanceClassRequest updateNetworkApplianceTrafficShapingCustomPerformanceClassRequest = 3;

}

message UpdateNetworkApplianceTrafficShapingRulesRequest {
  // Network ID
  string networkId = 1;
  UpdateNetworkApplianceTrafficShapingRulesRequest updateNetworkApplianceTrafficShapingRulesRequest = 2;

}

message UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequest {
  // Network ID
  string networkId = 1;
  UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequest updateNetworkApplianceTrafficShapingUplinkBandwidthRequest = 2;

}

message UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest {
  // Network ID
  string networkId = 1;
  UpdateNetworkApplianceTrafficShapingUplinkSelectionRequest updateNetworkApplianceTrafficShapingUplinkSelectionRequest = 2;

}

message UpdateNetworkApplianceTrafficShapingVpnExclusionsRequest {
  // Network ID
  string networkId = 1;
  UpdateNetworkApplianceTrafficShapingVpnExclusionsRequest updateNetworkApplianceTrafficShapingVpnExclusionsRequest = 2;

}

message UpdateNetworkWirelessSsidTrafficShapingRulesRequest {
  // Network ID
  string networkId = 1;
  // Number
  string number = 2;
  UpdateNetworkWirelessSsidTrafficShapingRulesRequest updateNetworkWirelessSsidTrafficShapingRulesRequest = 3;

}

