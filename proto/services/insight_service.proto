/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.insightservice;

import "google/protobuf/empty.proto";
import public "models/create_organization_insight_monitored_media_server_request.proto";
import public "models/get_network_insight_application_health_by_time200_response_inner.proto";
import public "models/get_organization_insight_applications200_response_inner.proto";
import public "models/get_organization_insight_monitored_media_servers200_response_inner.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_organization_insight_monitored_media_server_request.proto";

service InsightService {
  rpc CreateOrganizationInsightMonitoredMediaServer (CreateOrganizationInsightMonitoredMediaServerRequest) returns (TODO_OBJECT_MAPPING);

  rpc DeleteOrganizationInsightMonitoredMediaServer (DeleteOrganizationInsightMonitoredMediaServerRequest) returns (google.protobuf.Empty);

  rpc GetNetworkInsightApplicationHealthByTime (GetNetworkInsightApplicationHealthByTimeRequest) returns (GetNetworkInsightApplicationHealthByTimeResponse);

  rpc GetOrganizationInsightApplications (GetOrganizationInsightApplicationsRequest) returns (GetOrganizationInsightApplicationsResponse);

  rpc GetOrganizationInsightMonitoredMediaServer (GetOrganizationInsightMonitoredMediaServerRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationInsightMonitoredMediaServers (GetOrganizationInsightMonitoredMediaServersRequest) returns (GetOrganizationInsightMonitoredMediaServersResponse);

  rpc UpdateOrganizationInsightMonitoredMediaServer (UpdateOrganizationInsightMonitoredMediaServerRequest) returns (TODO_OBJECT_MAPPING);

}

message CreateOrganizationInsightMonitoredMediaServerRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationInsightMonitoredMediaServerRequest createOrganizationInsightMonitoredMediaServerRequest = 2;

}

message DeleteOrganizationInsightMonitoredMediaServerRequest {
  // Organization ID
  string organizationId = 1;
  // Monitored media server ID
  string monitoredMediaServerId = 2;

}

message GetNetworkInsightApplicationHealthByTimeRequest {
  // Network ID
  string networkId = 1;
  // Application ID
  string applicationId = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.
  float timespan = 5;
  // The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300.
  int32 resolution = 6;

}

message GetNetworkInsightApplicationHealthByTimeResponse {
  repeated GetNetworkInsightApplicationHealthByTime200ResponseInner data = 1;
}

message GetOrganizationInsightApplicationsRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationInsightApplicationsResponse {
  repeated GetOrganizationInsightApplications200ResponseInner data = 1;
}

message GetOrganizationInsightMonitoredMediaServerRequest {
  // Organization ID
  string organizationId = 1;
  // Monitored media server ID
  string monitoredMediaServerId = 2;

}

message GetOrganizationInsightMonitoredMediaServersRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationInsightMonitoredMediaServersResponse {
  repeated GetOrganizationInsightMonitoredMediaServers200ResponseInner data = 1;
}

message UpdateOrganizationInsightMonitoredMediaServerRequest {
  // Organization ID
  string organizationId = 1;
  // Monitored media server ID
  string monitoredMediaServerId = 2;
  UpdateOrganizationInsightMonitoredMediaServerRequest updateOrganizationInsightMonitoredMediaServerRequest = 3;

}

