/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.statusesservice;

import "google/protobuf/empty.proto";
import public "models/get_device_switch_ports_statuses200_response_inner.proto";
import public "models/get_organization_cellular_gateway_uplink_statuses200_response_inner.proto";
import public "models/get_organization_devices_provisioning_statuses200_response_inner.proto";
import public "models/get_organization_devices_statuses200_response_inner.proto";
import public "models/get_organization_devices_statuses_overview200_response.proto";
import public "models/get_organization_uplinks_statuses200_response_inner.proto";
import public "models/get_organization_wireless_devices_ethernet_statuses200_response_inner.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_organization_camera_onboarding_statuses_request.proto";

service StatusesService {
  rpc GetDeviceSwitchPortsStatuses (GetDeviceSwitchPortsStatusesRequest) returns (GetDeviceSwitchPortsStatusesResponse);

  rpc GetDeviceSwitchPortsStatusesPackets (GetDeviceSwitchPortsStatusesPacketsRequest) returns (GetDeviceSwitchPortsStatusesPacketsResponse);

  rpc GetOrganizationApplianceUplinkStatuses (GetOrganizationApplianceUplinkStatusesRequest) returns (GetOrganizationApplianceUplinkStatusesResponse);

  rpc GetOrganizationApplianceVpnStatuses (GetOrganizationApplianceVpnStatusesRequest) returns (GetOrganizationApplianceVpnStatusesResponse);

  rpc GetOrganizationCameraOnboardingStatuses (GetOrganizationCameraOnboardingStatusesRequest) returns (GetOrganizationCameraOnboardingStatusesResponse);

  rpc GetOrganizationCellularGatewayUplinkStatuses (GetOrganizationCellularGatewayUplinkStatusesRequest) returns (GetOrganizationCellularGatewayUplinkStatusesResponse);

  rpc GetOrganizationDevicesProvisioningStatuses (GetOrganizationDevicesProvisioningStatusesRequest) returns (GetOrganizationDevicesProvisioningStatusesResponse);

  rpc GetOrganizationDevicesStatuses (GetOrganizationDevicesStatusesRequest) returns (GetOrganizationDevicesStatusesResponse);

  rpc GetOrganizationDevicesStatusesOverview (GetOrganizationDevicesStatusesOverviewRequest) returns (GetOrganizationDevicesStatusesOverview200Response);

  rpc GetOrganizationUplinksStatuses (GetOrganizationUplinksStatusesRequest) returns (GetOrganizationUplinksStatusesResponse);

  rpc GetOrganizationWirelessDevicesEthernetStatuses (GetOrganizationWirelessDevicesEthernetStatusesRequest) returns (GetOrganizationWirelessDevicesEthernetStatusesResponse);

  rpc UpdateOrganizationCameraOnboardingStatuses (UpdateOrganizationCameraOnboardingStatusesRequest) returns (TODO_OBJECT_MAPPING);

}

message GetDeviceSwitchPortsStatusesRequest {
  // Serial
  string serial = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 3;

}

message GetDeviceSwitchPortsStatusesResponse {
  repeated GetDeviceSwitchPortsStatuses200ResponseInner data = 1;
}

message GetDeviceSwitchPortsStatusesPacketsRequest {
  // Serial
  string serial = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 1 day from today.
  string t0 = 2;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day.
  float timespan = 3;

}

message GetDeviceSwitchPortsStatusesPacketsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationApplianceUplinkStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of network IDs. The returned devices will be filtered to only include these networks.
  repeated string networkIds = 5;
  // A list of serial numbers. The returned devices will be filtered to only include these serials.
  repeated string serials = 6;
  // A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
  repeated string iccids = 7;

}

message GetOrganizationApplianceUplinkStatusesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationApplianceVpnStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 300. Default is 300.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456
  repeated string networkIds = 5;

}

message GetOrganizationApplianceVpnStatusesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationCameraOnboardingStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // A list of serial numbers. The returned cameras will be filtered to only include these serials.
  repeated string serials = 2;
  // A list of network IDs. The returned cameras will be filtered to only include these networks.
  repeated string networkIds = 3;

}

message GetOrganizationCameraOnboardingStatusesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationCellularGatewayUplinkStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of network IDs. The returned devices will be filtered to only include these networks.
  repeated string networkIds = 5;
  // A list of serial numbers. The returned devices will be filtered to only include these serials.
  repeated string serials = 6;
  // A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
  repeated string iccids = 7;

}

message GetOrganizationCellularGatewayUplinkStatusesResponse {
  repeated GetOrganizationCellularGatewayUplinkStatuses200ResponseInner data = 1;
}

message GetOrganizationDevicesProvisioningStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter device by network ID. This filter uses multiple exact matches.
  repeated string networkIds = 5;
  // Optional parameter to filter device by device product types. This filter uses multiple exact matches.
  repeated string productTypes = 6;
  // Optional parameter to filter device by device serial numbers. This filter uses multiple exact matches.
  repeated string serials = 7;
  // An optional parameter to filter devices by the provisioning status. Accepted statuses: unprovisioned, incomplete, complete.
  string status = 8;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
  repeated string tags = 9;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 10;

}

message GetOrganizationDevicesProvisioningStatusesResponse {
  repeated GetOrganizationDevicesProvisioningStatuses200ResponseInner data = 1;
}

message GetOrganizationDevicesStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter devices by network ids.
  repeated string networkIds = 5;
  // Optional parameter to filter devices by serials.
  repeated string serials = 6;
  // Optional parameter to filter devices by statuses. Valid statuses are [\"online\", \"alerting\", \"offline\", \"dormant\"].
  repeated string statuses = 7;
  // An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
  repeated string productTypes = 8;
  // Optional parameter to filter devices by models.
  repeated string models = 9;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
  repeated string tags = 10;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 11;

}

message GetOrganizationDevicesStatusesResponse {
  repeated GetOrganizationDevicesStatuses200ResponseInner data = 1;
}

message GetOrganizationDevicesStatusesOverviewRequest {
  // Organization ID
  string organizationId = 1;
  // An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
  repeated string productTypes = 2;
  // An optional parameter to filter device statuses by network.
  repeated string networkIds = 3;

}

message GetOrganizationUplinksStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of network IDs. The returned devices will be filtered to only include these networks.
  repeated string networkIds = 5;
  // A list of serial numbers. The returned devices will be filtered to only include these serials.
  repeated string serials = 6;
  // A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
  repeated string iccids = 7;

}

message GetOrganizationUplinksStatusesResponse {
  repeated GetOrganizationUplinksStatuses200ResponseInner data = 1;
}

message GetOrganizationWirelessDevicesEthernetStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456
  repeated string networkIds = 5;

}

message GetOrganizationWirelessDevicesEthernetStatusesResponse {
  repeated GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner data = 1;
}

message UpdateOrganizationCameraOnboardingStatusesRequest {
  // Organization ID
  string organizationId = 1;
  UpdateOrganizationCameraOnboardingStatusesRequest updateOrganizationCameraOnboardingStatusesRequest = 2;

}

