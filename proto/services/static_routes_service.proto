/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.staticroutesservice;

import "google/protobuf/empty.proto";
import public "models/create_device_switch_routing_static_route_request.proto";
import public "models/create_network_appliance_static_route_request.proto";
import public "models/get_device_switch_routing_static_route200_response.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_device_switch_routing_static_route_request.proto";
import public "models/update_network_appliance_static_route_request.proto";

service StaticRoutesService {
  rpc CreateDeviceSwitchRoutingStaticRoute (CreateDeviceSwitchRoutingStaticRouteRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateNetworkApplianceStaticRoute (CreateNetworkApplianceStaticRouteRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateNetworkSwitchStackRoutingStaticRoute (CreateNetworkSwitchStackRoutingStaticRouteRequest) returns (TODO_OBJECT_MAPPING);

  rpc DeleteDeviceSwitchRoutingStaticRoute (DeleteDeviceSwitchRoutingStaticRouteRequest) returns (google.protobuf.Empty);

  rpc DeleteNetworkApplianceStaticRoute (DeleteNetworkApplianceStaticRouteRequest) returns (google.protobuf.Empty);

  rpc DeleteNetworkSwitchStackRoutingStaticRoute (DeleteNetworkSwitchStackRoutingStaticRouteRequest) returns (google.protobuf.Empty);

  rpc GetDeviceSwitchRoutingStaticRoute (GetDeviceSwitchRoutingStaticRouteRequest) returns (GetDeviceSwitchRoutingStaticRoute200Response);

  rpc GetDeviceSwitchRoutingStaticRoutes (GetDeviceSwitchRoutingStaticRoutesRequest) returns (GetDeviceSwitchRoutingStaticRoutesResponse);

  rpc GetNetworkApplianceStaticRoute (GetNetworkApplianceStaticRouteRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkApplianceStaticRoutes (GetNetworkApplianceStaticRoutesRequest) returns (GetNetworkApplianceStaticRoutesResponse);

  rpc GetNetworkSwitchStackRoutingStaticRoute (GetNetworkSwitchStackRoutingStaticRouteRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkSwitchStackRoutingStaticRoutes (GetNetworkSwitchStackRoutingStaticRoutesRequest) returns (GetNetworkSwitchStackRoutingStaticRoutesResponse);

  rpc UpdateDeviceSwitchRoutingStaticRoute (UpdateDeviceSwitchRoutingStaticRouteRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkApplianceStaticRoute (UpdateNetworkApplianceStaticRouteRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkSwitchStackRoutingStaticRoute (UpdateNetworkSwitchStackRoutingStaticRouteRequest) returns (TODO_OBJECT_MAPPING);

}

message CreateDeviceSwitchRoutingStaticRouteRequest {
  // Serial
  string serial = 1;
  CreateDeviceSwitchRoutingStaticRouteRequest createDeviceSwitchRoutingStaticRouteRequest = 2;

}

message CreateNetworkApplianceStaticRouteRequest {
  // Network ID
  string networkId = 1;
  CreateNetworkApplianceStaticRouteRequest createNetworkApplianceStaticRouteRequest = 2;

}

message CreateNetworkSwitchStackRoutingStaticRouteRequest {
  // Network ID
  string networkId = 1;
  // Switch stack ID
  string switchStackId = 2;
  CreateDeviceSwitchRoutingStaticRouteRequest createDeviceSwitchRoutingStaticRouteRequest = 3;

}

message DeleteDeviceSwitchRoutingStaticRouteRequest {
  // Serial
  string serial = 1;
  // Static route ID
  string staticRouteId = 2;

}

message DeleteNetworkApplianceStaticRouteRequest {
  // Network ID
  string networkId = 1;
  // Static route ID
  string staticRouteId = 2;

}

message DeleteNetworkSwitchStackRoutingStaticRouteRequest {
  // Network ID
  string networkId = 1;
  // Switch stack ID
  string switchStackId = 2;
  // Static route ID
  string staticRouteId = 3;

}

message GetDeviceSwitchRoutingStaticRouteRequest {
  // Serial
  string serial = 1;
  // Static route ID
  string staticRouteId = 2;

}

message GetDeviceSwitchRoutingStaticRoutesRequest {
  // Serial
  string serial = 1;

}

message GetDeviceSwitchRoutingStaticRoutesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkApplianceStaticRouteRequest {
  // Network ID
  string networkId = 1;
  // Static route ID
  string staticRouteId = 2;

}

message GetNetworkApplianceStaticRoutesRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkApplianceStaticRoutesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkSwitchStackRoutingStaticRouteRequest {
  // Network ID
  string networkId = 1;
  // Switch stack ID
  string switchStackId = 2;
  // Static route ID
  string staticRouteId = 3;

}

message GetNetworkSwitchStackRoutingStaticRoutesRequest {
  // Network ID
  string networkId = 1;
  // Switch stack ID
  string switchStackId = 2;

}

message GetNetworkSwitchStackRoutingStaticRoutesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message UpdateDeviceSwitchRoutingStaticRouteRequest {
  // Serial
  string serial = 1;
  // Static route ID
  string staticRouteId = 2;
  UpdateDeviceSwitchRoutingStaticRouteRequest updateDeviceSwitchRoutingStaticRouteRequest = 3;

}

message UpdateNetworkApplianceStaticRouteRequest {
  // Network ID
  string networkId = 1;
  // Static route ID
  string staticRouteId = 2;
  UpdateNetworkApplianceStaticRouteRequest updateNetworkApplianceStaticRouteRequest = 3;

}

message UpdateNetworkSwitchStackRoutingStaticRouteRequest {
  // Network ID
  string networkId = 1;
  // Switch stack ID
  string switchStackId = 2;
  // Static route ID
  string staticRouteId = 3;
  UpdateDeviceSwitchRoutingStaticRouteRequest updateDeviceSwitchRoutingStaticRouteRequest = 4;

}

