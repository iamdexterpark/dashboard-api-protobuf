/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.alertsservice;

import "google/protobuf/empty.proto";
import public "models/create_organization_alerts_profile_request.proto";
import public "models/get_network_alerts_history200_response_inner.proto";
import public "models/get_network_health_alerts200_response_inner.proto";
import public "models/get_network_sensor_alerts_current_overview_by_metric200_response.proto";
import public "models/get_network_sensor_alerts_overview_by_metric200_response_inner.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_network_alerts_settings_request.proto";
import public "models/update_organization_alerts_profile_request.proto";

service AlertsService {
  rpc CreateOrganizationAlertsProfile (CreateOrganizationAlertsProfileRequest) returns (TODO_OBJECT_MAPPING);

  rpc DeleteOrganizationAlertsProfile (DeleteOrganizationAlertsProfileRequest) returns (google.protobuf.Empty);

  rpc GetNetworkAlertsHistory (GetNetworkAlertsHistoryRequest) returns (GetNetworkAlertsHistoryResponse);

  rpc GetNetworkAlertsSettings (GetNetworkAlertsSettingsRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkHealthAlerts (GetNetworkHealthAlertsRequest) returns (GetNetworkHealthAlertsResponse);

  rpc GetNetworkSensorAlertsCurrentOverviewByMetric (GetNetworkSensorAlertsCurrentOverviewByMetricRequest) returns (GetNetworkSensorAlertsCurrentOverviewByMetric200Response);

  rpc GetNetworkSensorAlertsOverviewByMetric (GetNetworkSensorAlertsOverviewByMetricRequest) returns (GetNetworkSensorAlertsOverviewByMetricResponse);

  rpc GetOrganizationAlertsProfiles (GetOrganizationAlertsProfilesRequest) returns (GetOrganizationAlertsProfilesResponse);

  rpc UpdateNetworkAlertsSettings (UpdateNetworkAlertsSettingsRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationAlertsProfile (UpdateOrganizationAlertsProfileRequest) returns (TODO_OBJECT_MAPPING);

}

message CreateOrganizationAlertsProfileRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationAlertsProfileRequest createOrganizationAlertsProfileRequest = 2;

}

message DeleteOrganizationAlertsProfileRequest {
  // Organization ID
  string organizationId = 1;
  // Alert config ID
  string alertConfigId = 2;

}

message GetNetworkAlertsHistoryRequest {
  // Network ID
  string networkId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;

}

message GetNetworkAlertsHistoryResponse {
  repeated GetNetworkAlertsHistory200ResponseInner data = 1;
}

message GetNetworkAlertsSettingsRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkHealthAlertsRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkHealthAlertsResponse {
  repeated GetNetworkHealthAlerts200ResponseInner data = 1;
}

message GetNetworkSensorAlertsCurrentOverviewByMetricRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkSensorAlertsOverviewByMetricRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 4;
  // The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
  int32 interval = 5;

}

message GetNetworkSensorAlertsOverviewByMetricResponse {
  repeated GetNetworkSensorAlertsOverviewByMetric200ResponseInner data = 1;
}

message GetOrganizationAlertsProfilesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationAlertsProfilesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message UpdateNetworkAlertsSettingsRequest {
  // Network ID
  string networkId = 1;
  UpdateNetworkAlertsSettingsRequest updateNetworkAlertsSettingsRequest = 2;

}

message UpdateOrganizationAlertsProfileRequest {
  // Organization ID
  string organizationId = 1;
  // Alert config ID
  string alertConfigId = 2;
  UpdateOrganizationAlertsProfileRequest updateOrganizationAlertsProfileRequest = 3;

}

