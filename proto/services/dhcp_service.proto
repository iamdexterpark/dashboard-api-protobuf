/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.dhcpservice;

import "google/protobuf/empty.proto";
import public "models/get_network_cellular_gateway_dhcp200_response.proto";
import public "models/get_network_switch_stack_routing_interface_dhcp200_response.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_device_switch_routing_interface_dhcp_request.proto";
import public "models/update_network_cellular_gateway_dhcp_request.proto";
import public "models/update_network_switch_stack_routing_interface_dhcp_request.proto";

service DhcpService {
  rpc GetDeviceApplianceDhcpSubnets (GetDeviceApplianceDhcpSubnetsRequest) returns (GetDeviceApplianceDhcpSubnetsResponse);

  rpc GetDeviceSwitchRoutingInterfaceDhcp (GetDeviceSwitchRoutingInterfaceDhcpRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkCellularGatewayDhcp (GetNetworkCellularGatewayDhcpRequest) returns (GetNetworkCellularGatewayDhcp200Response);

  rpc GetNetworkSwitchStackRoutingInterfaceDhcp (GetNetworkSwitchStackRoutingInterfaceDhcpRequest) returns (GetNetworkSwitchStackRoutingInterfaceDhcp200Response);

  rpc UpdateDeviceSwitchRoutingInterfaceDhcp (UpdateDeviceSwitchRoutingInterfaceDhcpRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkCellularGatewayDhcp (UpdateNetworkCellularGatewayDhcpRequest) returns (GetNetworkCellularGatewayDhcp200Response);

  rpc UpdateNetworkSwitchStackRoutingInterfaceDhcp (UpdateNetworkSwitchStackRoutingInterfaceDhcpRequest) returns (TODO_OBJECT_MAPPING);

}

message GetDeviceApplianceDhcpSubnetsRequest {
  // Serial
  string serial = 1;

}

message GetDeviceApplianceDhcpSubnetsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceSwitchRoutingInterfaceDhcpRequest {
  // Serial
  string serial = 1;
  // Interface ID
  string interfaceId = 2;

}

message GetNetworkCellularGatewayDhcpRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkSwitchStackRoutingInterfaceDhcpRequest {
  // Network ID
  string networkId = 1;
  // Switch stack ID
  string switchStackId = 2;
  // Interface ID
  string interfaceId = 3;

}

message UpdateDeviceSwitchRoutingInterfaceDhcpRequest {
  // Serial
  string serial = 1;
  // Interface ID
  string interfaceId = 2;
  UpdateDeviceSwitchRoutingInterfaceDhcpRequest updateDeviceSwitchRoutingInterfaceDhcpRequest = 3;

}

message UpdateNetworkCellularGatewayDhcpRequest {
  // Network ID
  string networkId = 1;
  UpdateNetworkCellularGatewayDhcpRequest updateNetworkCellularGatewayDhcpRequest = 2;

}

message UpdateNetworkSwitchStackRoutingInterfaceDhcpRequest {
  // Network ID
  string networkId = 1;
  // Switch stack ID
  string switchStackId = 2;
  // Interface ID
  string interfaceId = 3;
  UpdateNetworkSwitchStackRoutingInterfaceDhcpRequest updateNetworkSwitchStackRoutingInterfaceDhcpRequest = 4;

}

