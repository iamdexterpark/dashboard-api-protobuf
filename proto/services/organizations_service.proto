/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.organizationsservice;

import "google/protobuf/empty.proto";
import public "models/assign_organization_licenses_seats200_response.proto";
import public "models/assign_organization_licenses_seats_request.proto";
import public "models/claim_into_organization200_response.proto";
import public "models/claim_into_organization_inventory_request.proto";
import public "models/claim_into_organization_request.proto";
import public "models/clone_organization_request.proto";
import public "models/combine_organization_networks200_response.proto";
import public "models/combine_organization_networks_request.proto";
import public "models/create_organization_action_batch201_response.proto";
import public "models/create_organization_action_batch_request.proto";
import public "models/create_organization_adaptive_policy_acl_request.proto";
import public "models/create_organization_adaptive_policy_group_request.proto";
import public "models/create_organization_adaptive_policy_policy_request.proto";
import public "models/create_organization_admin_request.proto";
import public "models/create_organization_alerts_profile_request.proto";
import public "models/create_organization_branding_policy201_response.proto";
import public "models/create_organization_branding_policy_request.proto";
import public "models/create_organization_config_template_request.proto";
import public "models/create_organization_early_access_features_opt_in_request.proto";
import public "models/create_organization_inventory_onboarding_cloud_monitoring_export_event_request.proto";
import public "models/create_organization_inventory_onboarding_cloud_monitoring_import201_response_inner.proto";
import public "models/create_organization_inventory_onboarding_cloud_monitoring_import_request.proto";
import public "models/create_organization_inventory_onboarding_cloud_monitoring_prepare201_response_inner.proto";
import public "models/create_organization_inventory_onboarding_cloud_monitoring_prepare_request.proto";
import public "models/create_organization_network_request.proto";
import public "models/create_organization_policy_object_request.proto";
import public "models/create_organization_policy_objects_group_request.proto";
import public "models/create_organization_request.proto";
import public "models/create_organization_saml_idp_request.proto";
import public "models/create_organization_saml_role_request.proto";
import public "models/get_network200_response.proto";
import public "models/get_network_floor_plans200_response_inner_devices_inner.proto";
import public "models/get_organization_adaptive_policy_acls200_response_inner.proto";
import public "models/get_organization_adaptive_policy_overview200_response.proto";
import public "models/get_organization_admins200_response_inner.proto";
import public "models/get_organization_branding_policies200_response_inner.proto";
import public "models/get_organization_branding_policies_priorities200_response.proto";
import public "models/get_organization_clients_bandwidth_usage_history200_response_inner.proto";
import public "models/get_organization_clients_overview200_response.proto";
import public "models/get_organization_config_templates200_response_inner.proto";
import public "models/get_organization_devices_availabilities200_response_inner.proto";
import public "models/get_organization_devices_availabilities_change_history200_response_inner.proto";
import public "models/get_organization_devices_provisioning_statuses200_response_inner.proto";
import public "models/get_organization_devices_statuses200_response_inner.proto";
import public "models/get_organization_devices_statuses_overview200_response.proto";
import public "models/get_organization_devices_uplinks_addresses_by_device200_response_inner.proto";
import public "models/get_organization_devices_uplinks_loss_and_latency200_response_inner.proto";
import public "models/get_organization_early_access_features200_response_inner.proto";
import public "models/get_organization_firmware_upgrades200_response_inner.proto";
import public "models/get_organization_firmware_upgrades_by_device200_response_inner.proto";
import public "models/get_organization_inventory_devices200_response_inner.proto";
import public "models/get_organization_inventory_onboarding_cloud_monitoring_imports200_response_inner.proto";
import public "models/get_organization_licenses200_response_inner.proto";
import public "models/get_organization_login_security200_response.proto";
import public "models/get_organization_saml200_response.proto";
import public "models/get_organization_saml_idps200_response_inner.proto";
import public "models/get_organization_saml_roles200_response_inner.proto";
import public "models/get_organization_summary_top_appliances_by_utilization200_response_inner.proto";
import public "models/get_organization_summary_top_clients_by_usage200_response_inner.proto";
import public "models/get_organization_summary_top_clients_manufacturers_by_usage200_response_inner.proto";
import public "models/get_organization_summary_top_devices_by_usage200_response_inner.proto";
import public "models/get_organization_summary_top_devices_models_by_usage200_response_inner.proto";
import public "models/get_organization_summary_top_ssids_by_usage200_response_inner.proto";
import public "models/get_organization_summary_top_switches_by_energy_usage200_response_inner.proto";
import public "models/get_organization_uplinks_statuses200_response_inner.proto";
import public "models/get_organization_webhooks_logs200_response_inner.proto";
import public "models/get_organizations200_response_inner.proto";
import public "models/move_organization_licenses200_response.proto";
import public "models/move_organization_licenses_request.proto";
import public "models/move_organization_licenses_seats200_response.proto";
import public "models/move_organization_licenses_seats_request.proto";
import public "models/release_from_organization_inventory_request.proto";
import public "models/renew_organization_licenses_seats_request.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_organization_action_batch_request.proto";
import public "models/update_organization_adaptive_policy_acl_request.proto";
import public "models/update_organization_adaptive_policy_group_request.proto";
import public "models/update_organization_adaptive_policy_policy_request.proto";
import public "models/update_organization_adaptive_policy_settings_request.proto";
import public "models/update_organization_admin_request.proto";
import public "models/update_organization_alerts_profile_request.proto";
import public "models/update_organization_branding_policies_priorities_request.proto";
import public "models/update_organization_branding_policy_request.proto";
import public "models/update_organization_config_template_request.proto";
import public "models/update_organization_early_access_features_opt_in_request.proto";
import public "models/update_organization_license_request.proto";
import public "models/update_organization_login_security_request.proto";
import public "models/update_organization_policy_object_request.proto";
import public "models/update_organization_policy_objects_group_request.proto";
import public "models/update_organization_request.proto";
import public "models/update_organization_saml_idp_request.proto";
import public "models/update_organization_saml_request.proto";
import public "models/update_organization_saml_role_request.proto";
import public "models/update_organization_snmp_request.proto";

service OrganizationsService {
  rpc AssignOrganizationLicensesSeats (AssignOrganizationLicensesSeatsRequest) returns (AssignOrganizationLicensesSeats200Response);

  rpc ClaimIntoOrganization (ClaimIntoOrganizationRequest) returns (ClaimIntoOrganization200Response);

  rpc ClaimIntoOrganizationInventory (ClaimIntoOrganizationInventoryRequest) returns (ClaimIntoOrganization200Response);

  rpc CloneOrganization (CloneOrganizationRequest) returns (GetOrganizations200ResponseInner);

  rpc CombineOrganizationNetworks (CombineOrganizationNetworksRequest) returns (CombineOrganizationNetworks200Response);

  rpc CreateOrganization (CreateOrganizationRequest) returns (GetOrganizations200ResponseInner);

  rpc CreateOrganizationActionBatch (CreateOrganizationActionBatchRequest) returns (CreateOrganizationActionBatch201Response);

  rpc CreateOrganizationAdaptivePolicyAcl (CreateOrganizationAdaptivePolicyAclRequest) returns (GetOrganizationAdaptivePolicyAcls200ResponseInner);

  rpc CreateOrganizationAdaptivePolicyGroup (CreateOrganizationAdaptivePolicyGroupRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateOrganizationAdaptivePolicyPolicy (CreateOrganizationAdaptivePolicyPolicyRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateOrganizationAdmin (CreateOrganizationAdminRequest) returns (GetOrganizationAdmins200ResponseInner);

  rpc CreateOrganizationAlertsProfile (CreateOrganizationAlertsProfileRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateOrganizationBrandingPolicy (CreateOrganizationBrandingPolicyRequest) returns (CreateOrganizationBrandingPolicy201Response);

  rpc CreateOrganizationConfigTemplate (CreateOrganizationConfigTemplateRequest) returns (GetOrganizationConfigTemplates200ResponseInner);

  rpc CreateOrganizationEarlyAccessFeaturesOptIn (CreateOrganizationEarlyAccessFeaturesOptInRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateOrganizationInventoryOnboardingCloudMonitoringExportEvent (CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateOrganizationInventoryOnboardingCloudMonitoringImport (CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest) returns (CreateOrganizationInventoryOnboardingCloudMonitoringImportResponse);

  rpc CreateOrganizationInventoryOnboardingCloudMonitoringPrepare (CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest) returns (CreateOrganizationInventoryOnboardingCloudMonitoringPrepareResponse);

  rpc CreateOrganizationNetwork (CreateOrganizationNetworkRequest) returns (GetNetwork200Response);

  rpc CreateOrganizationPolicyObject (CreateOrganizationPolicyObjectRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateOrganizationPolicyObjectsGroup (CreateOrganizationPolicyObjectsGroupRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateOrganizationSamlIdp (CreateOrganizationSamlIdpRequest) returns (CreateOrganizationSamlIdpResponse);

  rpc CreateOrganizationSamlRole (CreateOrganizationSamlRoleRequest) returns (TODO_OBJECT_MAPPING);

  rpc DeleteOrganization (DeleteOrganizationRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationActionBatch (DeleteOrganizationActionBatchRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationAdaptivePolicyAcl (DeleteOrganizationAdaptivePolicyAclRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationAdaptivePolicyGroup (DeleteOrganizationAdaptivePolicyGroupRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationAdaptivePolicyPolicy (DeleteOrganizationAdaptivePolicyPolicyRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationAdmin (DeleteOrganizationAdminRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationAlertsProfile (DeleteOrganizationAlertsProfileRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationBrandingPolicy (DeleteOrganizationBrandingPolicyRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationConfigTemplate (DeleteOrganizationConfigTemplateRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationEarlyAccessFeaturesOptIn (DeleteOrganizationEarlyAccessFeaturesOptInRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationPolicyObject (DeleteOrganizationPolicyObjectRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationPolicyObjectsGroup (DeleteOrganizationPolicyObjectsGroupRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationSamlIdp (DeleteOrganizationSamlIdpRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationSamlRole (DeleteOrganizationSamlRoleRequest) returns (google.protobuf.Empty);

  rpc GetOrganization (GetOrganizationRequest) returns (GetOrganizations200ResponseInner);

  rpc GetOrganizationActionBatch (GetOrganizationActionBatchRequest) returns (CreateOrganizationActionBatch201Response);

  rpc GetOrganizationActionBatches (GetOrganizationActionBatchesRequest) returns (GetOrganizationActionBatchesResponse);

  rpc GetOrganizationAdaptivePolicyAcl (GetOrganizationAdaptivePolicyAclRequest) returns (GetOrganizationAdaptivePolicyAcls200ResponseInner);

  rpc GetOrganizationAdaptivePolicyAcls (GetOrganizationAdaptivePolicyAclsRequest) returns (GetOrganizationAdaptivePolicyAclsResponse);

  rpc GetOrganizationAdaptivePolicyGroup (GetOrganizationAdaptivePolicyGroupRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationAdaptivePolicyGroups (GetOrganizationAdaptivePolicyGroupsRequest) returns (GetOrganizationAdaptivePolicyGroupsResponse);

  rpc GetOrganizationAdaptivePolicyOverview (GetOrganizationAdaptivePolicyOverviewRequest) returns (GetOrganizationAdaptivePolicyOverview200Response);

  rpc GetOrganizationAdaptivePolicyPolicies (GetOrganizationAdaptivePolicyPoliciesRequest) returns (GetOrganizationAdaptivePolicyPoliciesResponse);

  rpc GetOrganizationAdaptivePolicyPolicy (GetOrganizationAdaptivePolicyPolicyRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationAdaptivePolicySettings (GetOrganizationAdaptivePolicySettingsRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationAdmins (GetOrganizationAdminsRequest) returns (GetOrganizationAdminsResponse);

  rpc GetOrganizationAlertsProfiles (GetOrganizationAlertsProfilesRequest) returns (GetOrganizationAlertsProfilesResponse);

  rpc GetOrganizationBrandingPolicies (GetOrganizationBrandingPoliciesRequest) returns (GetOrganizationBrandingPoliciesResponse);

  rpc GetOrganizationBrandingPoliciesPriorities (GetOrganizationBrandingPoliciesPrioritiesRequest) returns (GetOrganizationBrandingPoliciesPriorities200Response);

  rpc GetOrganizationBrandingPolicy (GetOrganizationBrandingPolicyRequest) returns (GetOrganizationBrandingPolicies200ResponseInner);

  rpc GetOrganizationClientsBandwidthUsageHistory (GetOrganizationClientsBandwidthUsageHistoryRequest) returns (GetOrganizationClientsBandwidthUsageHistoryResponse);

  rpc GetOrganizationClientsOverview (GetOrganizationClientsOverviewRequest) returns (GetOrganizationClientsOverview200Response);

  rpc GetOrganizationClientsSearch (GetOrganizationClientsSearchRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationConfigTemplate (GetOrganizationConfigTemplateRequest) returns (GetOrganizationConfigTemplates200ResponseInner);

  rpc GetOrganizationConfigTemplates (GetOrganizationConfigTemplatesRequest) returns (GetOrganizationConfigTemplatesResponse);

  rpc GetOrganizationConfigurationChanges (GetOrganizationConfigurationChangesRequest) returns (GetOrganizationConfigurationChangesResponse);

  rpc GetOrganizationDevices (GetOrganizationDevicesRequest) returns (GetOrganizationDevicesResponse);

  rpc GetOrganizationDevicesAvailabilities (GetOrganizationDevicesAvailabilitiesRequest) returns (GetOrganizationDevicesAvailabilitiesResponse);

  rpc GetOrganizationDevicesAvailabilitiesChangeHistory (GetOrganizationDevicesAvailabilitiesChangeHistoryRequest) returns (GetOrganizationDevicesAvailabilitiesChangeHistoryResponse);

  rpc GetOrganizationDevicesProvisioningStatuses (GetOrganizationDevicesProvisioningStatusesRequest) returns (GetOrganizationDevicesProvisioningStatusesResponse);

  rpc GetOrganizationDevicesStatuses (GetOrganizationDevicesStatusesRequest) returns (GetOrganizationDevicesStatusesResponse);

  rpc GetOrganizationDevicesStatusesOverview (GetOrganizationDevicesStatusesOverviewRequest) returns (GetOrganizationDevicesStatusesOverview200Response);

  rpc GetOrganizationDevicesUplinksAddressesByDevice (GetOrganizationDevicesUplinksAddressesByDeviceRequest) returns (GetOrganizationDevicesUplinksAddressesByDeviceResponse);

  rpc GetOrganizationDevicesUplinksLossAndLatency (GetOrganizationDevicesUplinksLossAndLatencyRequest) returns (GetOrganizationDevicesUplinksLossAndLatencyResponse);

  rpc GetOrganizationEarlyAccessFeatures (GetOrganizationEarlyAccessFeaturesRequest) returns (GetOrganizationEarlyAccessFeaturesResponse);

  rpc GetOrganizationEarlyAccessFeaturesOptIn (GetOrganizationEarlyAccessFeaturesOptInRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationEarlyAccessFeaturesOptIns (GetOrganizationEarlyAccessFeaturesOptInsRequest) returns (GetOrganizationEarlyAccessFeaturesOptInsResponse);

  rpc GetOrganizationFirmwareUpgrades (GetOrganizationFirmwareUpgradesRequest) returns (GetOrganizationFirmwareUpgradesResponse);

  rpc GetOrganizationFirmwareUpgradesByDevice (GetOrganizationFirmwareUpgradesByDeviceRequest) returns (GetOrganizationFirmwareUpgradesByDeviceResponse);

  rpc GetOrganizationInventoryDevice (GetOrganizationInventoryDeviceRequest) returns (GetOrganizationInventoryDevices200ResponseInner);

  rpc GetOrganizationInventoryDevices (GetOrganizationInventoryDevicesRequest) returns (GetOrganizationInventoryDevicesResponse);

  rpc GetOrganizationInventoryOnboardingCloudMonitoringImports (GetOrganizationInventoryOnboardingCloudMonitoringImportsRequest) returns (GetOrganizationInventoryOnboardingCloudMonitoringImportsResponse);

  rpc GetOrganizationInventoryOnboardingCloudMonitoringNetworks (GetOrganizationInventoryOnboardingCloudMonitoringNetworksRequest) returns (GetOrganizationInventoryOnboardingCloudMonitoringNetworksResponse);

  rpc GetOrganizationLicense (GetOrganizationLicenseRequest) returns (GetOrganizationLicenses200ResponseInner);

  rpc GetOrganizationLicenses (GetOrganizationLicensesRequest) returns (GetOrganizationLicensesResponse);

  rpc GetOrganizationLicensesOverview (GetOrganizationLicensesOverviewRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationLoginSecurity (GetOrganizationLoginSecurityRequest) returns (GetOrganizationLoginSecurity200Response);

  rpc GetOrganizationNetworks (GetOrganizationNetworksRequest) returns (GetOrganizationNetworksResponse);

  rpc GetOrganizationOpenapiSpec (GetOrganizationOpenapiSpecRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationPolicyObject (GetOrganizationPolicyObjectRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationPolicyObjects (GetOrganizationPolicyObjectsRequest) returns (GetOrganizationPolicyObjectsResponse);

  rpc GetOrganizationPolicyObjectsGroup (GetOrganizationPolicyObjectsGroupRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationPolicyObjectsGroups (GetOrganizationPolicyObjectsGroupsRequest) returns (GetOrganizationPolicyObjectsGroupsResponse);

  rpc GetOrganizationSaml (GetOrganizationSamlRequest) returns (GetOrganizationSaml200Response);

  rpc GetOrganizationSamlIdp (GetOrganizationSamlIdpRequest) returns (GetOrganizationSamlIdps200ResponseInner);

  rpc GetOrganizationSamlIdps (GetOrganizationSamlIdpsRequest) returns (GetOrganizationSamlIdpsResponse);

  rpc GetOrganizationSamlRole (GetOrganizationSamlRoleRequest) returns (GetOrganizationSamlRoles200ResponseInner);

  rpc GetOrganizationSamlRoles (GetOrganizationSamlRolesRequest) returns (GetOrganizationSamlRolesResponse);

  rpc GetOrganizationSnmp (GetOrganizationSnmpRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationSummaryTopAppliancesByUtilization (GetOrganizationSummaryTopAppliancesByUtilizationRequest) returns (GetOrganizationSummaryTopAppliancesByUtilizationResponse);

  rpc GetOrganizationSummaryTopClientsByUsage (GetOrganizationSummaryTopClientsByUsageRequest) returns (GetOrganizationSummaryTopClientsByUsageResponse);

  rpc GetOrganizationSummaryTopClientsManufacturersByUsage (GetOrganizationSummaryTopClientsManufacturersByUsageRequest) returns (GetOrganizationSummaryTopClientsManufacturersByUsageResponse);

  rpc GetOrganizationSummaryTopDevicesByUsage (GetOrganizationSummaryTopDevicesByUsageRequest) returns (GetOrganizationSummaryTopDevicesByUsageResponse);

  rpc GetOrganizationSummaryTopDevicesModelsByUsage (GetOrganizationSummaryTopDevicesModelsByUsageRequest) returns (GetOrganizationSummaryTopDevicesModelsByUsageResponse);

  rpc GetOrganizationSummaryTopSsidsByUsage (GetOrganizationSummaryTopSsidsByUsageRequest) returns (GetOrganizationSummaryTopSsidsByUsageResponse);

  rpc GetOrganizationSummaryTopSwitchesByEnergyUsage (GetOrganizationSummaryTopSwitchesByEnergyUsageRequest) returns (GetOrganizationSummaryTopSwitchesByEnergyUsageResponse);

  rpc GetOrganizationUplinksStatuses (GetOrganizationUplinksStatusesRequest) returns (GetOrganizationUplinksStatusesResponse);

  rpc GetOrganizationWebhooksAlertTypes (GetOrganizationWebhooksAlertTypesRequest) returns (GetOrganizationWebhooksAlertTypesResponse);

  rpc GetOrganizationWebhooksLogs (GetOrganizationWebhooksLogsRequest) returns (GetOrganizationWebhooksLogsResponse);

  rpc GetOrganizations (google.protobuf.Empty) returns (GetOrganizationsResponse);

  rpc MoveOrganizationLicenses (MoveOrganizationLicensesRequest) returns (MoveOrganizationLicenses200Response);

  rpc MoveOrganizationLicensesSeats (MoveOrganizationLicensesSeatsRequest) returns (MoveOrganizationLicensesSeats200Response);

  rpc ReleaseFromOrganizationInventory (ReleaseFromOrganizationInventoryRequest) returns (TODO_OBJECT_MAPPING);

  rpc RenewOrganizationLicensesSeats (RenewOrganizationLicensesSeatsRequest) returns (AssignOrganizationLicensesSeats200Response);

  rpc UpdateOrganization (UpdateOrganizationRequest) returns (GetOrganizations200ResponseInner);

  rpc UpdateOrganizationActionBatch (UpdateOrganizationActionBatchRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationAdaptivePolicyAcl (UpdateOrganizationAdaptivePolicyAclRequest) returns (GetOrganizationAdaptivePolicyAcls200ResponseInner);

  rpc UpdateOrganizationAdaptivePolicyGroup (UpdateOrganizationAdaptivePolicyGroupRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationAdaptivePolicyPolicy (UpdateOrganizationAdaptivePolicyPolicyRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationAdaptivePolicySettings (UpdateOrganizationAdaptivePolicySettingsRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationAdmin (UpdateOrganizationAdminRequest) returns (GetOrganizationAdmins200ResponseInner);

  rpc UpdateOrganizationAlertsProfile (UpdateOrganizationAlertsProfileRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationBrandingPoliciesPriorities (UpdateOrganizationBrandingPoliciesPrioritiesRequest) returns (GetOrganizationBrandingPoliciesPriorities200Response);

  rpc UpdateOrganizationBrandingPolicy (UpdateOrganizationBrandingPolicyRequest) returns (GetOrganizationBrandingPolicies200ResponseInner);

  rpc UpdateOrganizationConfigTemplate (UpdateOrganizationConfigTemplateRequest) returns (GetOrganizationConfigTemplates200ResponseInner);

  rpc UpdateOrganizationEarlyAccessFeaturesOptIn (UpdateOrganizationEarlyAccessFeaturesOptInRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationLicense (UpdateOrganizationLicenseRequest) returns (GetOrganizationLicenses200ResponseInner);

  rpc UpdateOrganizationLoginSecurity (UpdateOrganizationLoginSecurityRequest) returns (GetOrganizationLoginSecurity200Response);

  rpc UpdateOrganizationPolicyObject (UpdateOrganizationPolicyObjectRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationPolicyObjectsGroup (UpdateOrganizationPolicyObjectsGroupRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationSaml (UpdateOrganizationSamlRequest) returns (GetOrganizationSaml200Response);

  rpc UpdateOrganizationSamlIdp (UpdateOrganizationSamlIdpRequest) returns (UpdateOrganizationSamlIdpResponse);

  rpc UpdateOrganizationSamlRole (UpdateOrganizationSamlRoleRequest) returns (GetOrganizationSamlRoles200ResponseInner);

  rpc UpdateOrganizationSnmp (UpdateOrganizationSnmpRequest) returns (TODO_OBJECT_MAPPING);

}

message AssignOrganizationLicensesSeatsRequest {
  // Organization ID
  string organizationId = 1;
  AssignOrganizationLicensesSeatsRequest assignOrganizationLicensesSeatsRequest = 2;

}

message ClaimIntoOrganizationRequest {
  // Organization ID
  string organizationId = 1;
  ClaimIntoOrganizationRequest claimIntoOrganizationRequest = 2;

}

message ClaimIntoOrganizationInventoryRequest {
  // Organization ID
  string organizationId = 1;
  ClaimIntoOrganizationInventoryRequest claimIntoOrganizationInventoryRequest = 2;

}

message CloneOrganizationRequest {
  // Organization ID
  string organizationId = 1;
  CloneOrganizationRequest cloneOrganizationRequest = 2;

}

message CombineOrganizationNetworksRequest {
  // Organization ID
  string organizationId = 1;
  CombineOrganizationNetworksRequest combineOrganizationNetworksRequest = 2;

}

message CreateOrganizationRequest {
  CreateOrganizationRequest createOrganizationRequest = 1;

}

message CreateOrganizationActionBatchRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationActionBatchRequest createOrganizationActionBatchRequest = 2;

}

message CreateOrganizationAdaptivePolicyAclRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationAdaptivePolicyAclRequest createOrganizationAdaptivePolicyAclRequest = 2;

}

message CreateOrganizationAdaptivePolicyGroupRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationAdaptivePolicyGroupRequest createOrganizationAdaptivePolicyGroupRequest = 2;

}

message CreateOrganizationAdaptivePolicyPolicyRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationAdaptivePolicyPolicyRequest createOrganizationAdaptivePolicyPolicyRequest = 2;

}

message CreateOrganizationAdminRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationAdminRequest createOrganizationAdminRequest = 2;

}

message CreateOrganizationAlertsProfileRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationAlertsProfileRequest createOrganizationAlertsProfileRequest = 2;

}

message CreateOrganizationBrandingPolicyRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationBrandingPolicyRequest createOrganizationBrandingPolicyRequest = 2;

}

message CreateOrganizationConfigTemplateRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationConfigTemplateRequest createOrganizationConfigTemplateRequest = 2;

}

message CreateOrganizationEarlyAccessFeaturesOptInRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationEarlyAccessFeaturesOptInRequest createOrganizationEarlyAccessFeaturesOptInRequest = 2;

}

message CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest createOrganizationInventoryOnboardingCloudMonitoringExportEventRequest = 2;

}

message CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest createOrganizationInventoryOnboardingCloudMonitoringImportRequest = 2;

}

message CreateOrganizationInventoryOnboardingCloudMonitoringImportResponse {
  repeated CreateOrganizationInventoryOnboardingCloudMonitoringImport201ResponseInner data = 1;
}

message CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest createOrganizationInventoryOnboardingCloudMonitoringPrepareRequest = 2;

}

message CreateOrganizationInventoryOnboardingCloudMonitoringPrepareResponse {
  repeated CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInner data = 1;
}

message CreateOrganizationNetworkRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationNetworkRequest createOrganizationNetworkRequest = 2;

}

message CreateOrganizationPolicyObjectRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationPolicyObjectRequest createOrganizationPolicyObjectRequest = 2;

}

message CreateOrganizationPolicyObjectsGroupRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationPolicyObjectsGroupRequest createOrganizationPolicyObjectsGroupRequest = 2;

}

message CreateOrganizationSamlIdpRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationSamlIdpRequest createOrganizationSamlIdpRequest = 2;

}

message CreateOrganizationSamlIdpResponse {
  repeated GetOrganizationSamlIdps200ResponseInner data = 1;
}

message CreateOrganizationSamlRoleRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationSamlRoleRequest createOrganizationSamlRoleRequest = 2;

}

message DeleteOrganizationRequest {
  // Organization ID
  string organizationId = 1;

}

message DeleteOrganizationActionBatchRequest {
  // Organization ID
  string organizationId = 1;
  // Action batch ID
  string actionBatchId = 2;

}

message DeleteOrganizationAdaptivePolicyAclRequest {
  // Organization ID
  string organizationId = 1;
  // Acl ID
  string aclId = 2;

}

message DeleteOrganizationAdaptivePolicyGroupRequest {
  // Organization ID
  string organizationId = 1;
  // ID
  string id = 2;

}

message DeleteOrganizationAdaptivePolicyPolicyRequest {
  // Organization ID
  string organizationId = 1;
  // ID
  string id = 2;

}

message DeleteOrganizationAdminRequest {
  // Organization ID
  string organizationId = 1;
  // Admin ID
  string adminId = 2;

}

message DeleteOrganizationAlertsProfileRequest {
  // Organization ID
  string organizationId = 1;
  // Alert config ID
  string alertConfigId = 2;

}

message DeleteOrganizationBrandingPolicyRequest {
  // Organization ID
  string organizationId = 1;
  // Branding policy ID
  string brandingPolicyId = 2;

}

message DeleteOrganizationConfigTemplateRequest {
  // Organization ID
  string organizationId = 1;
  // Config template ID
  string configTemplateId = 2;

}

message DeleteOrganizationEarlyAccessFeaturesOptInRequest {
  // Organization ID
  string organizationId = 1;
  // Opt in ID
  string optInId = 2;

}

message DeleteOrganizationPolicyObjectRequest {
  // Organization ID
  string organizationId = 1;
  // Policy object ID
  string policyObjectId = 2;

}

message DeleteOrganizationPolicyObjectsGroupRequest {
  // Organization ID
  string organizationId = 1;
  // Policy object group ID
  string policyObjectGroupId = 2;

}

message DeleteOrganizationSamlIdpRequest {
  // Organization ID
  string organizationId = 1;
  // Idp ID
  string idpId = 2;

}

message DeleteOrganizationSamlRoleRequest {
  // Organization ID
  string organizationId = 1;
  // Saml role ID
  string samlRoleId = 2;

}

message GetOrganizationRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationActionBatchRequest {
  // Organization ID
  string organizationId = 1;
  // Action batch ID
  string actionBatchId = 2;

}

message GetOrganizationActionBatchesRequest {
  // Organization ID
  string organizationId = 1;
  // Filter batches by status. Valid types are pending, completed, and failed.
  string status = 2;

}

message GetOrganizationActionBatchesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationAdaptivePolicyAclRequest {
  // Organization ID
  string organizationId = 1;
  // Acl ID
  string aclId = 2;

}

message GetOrganizationAdaptivePolicyAclsRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationAdaptivePolicyAclsResponse {
  repeated GetOrganizationAdaptivePolicyAcls200ResponseInner data = 1;
}

message GetOrganizationAdaptivePolicyGroupRequest {
  // Organization ID
  string organizationId = 1;
  // ID
  string id = 2;

}

message GetOrganizationAdaptivePolicyGroupsRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationAdaptivePolicyGroupsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationAdaptivePolicyOverviewRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationAdaptivePolicyPoliciesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationAdaptivePolicyPoliciesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationAdaptivePolicyPolicyRequest {
  // Organization ID
  string organizationId = 1;
  // ID
  string id = 2;

}

message GetOrganizationAdaptivePolicySettingsRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationAdminsRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationAdminsResponse {
  repeated GetOrganizationAdmins200ResponseInner data = 1;
}

message GetOrganizationAlertsProfilesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationAlertsProfilesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationBrandingPoliciesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationBrandingPoliciesResponse {
  repeated GetOrganizationBrandingPolicies200ResponseInner data = 1;
}

message GetOrganizationBrandingPoliciesPrioritiesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationBrandingPolicyRequest {
  // Organization ID
  string organizationId = 1;
  // Branding policy ID
  string brandingPolicyId = 2;

}

message GetOrganizationClientsBandwidthUsageHistoryRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationClientsBandwidthUsageHistoryResponse {
  repeated GetOrganizationClientsBandwidthUsageHistory200ResponseInner data = 1;
}

message GetOrganizationClientsOverviewRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationClientsSearchRequest {
  // Organization ID
  string organizationId = 1;
  // The MAC address of the client. Required.
  string mac = 2;
  // The number of entries per page returned. Acceptable range is 3 - 5. Default is 5.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;

}

message GetOrganizationConfigTemplateRequest {
  // Organization ID
  string organizationId = 1;
  // Config template ID
  string configTemplateId = 2;

}

message GetOrganizationConfigTemplatesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationConfigTemplatesResponse {
  repeated GetOrganizationConfigTemplates200ResponseInner data = 1;
}

message GetOrganizationConfigurationChangesRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 365 days.
  float timespan = 4;
  // The number of entries per page returned. Acceptable range is 3 - 5000. Default is 5000.
  int32 perPage = 5;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 6;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 7;
  // Filters on the given network
  string networkId = 8;
  // Filters on the given Admin
  string adminId = 9;

}

message GetOrganizationConfigurationChangesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationDevicesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Filter results by whether or not the device's configuration has been updated after the given timestamp
  string configurationUpdatedAfter = 5;
  // Optional parameter to filter devices by network.
  repeated string networkIds = 6;
  // Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
  repeated string productTypes = 7;
  // Optional parameter to filter devices by tags.
  repeated string tags = 8;
  // Optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 9;
  // Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match.
  string name = 10;
  // Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match.
  string mac = 11;
  // Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match.
  string serial = 12;
  // Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match.
  string model = 13;
  // Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match.
  repeated string macs = 14;
  // Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match.
  repeated string serials = 15;
  // Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices.
  repeated string sensorMetrics = 16;
  // Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices.
  repeated string sensorAlertProfileIds = 17;
  // Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.
  repeated string models = 18;

}

message GetOrganizationDevicesResponse {
  repeated GetNetworkFloorPlans200ResponseInnerDevicesInner data = 1;
}

message GetOrganizationDevicesAvailabilitiesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches.
  repeated string networkIds = 5;
  // Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches.
  repeated string productTypes = 6;
  // Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
  repeated string serials = 7;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
  repeated string tags = 8;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 9;

}

message GetOrganizationDevicesAvailabilitiesResponse {
  repeated GetOrganizationDevicesAvailabilities200ResponseInner data = 1;
}

message GetOrganizationDevicesAvailabilitiesChangeHistoryRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // The beginning of the timespan for the data. The maximum lookback period is 14 days from today.
  string t0 = 5;
  // The end of the timespan for the data. t1 can be a maximum of 14 days after t0.
  string t1 = 6;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 days. The default is 1 day.
  float timespan = 7;
  // Optional parameter to filter device availabilities history by device serial numbers
  repeated string serials = 8;
  // Optional parameter to filter device availabilities history by device product types
  repeated string productTypes = 9;
  // Optional parameter to filter device availabilities history by network IDs
  repeated string networkIds = 10;
  // Optional parameter to filter device availabilities history by device statuses
  repeated string statuses = 11;

}

message GetOrganizationDevicesAvailabilitiesChangeHistoryResponse {
  repeated GetOrganizationDevicesAvailabilitiesChangeHistory200ResponseInner data = 1;
}

message GetOrganizationDevicesProvisioningStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter device by network ID. This filter uses multiple exact matches.
  repeated string networkIds = 5;
  // Optional parameter to filter device by device product types. This filter uses multiple exact matches.
  repeated string productTypes = 6;
  // Optional parameter to filter device by device serial numbers. This filter uses multiple exact matches.
  repeated string serials = 7;
  // An optional parameter to filter devices by the provisioning status. Accepted statuses: unprovisioned, incomplete, complete.
  string status = 8;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
  repeated string tags = 9;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 10;

}

message GetOrganizationDevicesProvisioningStatusesResponse {
  repeated GetOrganizationDevicesProvisioningStatuses200ResponseInner data = 1;
}

message GetOrganizationDevicesStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter devices by network ids.
  repeated string networkIds = 5;
  // Optional parameter to filter devices by serials.
  repeated string serials = 6;
  // Optional parameter to filter devices by statuses. Valid statuses are [\"online\", \"alerting\", \"offline\", \"dormant\"].
  repeated string statuses = 7;
  // An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
  repeated string productTypes = 8;
  // Optional parameter to filter devices by models.
  repeated string models = 9;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
  repeated string tags = 10;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 11;

}

message GetOrganizationDevicesStatusesResponse {
  repeated GetOrganizationDevicesStatuses200ResponseInner data = 1;
}

message GetOrganizationDevicesStatusesOverviewRequest {
  // Organization ID
  string organizationId = 1;
  // An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
  repeated string productTypes = 2;
  // An optional parameter to filter device statuses by network.
  repeated string networkIds = 3;

}

message GetOrganizationDevicesUplinksAddressesByDeviceRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter device uplinks by network ID. This filter uses multiple exact matches.
  repeated string networkIds = 5;
  // Optional parameter to filter device uplinks by device product types. This filter uses multiple exact matches.
  repeated string productTypes = 6;
  // Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
  repeated string serials = 7;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
  repeated string tags = 8;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 9;

}

message GetOrganizationDevicesUplinksAddressesByDeviceResponse {
  repeated GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner data = 1;
}

message GetOrganizationDevicesUplinksLossAndLatencyRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
  float timespan = 4;
  // Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks.
  string uplink = 5;
  // Optional filter for a specific destination IP. Default will return all destination IPs.
  string ip = 6;

}

message GetOrganizationDevicesUplinksLossAndLatencyResponse {
  repeated GetOrganizationDevicesUplinksLossAndLatency200ResponseInner data = 1;
}

message GetOrganizationEarlyAccessFeaturesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationEarlyAccessFeaturesResponse {
  repeated GetOrganizationEarlyAccessFeatures200ResponseInner data = 1;
}

message GetOrganizationEarlyAccessFeaturesOptInRequest {
  // Organization ID
  string organizationId = 1;
  // Opt in ID
  string optInId = 2;

}

message GetOrganizationEarlyAccessFeaturesOptInsRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationEarlyAccessFeaturesOptInsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationFirmwareUpgradesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter the upgrade by status.
  repeated string status = 5;
  // Optional parameter to filter the upgrade by product type.
  repeated string productTypes = 6;

}

message GetOrganizationFirmwareUpgradesResponse {
  repeated GetOrganizationFirmwareUpgrades200ResponseInner data = 1;
}

message GetOrganizationFirmwareUpgradesByDeviceRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter by network
  repeated string networkIds = 5;
  // Optional parameter to filter by serial number.  All returned devices will have a serial number that is an exact match.
  repeated string serials = 6;
  // Optional parameter to filter by one or more MAC addresses belonging to devices. All devices returned belong to MAC addresses that are an exact match.
  repeated string macs = 7;
  // Optional parameter to filter by firmware upgrade batch ids.
  repeated string firmwareUpgradeBatchIds = 8;
  // Optional parameter to filter by firmware upgrade statuses.
  repeated string upgradeStatuses = 9;

}

message GetOrganizationFirmwareUpgradesByDeviceResponse {
  repeated GetOrganizationFirmwareUpgradesByDevice200ResponseInner data = 1;
}

message GetOrganizationInventoryDeviceRequest {
  // Organization ID
  string organizationId = 1;
  // Serial
  string serial = 2;

}

message GetOrganizationInventoryDevicesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Filter results by used or unused inventory. Accepted values are 'used' or 'unused'.
  string usedState = 5;
  // Search for devices in inventory based on serial number, mac address, or model.
  string search = 6;
  // Search for devices in inventory based on mac addresses.
  repeated string macs = 7;
  // Search for devices in inventory based on network ids.
  repeated string networkIds = 8;
  // Search for devices in inventory based on serials.
  repeated string serials = 9;
  // Search for devices in inventory based on model.
  repeated string models = 10;
  // Search for devices in inventory based on order numbers.
  repeated string orderNumbers = 11;
  // Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
  repeated string tags = 12;
  // To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'.
  string tagsFilterType = 13;
  // Filter devices by product type. Accepted values are appliance, camera, cellularGateway, sensor, switch, systemsManager, and wireless.
  repeated string productTypes = 14;

}

message GetOrganizationInventoryDevicesResponse {
  repeated GetOrganizationInventoryDevices200ResponseInner data = 1;
}

message GetOrganizationInventoryOnboardingCloudMonitoringImportsRequest {
  // Organization ID
  string organizationId = 1;
  // import ids from an imports
  repeated string importIds = 2;

}

message GetOrganizationInventoryOnboardingCloudMonitoringImportsResponse {
  repeated GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInner data = 1;
}

message GetOrganizationInventoryOnboardingCloudMonitoringNetworksRequest {
  // Organization ID
  string organizationId = 1;
  // Device Type switch or wireless controller
  string deviceType = 2;
  // The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;

}

message GetOrganizationInventoryOnboardingCloudMonitoringNetworksResponse {
  repeated GetNetwork200Response data = 1;
}

message GetOrganizationLicenseRequest {
  // Organization ID
  string organizationId = 1;
  // License ID
  string licenseId = 2;

}

message GetOrganizationLicensesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Filter the licenses to those assigned to a particular device. Returned in the same order that they are queued to the device.
  string deviceSerial = 5;
  // Filter the licenses to those assigned in a particular network
  string networkId = 6;
  // Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'recentlyQueued', 'unused' or 'unusedActive'
  string state = 7;

}

message GetOrganizationLicensesResponse {
  repeated GetOrganizationLicenses200ResponseInner data = 1;
}

message GetOrganizationLicensesOverviewRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationLoginSecurityRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationNetworksRequest {
  // Organization ID
  string organizationId = 1;
  // An optional parameter that is the ID of a config template. Will return all networks bound to that template.
  string configTemplateId = 2;
  // An optional parameter to filter config template bound networks. If configTemplateId is set, this cannot be false.
  bool isBoundToConfigTemplate = 3;
  // An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
  repeated string tags = 4;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 5;
  // The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.
  int32 perPage = 6;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 7;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 8;

}

message GetOrganizationNetworksResponse {
  repeated GetNetwork200Response data = 1;
}

message GetOrganizationOpenapiSpecRequest {
  // Organization ID
  string organizationId = 1;
  // OpenAPI Specification version to return. Default is 2
  int32 version = 2;

}

message GetOrganizationPolicyObjectRequest {
  // Organization ID
  string organizationId = 1;
  // Policy object ID
  string policyObjectId = 2;

}

message GetOrganizationPolicyObjectsRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 10 - 5000. Default is 5000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;

}

message GetOrganizationPolicyObjectsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationPolicyObjectsGroupRequest {
  // Organization ID
  string organizationId = 1;
  // Policy object group ID
  string policyObjectGroupId = 2;

}

message GetOrganizationPolicyObjectsGroupsRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 10 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;

}

message GetOrganizationPolicyObjectsGroupsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationSamlRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationSamlIdpRequest {
  // Organization ID
  string organizationId = 1;
  // Idp ID
  string idpId = 2;

}

message GetOrganizationSamlIdpsRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationSamlIdpsResponse {
  repeated GetOrganizationSamlIdps200ResponseInner data = 1;
}

message GetOrganizationSamlRoleRequest {
  // Organization ID
  string organizationId = 1;
  // Saml role ID
  string samlRoleId = 2;

}

message GetOrganizationSamlRolesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationSamlRolesResponse {
  repeated GetOrganizationSamlRoles200ResponseInner data = 1;
}

message GetOrganizationSnmpRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationSummaryTopAppliancesByUtilizationRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 25 minutes and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopAppliancesByUtilizationResponse {
  repeated GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner data = 1;
}

message GetOrganizationSummaryTopClientsByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopClientsByUsageResponse {
  repeated GetOrganizationSummaryTopClientsByUsage200ResponseInner data = 1;
}

message GetOrganizationSummaryTopClientsManufacturersByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopClientsManufacturersByUsageResponse {
  repeated GetOrganizationSummaryTopClientsManufacturersByUsage200ResponseInner data = 1;
}

message GetOrganizationSummaryTopDevicesByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopDevicesByUsageResponse {
  repeated GetOrganizationSummaryTopDevicesByUsage200ResponseInner data = 1;
}

message GetOrganizationSummaryTopDevicesModelsByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopDevicesModelsByUsageResponse {
  repeated GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInner data = 1;
}

message GetOrganizationSummaryTopSsidsByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopSsidsByUsageResponse {
  repeated GetOrganizationSummaryTopSsidsByUsage200ResponseInner data = 1;
}

message GetOrganizationSummaryTopSwitchesByEnergyUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 25 minutes and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopSwitchesByEnergyUsageResponse {
  repeated GetOrganizationSummaryTopSwitchesByEnergyUsage200ResponseInner data = 1;
}

message GetOrganizationUplinksStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of network IDs. The returned devices will be filtered to only include these networks.
  repeated string networkIds = 5;
  // A list of serial numbers. The returned devices will be filtered to only include these serials.
  repeated string serials = 6;
  // A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
  repeated string iccids = 7;

}

message GetOrganizationUplinksStatusesResponse {
  repeated GetOrganizationUplinksStatuses200ResponseInner data = 1;
}

message GetOrganizationWebhooksAlertTypesRequest {
  // Organization ID
  string organizationId = 1;
  // Filter sample alerts to a specific product type
  string productType = 2;

}

message GetOrganizationWebhooksAlertTypesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationWebhooksLogsRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 90 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
  int32 perPage = 5;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 6;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 7;
  // The URL the webhook was sent to
  string url = 8;

}

message GetOrganizationWebhooksLogsResponse {
  repeated GetOrganizationWebhooksLogs200ResponseInner data = 1;
}

message GetOrganizationsResponse {
  repeated GetOrganizations200ResponseInner data = 1;
}

message MoveOrganizationLicensesRequest {
  // Organization ID
  string organizationId = 1;
  MoveOrganizationLicensesRequest moveOrganizationLicensesRequest = 2;

}

message MoveOrganizationLicensesSeatsRequest {
  // Organization ID
  string organizationId = 1;
  MoveOrganizationLicensesSeatsRequest moveOrganizationLicensesSeatsRequest = 2;

}

message ReleaseFromOrganizationInventoryRequest {
  // Organization ID
  string organizationId = 1;
  ReleaseFromOrganizationInventoryRequest releaseFromOrganizationInventoryRequest = 2;

}

message RenewOrganizationLicensesSeatsRequest {
  // Organization ID
  string organizationId = 1;
  RenewOrganizationLicensesSeatsRequest renewOrganizationLicensesSeatsRequest = 2;

}

message UpdateOrganizationRequest {
  // Organization ID
  string organizationId = 1;
  UpdateOrganizationRequest updateOrganizationRequest = 2;

}

message UpdateOrganizationActionBatchRequest {
  // Organization ID
  string organizationId = 1;
  // Action batch ID
  string actionBatchId = 2;
  UpdateOrganizationActionBatchRequest updateOrganizationActionBatchRequest = 3;

}

message UpdateOrganizationAdaptivePolicyAclRequest {
  // Organization ID
  string organizationId = 1;
  // Acl ID
  string aclId = 2;
  UpdateOrganizationAdaptivePolicyAclRequest updateOrganizationAdaptivePolicyAclRequest = 3;

}

message UpdateOrganizationAdaptivePolicyGroupRequest {
  // Organization ID
  string organizationId = 1;
  // ID
  string id = 2;
  UpdateOrganizationAdaptivePolicyGroupRequest updateOrganizationAdaptivePolicyGroupRequest = 3;

}

message UpdateOrganizationAdaptivePolicyPolicyRequest {
  // Organization ID
  string organizationId = 1;
  // ID
  string id = 2;
  UpdateOrganizationAdaptivePolicyPolicyRequest updateOrganizationAdaptivePolicyPolicyRequest = 3;

}

message UpdateOrganizationAdaptivePolicySettingsRequest {
  // Organization ID
  string organizationId = 1;
  UpdateOrganizationAdaptivePolicySettingsRequest updateOrganizationAdaptivePolicySettingsRequest = 2;

}

message UpdateOrganizationAdminRequest {
  // Organization ID
  string organizationId = 1;
  // Admin ID
  string adminId = 2;
  UpdateOrganizationAdminRequest updateOrganizationAdminRequest = 3;

}

message UpdateOrganizationAlertsProfileRequest {
  // Organization ID
  string organizationId = 1;
  // Alert config ID
  string alertConfigId = 2;
  UpdateOrganizationAlertsProfileRequest updateOrganizationAlertsProfileRequest = 3;

}

message UpdateOrganizationBrandingPoliciesPrioritiesRequest {
  // Organization ID
  string organizationId = 1;
  UpdateOrganizationBrandingPoliciesPrioritiesRequest updateOrganizationBrandingPoliciesPrioritiesRequest = 2;

}

message UpdateOrganizationBrandingPolicyRequest {
  // Organization ID
  string organizationId = 1;
  // Branding policy ID
  string brandingPolicyId = 2;
  UpdateOrganizationBrandingPolicyRequest updateOrganizationBrandingPolicyRequest = 3;

}

message UpdateOrganizationConfigTemplateRequest {
  // Organization ID
  string organizationId = 1;
  // Config template ID
  string configTemplateId = 2;
  UpdateOrganizationConfigTemplateRequest updateOrganizationConfigTemplateRequest = 3;

}

message UpdateOrganizationEarlyAccessFeaturesOptInRequest {
  // Organization ID
  string organizationId = 1;
  // Opt in ID
  string optInId = 2;
  UpdateOrganizationEarlyAccessFeaturesOptInRequest updateOrganizationEarlyAccessFeaturesOptInRequest = 3;

}

message UpdateOrganizationLicenseRequest {
  // Organization ID
  string organizationId = 1;
  // License ID
  string licenseId = 2;
  UpdateOrganizationLicenseRequest updateOrganizationLicenseRequest = 3;

}

message UpdateOrganizationLoginSecurityRequest {
  // Organization ID
  string organizationId = 1;
  UpdateOrganizationLoginSecurityRequest updateOrganizationLoginSecurityRequest = 2;

}

message UpdateOrganizationPolicyObjectRequest {
  // Organization ID
  string organizationId = 1;
  // Policy object ID
  string policyObjectId = 2;
  UpdateOrganizationPolicyObjectRequest updateOrganizationPolicyObjectRequest = 3;

}

message UpdateOrganizationPolicyObjectsGroupRequest {
  // Organization ID
  string organizationId = 1;
  // Policy object group ID
  string policyObjectGroupId = 2;
  UpdateOrganizationPolicyObjectsGroupRequest updateOrganizationPolicyObjectsGroupRequest = 3;

}

message UpdateOrganizationSamlRequest {
  // Organization ID
  string organizationId = 1;
  UpdateOrganizationSamlRequest updateOrganizationSamlRequest = 2;

}

message UpdateOrganizationSamlIdpRequest {
  // Organization ID
  string organizationId = 1;
  // Idp ID
  string idpId = 2;
  UpdateOrganizationSamlIdpRequest updateOrganizationSamlIdpRequest = 3;

}

message UpdateOrganizationSamlIdpResponse {
  repeated GetOrganizationSamlIdps200ResponseInner data = 1;
}

message UpdateOrganizationSamlRoleRequest {
  // Organization ID
  string organizationId = 1;
  // Saml role ID
  string samlRoleId = 2;
  UpdateOrganizationSamlRoleRequest updateOrganizationSamlRoleRequest = 3;

}

message UpdateOrganizationSnmpRequest {
  // Organization ID
  string organizationId = 1;
  UpdateOrganizationSnmpRequest updateOrganizationSnmpRequest = 2;

}

