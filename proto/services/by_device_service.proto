/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.bydeviceservice;

import "google/protobuf/empty.proto";
import public "models/get_network_switch_dhcp_server_policy_arp_inspection_warnings_by_device200_response_inner.proto";
import public "models/get_network_vlan_profiles_assignments_by_device200_response_inner.proto";
import public "models/get_organization_devices_uplinks_addresses_by_device200_response_inner.proto";
import public "models/get_organization_firmware_upgrades_by_device200_response_inner.proto";
import public "models/get_organization_wireless_devices_channel_utilization_by_device200_response_inner.proto";
import public "models/get_organization_wireless_devices_channel_utilization_history_by_device_by_interval200_response_inner.proto";

service ByDeviceService {
  rpc GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice (GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDeviceRequest) returns (GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResponse);

  rpc GetNetworkVlanProfilesAssignmentsByDevice (GetNetworkVlanProfilesAssignmentsByDeviceRequest) returns (GetNetworkVlanProfilesAssignmentsByDeviceResponse);

  rpc GetOrganizationDevicesUplinksAddressesByDevice (GetOrganizationDevicesUplinksAddressesByDeviceRequest) returns (GetOrganizationDevicesUplinksAddressesByDeviceResponse);

  rpc GetOrganizationFirmwareUpgradesByDevice (GetOrganizationFirmwareUpgradesByDeviceRequest) returns (GetOrganizationFirmwareUpgradesByDeviceResponse);

  rpc GetOrganizationWirelessDevicesChannelUtilizationByDevice (GetOrganizationWirelessDevicesChannelUtilizationByDeviceRequest) returns (GetOrganizationWirelessDevicesChannelUtilizationByDeviceResponse);

  rpc GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByInterval (GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalRequest) returns (GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResponse);

}

message GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDeviceRequest {
  // Network ID
  string networkId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;

}

message GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDeviceResponse {
  repeated GetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice200ResponseInner data = 1;
}

message GetNetworkVlanProfilesAssignmentsByDeviceRequest {
  // Network ID
  string networkId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter devices by serials. All devices returned belong to serial numbers that are an exact match.
  repeated string serials = 5;
  // Optional parameter to filter devices by product types.
  repeated string productTypes = 6;
  // Optional parameter to filter devices by Switch Stack ids.
  repeated string stackIds = 7;

}

message GetNetworkVlanProfilesAssignmentsByDeviceResponse {
  repeated GetNetworkVlanProfilesAssignmentsByDevice200ResponseInner data = 1;
}

message GetOrganizationDevicesUplinksAddressesByDeviceRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter device uplinks by network ID. This filter uses multiple exact matches.
  repeated string networkIds = 5;
  // Optional parameter to filter device uplinks by device product types. This filter uses multiple exact matches.
  repeated string productTypes = 6;
  // Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
  repeated string serials = 7;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
  repeated string tags = 8;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 9;

}

message GetOrganizationDevicesUplinksAddressesByDeviceResponse {
  repeated GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner data = 1;
}

message GetOrganizationFirmwareUpgradesByDeviceRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter by network
  repeated string networkIds = 5;
  // Optional parameter to filter by serial number.  All returned devices will have a serial number that is an exact match.
  repeated string serials = 6;
  // Optional parameter to filter by one or more MAC addresses belonging to devices. All devices returned belong to MAC addresses that are an exact match.
  repeated string macs = 7;
  // Optional parameter to filter by firmware upgrade batch ids.
  repeated string firmwareUpgradeBatchIds = 8;
  // Optional parameter to filter by firmware upgrade statuses.
  repeated string upgradeStatuses = 9;

}

message GetOrganizationFirmwareUpgradesByDeviceResponse {
  repeated GetOrganizationFirmwareUpgradesByDevice200ResponseInner data = 1;
}

message GetOrganizationWirelessDevicesChannelUtilizationByDeviceRequest {
  // Organization ID
  string organizationId = 1;
  // Filter results by network.
  repeated string networkIds = 2;
  // Filter results by device.
  repeated string serials = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // The beginning of the timespan for the data. The maximum lookback period is 90 days from today.
  string t0 = 7;
  // The end of the timespan for the data. t1 can be a maximum of 90 days after t0.
  string t1 = 8;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 90 days. The default is 7 days.
  float timespan = 9;
  // The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.
  int32 interval = 10;

}

message GetOrganizationWirelessDevicesChannelUtilizationByDeviceResponse {
  repeated GetOrganizationWirelessDevicesChannelUtilizationByDevice200ResponseInner data = 1;
}

message GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalRequest {
  // Organization ID
  string organizationId = 1;
  // Filter results by network.
  repeated string networkIds = 2;
  // Filter results by device.
  repeated string serials = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 7;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 8;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 9;
  // The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.
  int32 interval = 10;

}

message GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResponse {
  repeated GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByInterval200ResponseInner data = 1;
}

