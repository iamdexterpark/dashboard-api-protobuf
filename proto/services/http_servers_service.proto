/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.httpserversservice;

import "google/protobuf/empty.proto";
import public "models/create_network_webhooks_http_server_request.proto";
import public "models/get_network_webhooks_http_servers200_response_inner.proto";
import public "models/update_network_webhooks_http_server_request.proto";

service HttpServersService {
  rpc CreateNetworkWebhooksHttpServer (CreateNetworkWebhooksHttpServerRequest) returns (GetNetworkWebhooksHttpServers200ResponseInner);

  rpc DeleteNetworkWebhooksHttpServer (DeleteNetworkWebhooksHttpServerRequest) returns (google.protobuf.Empty);

  rpc GetNetworkWebhooksHttpServer (GetNetworkWebhooksHttpServerRequest) returns (GetNetworkWebhooksHttpServers200ResponseInner);

  rpc GetNetworkWebhooksHttpServers (GetNetworkWebhooksHttpServersRequest) returns (GetNetworkWebhooksHttpServersResponse);

  rpc UpdateNetworkWebhooksHttpServer (UpdateNetworkWebhooksHttpServerRequest) returns (GetNetworkWebhooksHttpServers200ResponseInner);

}

message CreateNetworkWebhooksHttpServerRequest {
  // Network ID
  string networkId = 1;
  CreateNetworkWebhooksHttpServerRequest createNetworkWebhooksHttpServerRequest = 2;

}

message DeleteNetworkWebhooksHttpServerRequest {
  // Network ID
  string networkId = 1;
  // Http server ID
  string httpServerId = 2;

}

message GetNetworkWebhooksHttpServerRequest {
  // Network ID
  string networkId = 1;
  // Http server ID
  string httpServerId = 2;

}

message GetNetworkWebhooksHttpServersRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkWebhooksHttpServersResponse {
  repeated GetNetworkWebhooksHttpServers200ResponseInner data = 1;
}

message UpdateNetworkWebhooksHttpServerRequest {
  // Network ID
  string networkId = 1;
  // Http server ID
  string httpServerId = 2;
  UpdateNetworkWebhooksHttpServerRequest updateNetworkWebhooksHttpServerRequest = 3;

}

