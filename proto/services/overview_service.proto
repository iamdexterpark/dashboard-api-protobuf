/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.overviewservice;

import "google/protobuf/empty.proto";
import public "models/get_network_sensor_alerts_current_overview_by_metric200_response.proto";
import public "models/get_network_sensor_alerts_overview_by_metric200_response_inner.proto";
import public "models/get_organization_adaptive_policy_overview200_response.proto";
import public "models/get_organization_clients_overview200_response.proto";
import public "models/get_organization_devices_statuses_overview200_response.proto";
import public "models/todo_object_mapping.proto";

service OverviewService {
  rpc GetDeviceCameraAnalyticsOverview (GetDeviceCameraAnalyticsOverviewRequest) returns (GetDeviceCameraAnalyticsOverviewResponse);

  rpc GetNetworkClientsOverview (GetNetworkClientsOverviewRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkSensorAlertsCurrentOverviewByMetric (GetNetworkSensorAlertsCurrentOverviewByMetricRequest) returns (GetNetworkSensorAlertsCurrentOverviewByMetric200Response);

  rpc GetNetworkSensorAlertsOverviewByMetric (GetNetworkSensorAlertsOverviewByMetricRequest) returns (GetNetworkSensorAlertsOverviewByMetricResponse);

  rpc GetOrganizationAdaptivePolicyOverview (GetOrganizationAdaptivePolicyOverviewRequest) returns (GetOrganizationAdaptivePolicyOverview200Response);

  rpc GetOrganizationClientsOverview (GetOrganizationClientsOverviewRequest) returns (GetOrganizationClientsOverview200Response);

  rpc GetOrganizationDevicesStatusesOverview (GetOrganizationDevicesStatusesOverviewRequest) returns (GetOrganizationDevicesStatusesOverview200Response);

  rpc GetOrganizationLicensesOverview (GetOrganizationLicensesOverviewRequest) returns (TODO_OBJECT_MAPPING);

}

message GetDeviceCameraAnalyticsOverviewRequest {
  // Serial
  string serial = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour.
  float timespan = 4;
  // [optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].
  string objectType = 5;

}

message GetDeviceCameraAnalyticsOverviewResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkClientsOverviewRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 7200, 86400, 604800, 2592000. The default is 604800.
  int32 resolution = 5;

}

message GetNetworkSensorAlertsCurrentOverviewByMetricRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkSensorAlertsOverviewByMetricRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 4;
  // The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
  int32 interval = 5;

}

message GetNetworkSensorAlertsOverviewByMetricResponse {
  repeated GetNetworkSensorAlertsOverviewByMetric200ResponseInner data = 1;
}

message GetOrganizationAdaptivePolicyOverviewRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationClientsOverviewRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationDevicesStatusesOverviewRequest {
  // Organization ID
  string organizationId = 1;
  // An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
  repeated string productTypes = 2;
  // An optional parameter to filter device statuses by network.
  repeated string networkIds = 3;

}

message GetOrganizationLicensesOverviewRequest {
  // Organization ID
  string organizationId = 1;

}

