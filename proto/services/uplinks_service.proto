/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.uplinksservice;

import "google/protobuf/empty.proto";
import public "models/get_device_appliance_uplinks_settings200_response.proto";
import public "models/get_organization_appliance_uplinks_usage_by_network200_response_inner.proto";
import public "models/get_organization_devices_uplinks_addresses_by_device200_response_inner.proto";
import public "models/get_organization_devices_uplinks_loss_and_latency200_response_inner.proto";
import public "models/get_organization_uplinks_statuses200_response_inner.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_device_appliance_uplinks_settings_request.proto";

service UplinksService {
  rpc GetDeviceApplianceUplinksSettings (GetDeviceApplianceUplinksSettingsRequest) returns (GetDeviceApplianceUplinksSettings200Response);

  rpc GetDeviceLossAndLatencyHistory (GetDeviceLossAndLatencyHistoryRequest) returns (GetDeviceLossAndLatencyHistoryResponse);

  rpc GetNetworkApplianceUplinksUsageHistory (GetNetworkApplianceUplinksUsageHistoryRequest) returns (GetNetworkApplianceUplinksUsageHistoryResponse);

  rpc GetOrganizationApplianceUplinkStatuses (GetOrganizationApplianceUplinkStatusesRequest) returns (GetOrganizationApplianceUplinkStatusesResponse);

  rpc GetOrganizationApplianceUplinksUsageByNetwork (GetOrganizationApplianceUplinksUsageByNetworkRequest) returns (GetOrganizationApplianceUplinksUsageByNetworkResponse);

  rpc GetOrganizationDevicesUplinksAddressesByDevice (GetOrganizationDevicesUplinksAddressesByDeviceRequest) returns (GetOrganizationDevicesUplinksAddressesByDeviceResponse);

  rpc GetOrganizationDevicesUplinksLossAndLatency (GetOrganizationDevicesUplinksLossAndLatencyRequest) returns (GetOrganizationDevicesUplinksLossAndLatencyResponse);

  rpc GetOrganizationUplinksStatuses (GetOrganizationUplinksStatusesRequest) returns (GetOrganizationUplinksStatusesResponse);

  rpc UpdateDeviceApplianceUplinksSettings (UpdateDeviceApplianceUplinksSettingsRequest) returns (GetDeviceApplianceUplinksSettings200Response);

}

message GetDeviceApplianceUplinksSettingsRequest {
  // Serial
  string serial = 1;

}

message GetDeviceLossAndLatencyHistoryRequest {
  // Serial
  string serial = 1;
  // The destination IP used to obtain the requested stats. This is required.
  string ip = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 5;
  // The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60.
  int32 resolution = 6;
  // The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, wan3, cellular. The default is wan1.
  string uplink = 7;

}

message GetDeviceLossAndLatencyHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkApplianceUplinksUsageHistoryRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 10 minutes.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 600, 1800, 3600, 86400. The default is 60.
  int32 resolution = 5;

}

message GetNetworkApplianceUplinksUsageHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationApplianceUplinkStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of network IDs. The returned devices will be filtered to only include these networks.
  repeated string networkIds = 5;
  // A list of serial numbers. The returned devices will be filtered to only include these serials.
  repeated string serials = 6;
  // A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
  repeated string iccids = 7;

}

message GetOrganizationApplianceUplinkStatusesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationApplianceUplinksUsageByNetworkRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 14 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationApplianceUplinksUsageByNetworkResponse {
  repeated GetOrganizationApplianceUplinksUsageByNetwork200ResponseInner data = 1;
}

message GetOrganizationDevicesUplinksAddressesByDeviceRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter device uplinks by network ID. This filter uses multiple exact matches.
  repeated string networkIds = 5;
  // Optional parameter to filter device uplinks by device product types. This filter uses multiple exact matches.
  repeated string productTypes = 6;
  // Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
  repeated string serials = 7;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
  repeated string tags = 8;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 9;

}

message GetOrganizationDevicesUplinksAddressesByDeviceResponse {
  repeated GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner data = 1;
}

message GetOrganizationDevicesUplinksLossAndLatencyRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
  float timespan = 4;
  // Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks.
  string uplink = 5;
  // Optional filter for a specific destination IP. Default will return all destination IPs.
  string ip = 6;

}

message GetOrganizationDevicesUplinksLossAndLatencyResponse {
  repeated GetOrganizationDevicesUplinksLossAndLatency200ResponseInner data = 1;
}

message GetOrganizationUplinksStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of network IDs. The returned devices will be filtered to only include these networks.
  repeated string networkIds = 5;
  // A list of serial numbers. The returned devices will be filtered to only include these serials.
  repeated string serials = 6;
  // A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
  repeated string iccids = 7;

}

message GetOrganizationUplinksStatusesResponse {
  repeated GetOrganizationUplinksStatuses200ResponseInner data = 1;
}

message UpdateDeviceApplianceUplinksSettingsRequest {
  // Serial
  string serial = 1;
  UpdateDeviceApplianceUplinksSettingsRequest updateDeviceApplianceUplinksSettingsRequest = 2;

}

