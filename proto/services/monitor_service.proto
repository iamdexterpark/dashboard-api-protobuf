/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.monitorservice;

import "google/protobuf/empty.proto";
import public "models/generate_device_camera_snapshot_request.proto";
import public "models/get_administered_identities_me200_response.proto";
import public "models/get_device_switch_ports_statuses200_response_inner.proto";
import public "models/get_device_wireless_connection_stats200_response.proto";
import public "models/get_device_wireless_status200_response.proto";
import public "models/get_network_alerts_history200_response_inner.proto";
import public "models/get_network_client200_response.proto";
import public "models/get_network_clients200_response.proto";
import public "models/get_network_events200_response.proto";
import public "models/get_network_events_event_types200_response_inner.proto";
import public "models/get_network_insight_application_health_by_time200_response_inner.proto";
import public "models/get_network_sensor_alerts_current_overview_by_metric200_response.proto";
import public "models/get_network_sensor_alerts_overview_by_metric200_response_inner.proto";
import public "models/get_network_sm_device_cellular_usage_history200_response_inner.proto";
import public "models/get_network_sm_device_connectivity200_response_inner.proto";
import public "models/get_network_sm_device_desktop_logs200_response_inner.proto";
import public "models/get_network_sm_device_device_command_logs200_response_inner.proto";
import public "models/get_network_sm_device_performance_history200_response_inner.proto";
import public "models/get_network_wireless_channel_utilization_history200_response_inner.proto";
import public "models/get_network_wireless_client_count_history200_response_inner.proto";
import public "models/get_network_wireless_connection_stats200_response.proto";
import public "models/get_network_wireless_data_rate_history200_response_inner.proto";
import public "models/get_network_wireless_failed_connections200_response_inner.proto";
import public "models/get_network_wireless_latency_history200_response_inner.proto";
import public "models/get_network_wireless_signal_quality_history200_response_inner.proto";
import public "models/get_network_wireless_usage_history200_response_inner.proto";
import public "models/get_organization_adaptive_policy_overview200_response.proto";
import public "models/get_organization_appliance_uplinks_usage_by_network200_response_inner.proto";
import public "models/get_organization_cellular_gateway_uplink_statuses200_response_inner.proto";
import public "models/get_organization_clients_bandwidth_usage_history200_response_inner.proto";
import public "models/get_organization_clients_overview200_response.proto";
import public "models/get_organization_devices_availabilities200_response_inner.proto";
import public "models/get_organization_devices_availabilities_change_history200_response_inner.proto";
import public "models/get_organization_devices_provisioning_statuses200_response_inner.proto";
import public "models/get_organization_devices_statuses200_response_inner.proto";
import public "models/get_organization_devices_statuses_overview200_response.proto";
import public "models/get_organization_devices_uplinks_addresses_by_device200_response_inner.proto";
import public "models/get_organization_devices_uplinks_loss_and_latency200_response_inner.proto";
import public "models/get_organization_sensor_readings_history200_response_inner.proto";
import public "models/get_organization_sensor_readings_latest200_response_inner.proto";
import public "models/get_organization_summary_top_appliances_by_utilization200_response_inner.proto";
import public "models/get_organization_summary_top_clients_by_usage200_response_inner.proto";
import public "models/get_organization_summary_top_clients_manufacturers_by_usage200_response_inner.proto";
import public "models/get_organization_summary_top_devices_by_usage200_response_inner.proto";
import public "models/get_organization_summary_top_devices_models_by_usage200_response_inner.proto";
import public "models/get_organization_summary_top_ssids_by_usage200_response_inner.proto";
import public "models/get_organization_summary_top_switches_by_energy_usage200_response_inner.proto";
import public "models/get_organization_uplinks_statuses200_response_inner.proto";
import public "models/get_organization_webhooks_logs200_response_inner.proto";
import public "models/get_organization_wireless_devices_channel_utilization_by_device200_response_inner.proto";
import public "models/get_organization_wireless_devices_channel_utilization_by_network200_response_inner.proto";
import public "models/get_organization_wireless_devices_channel_utilization_history_by_device_by_interval200_response_inner.proto";
import public "models/get_organization_wireless_devices_channel_utilization_history_by_network_by_interval200_response_inner.proto";
import public "models/get_organization_wireless_devices_ethernet_statuses200_response_inner.proto";
import public "models/todo_object_mapping.proto";

service MonitorService {
  rpc GenerateDeviceCameraSnapshot (GenerateDeviceCameraSnapshotRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetAdministeredIdentitiesMe (google.protobuf.Empty) returns (GetAdministeredIdentitiesMe200Response);

  rpc GetDeviceApplianceDhcpSubnets (GetDeviceApplianceDhcpSubnetsRequest) returns (GetDeviceApplianceDhcpSubnetsResponse);

  rpc GetDeviceAppliancePerformance (GetDeviceAppliancePerformanceRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetDeviceAppliancePrefixesDelegated (GetDeviceAppliancePrefixesDelegatedRequest) returns (GetDeviceAppliancePrefixesDelegatedResponse);

  rpc GetDeviceAppliancePrefixesDelegatedVlanAssignments (GetDeviceAppliancePrefixesDelegatedVlanAssignmentsRequest) returns (GetDeviceAppliancePrefixesDelegatedVlanAssignmentsResponse);

  rpc GetDeviceCameraAnalyticsLive (GetDeviceCameraAnalyticsLiveRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetDeviceCameraAnalyticsOverview (GetDeviceCameraAnalyticsOverviewRequest) returns (GetDeviceCameraAnalyticsOverviewResponse);

  rpc GetDeviceCameraAnalyticsRecent (GetDeviceCameraAnalyticsRecentRequest) returns (GetDeviceCameraAnalyticsRecentResponse);

  rpc GetDeviceCameraAnalyticsZoneHistory (GetDeviceCameraAnalyticsZoneHistoryRequest) returns (GetDeviceCameraAnalyticsZoneHistoryResponse);

  rpc GetDeviceCameraAnalyticsZones (GetDeviceCameraAnalyticsZonesRequest) returns (GetDeviceCameraAnalyticsZonesResponse);

  rpc GetDeviceClients (GetDeviceClientsRequest) returns (GetDeviceClientsResponse);

  rpc GetDeviceLldpCdp (GetDeviceLldpCdpRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetDeviceLossAndLatencyHistory (GetDeviceLossAndLatencyHistoryRequest) returns (GetDeviceLossAndLatencyHistoryResponse);

  rpc GetDeviceSwitchPortsStatuses (GetDeviceSwitchPortsStatusesRequest) returns (GetDeviceSwitchPortsStatusesResponse);

  rpc GetDeviceSwitchPortsStatusesPackets (GetDeviceSwitchPortsStatusesPacketsRequest) returns (GetDeviceSwitchPortsStatusesPacketsResponse);

  rpc GetDeviceWirelessConnectionStats (GetDeviceWirelessConnectionStatsRequest) returns (GetDeviceWirelessConnectionStats200Response);

  rpc GetDeviceWirelessLatencyStats (GetDeviceWirelessLatencyStatsRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetDeviceWirelessStatus (GetDeviceWirelessStatusRequest) returns (GetDeviceWirelessStatus200Response);

  rpc GetNetworkAlertsHistory (GetNetworkAlertsHistoryRequest) returns (GetNetworkAlertsHistoryResponse);

  rpc GetNetworkApplianceClientSecurityEvents (GetNetworkApplianceClientSecurityEventsRequest) returns (GetNetworkApplianceClientSecurityEventsResponse);

  rpc GetNetworkApplianceSecurityEvents (GetNetworkApplianceSecurityEventsRequest) returns (GetNetworkApplianceSecurityEventsResponse);

  rpc GetNetworkApplianceUplinksUsageHistory (GetNetworkApplianceUplinksUsageHistoryRequest) returns (GetNetworkApplianceUplinksUsageHistoryResponse);

  rpc GetNetworkBluetoothClient (GetNetworkBluetoothClientRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkBluetoothClients (GetNetworkBluetoothClientsRequest) returns (GetNetworkBluetoothClientsResponse);

  rpc GetNetworkClient (GetNetworkClientRequest) returns (GetNetworkClient200Response);

  rpc GetNetworkClientTrafficHistory (GetNetworkClientTrafficHistoryRequest) returns (GetNetworkClientTrafficHistoryResponse);

  rpc GetNetworkClientUsageHistory (GetNetworkClientUsageHistoryRequest) returns (GetNetworkClientUsageHistoryResponse);

  rpc GetNetworkClients (GetNetworkClientsRequest) returns (GetNetworkClients200Response);

  rpc GetNetworkClientsApplicationUsage (GetNetworkClientsApplicationUsageRequest) returns (GetNetworkClientsApplicationUsageResponse);

  rpc GetNetworkClientsBandwidthUsageHistory (GetNetworkClientsBandwidthUsageHistoryRequest) returns (GetNetworkClientsBandwidthUsageHistoryResponse);

  rpc GetNetworkClientsOverview (GetNetworkClientsOverviewRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkClientsUsageHistories (GetNetworkClientsUsageHistoriesRequest) returns (GetNetworkClientsUsageHistoriesResponse);

  rpc GetNetworkEvents (GetNetworkEventsRequest) returns (GetNetworkEvents200Response);

  rpc GetNetworkEventsEventTypes (GetNetworkEventsEventTypesRequest) returns (GetNetworkEventsEventTypesResponse);

  rpc GetNetworkInsightApplicationHealthByTime (GetNetworkInsightApplicationHealthByTimeRequest) returns (GetNetworkInsightApplicationHealthByTimeResponse);

  rpc GetNetworkNetworkHealthChannelUtilization (GetNetworkNetworkHealthChannelUtilizationRequest) returns (GetNetworkNetworkHealthChannelUtilizationResponse);

  rpc GetNetworkSensorAlertsCurrentOverviewByMetric (GetNetworkSensorAlertsCurrentOverviewByMetricRequest) returns (GetNetworkSensorAlertsCurrentOverviewByMetric200Response);

  rpc GetNetworkSensorAlertsOverviewByMetric (GetNetworkSensorAlertsOverviewByMetricRequest) returns (GetNetworkSensorAlertsOverviewByMetricResponse);

  rpc GetNetworkSmDeviceCellularUsageHistory (GetNetworkSmDeviceCellularUsageHistoryRequest) returns (GetNetworkSmDeviceCellularUsageHistoryResponse);

  rpc GetNetworkSmDeviceConnectivity (GetNetworkSmDeviceConnectivityRequest) returns (GetNetworkSmDeviceConnectivityResponse);

  rpc GetNetworkSmDeviceDesktopLogs (GetNetworkSmDeviceDesktopLogsRequest) returns (GetNetworkSmDeviceDesktopLogsResponse);

  rpc GetNetworkSmDeviceDeviceCommandLogs (GetNetworkSmDeviceDeviceCommandLogsRequest) returns (GetNetworkSmDeviceDeviceCommandLogsResponse);

  rpc GetNetworkSmDevicePerformanceHistory (GetNetworkSmDevicePerformanceHistoryRequest) returns (GetNetworkSmDevicePerformanceHistoryResponse);

  rpc GetNetworkSplashLoginAttempts (GetNetworkSplashLoginAttemptsRequest) returns (GetNetworkSplashLoginAttemptsResponse);

  rpc GetNetworkTopologyLinkLayer (GetNetworkTopologyLinkLayerRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkTraffic (GetNetworkTrafficRequest) returns (GetNetworkTrafficResponse);

  rpc GetNetworkWirelessAirMarshal (GetNetworkWirelessAirMarshalRequest) returns (GetNetworkWirelessAirMarshalResponse);

  rpc GetNetworkWirelessChannelUtilizationHistory (GetNetworkWirelessChannelUtilizationHistoryRequest) returns (GetNetworkWirelessChannelUtilizationHistoryResponse);

  rpc GetNetworkWirelessClientConnectionStats (GetNetworkWirelessClientConnectionStatsRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessClientConnectivityEvents (GetNetworkWirelessClientConnectivityEventsRequest) returns (GetNetworkWirelessClientConnectivityEventsResponse);

  rpc GetNetworkWirelessClientCountHistory (GetNetworkWirelessClientCountHistoryRequest) returns (GetNetworkWirelessClientCountHistoryResponse);

  rpc GetNetworkWirelessClientLatencyHistory (GetNetworkWirelessClientLatencyHistoryRequest) returns (GetNetworkWirelessClientLatencyHistoryResponse);

  rpc GetNetworkWirelessClientLatencyStats (GetNetworkWirelessClientLatencyStatsRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessClientsConnectionStats (GetNetworkWirelessClientsConnectionStatsRequest) returns (GetNetworkWirelessClientsConnectionStatsResponse);

  rpc GetNetworkWirelessClientsLatencyStats (GetNetworkWirelessClientsLatencyStatsRequest) returns (GetNetworkWirelessClientsLatencyStatsResponse);

  rpc GetNetworkWirelessConnectionStats (GetNetworkWirelessConnectionStatsRequest) returns (GetNetworkWirelessConnectionStats200Response);

  rpc GetNetworkWirelessDataRateHistory (GetNetworkWirelessDataRateHistoryRequest) returns (GetNetworkWirelessDataRateHistoryResponse);

  rpc GetNetworkWirelessDevicesConnectionStats (GetNetworkWirelessDevicesConnectionStatsRequest) returns (GetNetworkWirelessDevicesConnectionStatsResponse);

  rpc GetNetworkWirelessDevicesLatencyStats (GetNetworkWirelessDevicesLatencyStatsRequest) returns (GetNetworkWirelessDevicesLatencyStatsResponse);

  rpc GetNetworkWirelessFailedConnections (GetNetworkWirelessFailedConnectionsRequest) returns (GetNetworkWirelessFailedConnectionsResponse);

  rpc GetNetworkWirelessLatencyHistory (GetNetworkWirelessLatencyHistoryRequest) returns (GetNetworkWirelessLatencyHistoryResponse);

  rpc GetNetworkWirelessLatencyStats (GetNetworkWirelessLatencyStatsRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessMeshStatuses (GetNetworkWirelessMeshStatusesRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessSignalQualityHistory (GetNetworkWirelessSignalQualityHistoryRequest) returns (GetNetworkWirelessSignalQualityHistoryResponse);

  rpc GetNetworkWirelessUsageHistory (GetNetworkWirelessUsageHistoryRequest) returns (GetNetworkWirelessUsageHistoryResponse);

  rpc GetOrganizationAdaptivePolicyOverview (GetOrganizationAdaptivePolicyOverviewRequest) returns (GetOrganizationAdaptivePolicyOverview200Response);

  rpc GetOrganizationApplianceSecurityEvents (GetOrganizationApplianceSecurityEventsRequest) returns (GetOrganizationApplianceSecurityEventsResponse);

  rpc GetOrganizationApplianceUplinkStatuses (GetOrganizationApplianceUplinkStatusesRequest) returns (GetOrganizationApplianceUplinkStatusesResponse);

  rpc GetOrganizationApplianceUplinksUsageByNetwork (GetOrganizationApplianceUplinksUsageByNetworkRequest) returns (GetOrganizationApplianceUplinksUsageByNetworkResponse);

  rpc GetOrganizationApplianceVpnStats (GetOrganizationApplianceVpnStatsRequest) returns (GetOrganizationApplianceVpnStatsResponse);

  rpc GetOrganizationApplianceVpnStatuses (GetOrganizationApplianceVpnStatusesRequest) returns (GetOrganizationApplianceVpnStatusesResponse);

  rpc GetOrganizationCellularGatewayUplinkStatuses (GetOrganizationCellularGatewayUplinkStatusesRequest) returns (GetOrganizationCellularGatewayUplinkStatusesResponse);

  rpc GetOrganizationClientsBandwidthUsageHistory (GetOrganizationClientsBandwidthUsageHistoryRequest) returns (GetOrganizationClientsBandwidthUsageHistoryResponse);

  rpc GetOrganizationClientsOverview (GetOrganizationClientsOverviewRequest) returns (GetOrganizationClientsOverview200Response);

  rpc GetOrganizationConfigurationChanges (GetOrganizationConfigurationChangesRequest) returns (GetOrganizationConfigurationChangesResponse);

  rpc GetOrganizationDevicesAvailabilities (GetOrganizationDevicesAvailabilitiesRequest) returns (GetOrganizationDevicesAvailabilitiesResponse);

  rpc GetOrganizationDevicesAvailabilitiesChangeHistory (GetOrganizationDevicesAvailabilitiesChangeHistoryRequest) returns (GetOrganizationDevicesAvailabilitiesChangeHistoryResponse);

  rpc GetOrganizationDevicesProvisioningStatuses (GetOrganizationDevicesProvisioningStatusesRequest) returns (GetOrganizationDevicesProvisioningStatusesResponse);

  rpc GetOrganizationDevicesStatuses (GetOrganizationDevicesStatusesRequest) returns (GetOrganizationDevicesStatusesResponse);

  rpc GetOrganizationDevicesStatusesOverview (GetOrganizationDevicesStatusesOverviewRequest) returns (GetOrganizationDevicesStatusesOverview200Response);

  rpc GetOrganizationDevicesUplinksAddressesByDevice (GetOrganizationDevicesUplinksAddressesByDeviceRequest) returns (GetOrganizationDevicesUplinksAddressesByDeviceResponse);

  rpc GetOrganizationDevicesUplinksLossAndLatency (GetOrganizationDevicesUplinksLossAndLatencyRequest) returns (GetOrganizationDevicesUplinksLossAndLatencyResponse);

  rpc GetOrganizationLicensesOverview (GetOrganizationLicensesOverviewRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationOpenapiSpec (GetOrganizationOpenapiSpecRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationSensorReadingsHistory (GetOrganizationSensorReadingsHistoryRequest) returns (GetOrganizationSensorReadingsHistoryResponse);

  rpc GetOrganizationSensorReadingsLatest (GetOrganizationSensorReadingsLatestRequest) returns (GetOrganizationSensorReadingsLatestResponse);

  rpc GetOrganizationSummaryTopAppliancesByUtilization (GetOrganizationSummaryTopAppliancesByUtilizationRequest) returns (GetOrganizationSummaryTopAppliancesByUtilizationResponse);

  rpc GetOrganizationSummaryTopClientsByUsage (GetOrganizationSummaryTopClientsByUsageRequest) returns (GetOrganizationSummaryTopClientsByUsageResponse);

  rpc GetOrganizationSummaryTopClientsManufacturersByUsage (GetOrganizationSummaryTopClientsManufacturersByUsageRequest) returns (GetOrganizationSummaryTopClientsManufacturersByUsageResponse);

  rpc GetOrganizationSummaryTopDevicesByUsage (GetOrganizationSummaryTopDevicesByUsageRequest) returns (GetOrganizationSummaryTopDevicesByUsageResponse);

  rpc GetOrganizationSummaryTopDevicesModelsByUsage (GetOrganizationSummaryTopDevicesModelsByUsageRequest) returns (GetOrganizationSummaryTopDevicesModelsByUsageResponse);

  rpc GetOrganizationSummaryTopSsidsByUsage (GetOrganizationSummaryTopSsidsByUsageRequest) returns (GetOrganizationSummaryTopSsidsByUsageResponse);

  rpc GetOrganizationSummaryTopSwitchesByEnergyUsage (GetOrganizationSummaryTopSwitchesByEnergyUsageRequest) returns (GetOrganizationSummaryTopSwitchesByEnergyUsageResponse);

  rpc GetOrganizationUplinksStatuses (GetOrganizationUplinksStatusesRequest) returns (GetOrganizationUplinksStatusesResponse);

  rpc GetOrganizationWebhooksAlertTypes (GetOrganizationWebhooksAlertTypesRequest) returns (GetOrganizationWebhooksAlertTypesResponse);

  rpc GetOrganizationWebhooksLogs (GetOrganizationWebhooksLogsRequest) returns (GetOrganizationWebhooksLogsResponse);

  rpc GetOrganizationWirelessDevicesChannelUtilizationByDevice (GetOrganizationWirelessDevicesChannelUtilizationByDeviceRequest) returns (GetOrganizationWirelessDevicesChannelUtilizationByDeviceResponse);

  rpc GetOrganizationWirelessDevicesChannelUtilizationByNetwork (GetOrganizationWirelessDevicesChannelUtilizationByNetworkRequest) returns (GetOrganizationWirelessDevicesChannelUtilizationByNetworkResponse);

  rpc GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByInterval (GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalRequest) returns (GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResponse);

  rpc GetOrganizationWirelessDevicesChannelUtilizationHistoryByNetworkByInterval (GetOrganizationWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalRequest) returns (GetOrganizationWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalResponse);

  rpc GetOrganizationWirelessDevicesEthernetStatuses (GetOrganizationWirelessDevicesEthernetStatusesRequest) returns (GetOrganizationWirelessDevicesEthernetStatusesResponse);

}

message GenerateDeviceCameraSnapshotRequest {
  // Serial
  string serial = 1;
  GenerateDeviceCameraSnapshotRequest generateDeviceCameraSnapshotRequest = 2;

}

message GetDeviceApplianceDhcpSubnetsRequest {
  // Serial
  string serial = 1;

}

message GetDeviceApplianceDhcpSubnetsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceAppliancePerformanceRequest {
  // Serial
  string serial = 1;

}

message GetDeviceAppliancePrefixesDelegatedRequest {
  // Serial
  string serial = 1;

}

message GetDeviceAppliancePrefixesDelegatedResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceAppliancePrefixesDelegatedVlanAssignmentsRequest {
  // Serial
  string serial = 1;

}

message GetDeviceAppliancePrefixesDelegatedVlanAssignmentsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceCameraAnalyticsLiveRequest {
  // Serial
  string serial = 1;

}

message GetDeviceCameraAnalyticsOverviewRequest {
  // Serial
  string serial = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour.
  float timespan = 4;
  // [optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].
  string objectType = 5;

}

message GetDeviceCameraAnalyticsOverviewResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceCameraAnalyticsRecentRequest {
  // Serial
  string serial = 1;
  // [optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].
  string objectType = 2;

}

message GetDeviceCameraAnalyticsRecentResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceCameraAnalyticsZoneHistoryRequest {
  // Serial
  string serial = 1;
  // Zone ID
  string zoneId = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 14 hours after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour.
  float timespan = 5;
  // The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60.
  int32 resolution = 6;
  // [optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].
  string objectType = 7;

}

message GetDeviceCameraAnalyticsZoneHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceCameraAnalyticsZonesRequest {
  // Serial
  string serial = 1;

}

message GetDeviceCameraAnalyticsZonesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceClientsRequest {
  // Serial
  string serial = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 3;

}

message GetDeviceClientsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceLldpCdpRequest {
  // Serial
  string serial = 1;

}

message GetDeviceLossAndLatencyHistoryRequest {
  // Serial
  string serial = 1;
  // The destination IP used to obtain the requested stats. This is required.
  string ip = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 5;
  // The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60.
  int32 resolution = 6;
  // The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, wan3, cellular. The default is wan1.
  string uplink = 7;

}

message GetDeviceLossAndLatencyHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceSwitchPortsStatusesRequest {
  // Serial
  string serial = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 3;

}

message GetDeviceSwitchPortsStatusesResponse {
  repeated GetDeviceSwitchPortsStatuses200ResponseInner data = 1;
}

message GetDeviceSwitchPortsStatusesPacketsRequest {
  // Serial
  string serial = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 1 day from today.
  string t0 = 2;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day.
  float timespan = 3;

}

message GetDeviceSwitchPortsStatusesPacketsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceWirelessConnectionStatsRequest {
  // Serial
  string serial = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 4;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 5;
  // Filter results by SSID
  int32 ssid = 6;
  // Filter results by VLAN
  int32 vlan = 7;
  // Filter results by AP Tag
  string apTag = 8;

}

message GetDeviceWirelessLatencyStatsRequest {
  // Serial
  string serial = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 4;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 5;
  // Filter results by SSID
  int32 ssid = 6;
  // Filter results by VLAN
  int32 vlan = 7;
  // Filter results by AP Tag
  string apTag = 8;
  // Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
  string fields = 9;

}

message GetDeviceWirelessStatusRequest {
  // Serial
  string serial = 1;

}

message GetNetworkAlertsHistoryRequest {
  // Network ID
  string networkId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;

}

message GetNetworkAlertsHistoryResponse {
  repeated GetNetworkAlertsHistory200ResponseInner data = 1;
}

message GetNetworkApplianceClientSecurityEventsRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 791 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days.
  float timespan = 5;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
  int32 perPage = 6;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 7;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 8;
  // Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.
  string sortOrder = 9;

}

message GetNetworkApplianceClientSecurityEventsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkApplianceSecurityEventsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.
  float timespan = 4;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
  int32 perPage = 5;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 6;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 7;
  // Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.
  string sortOrder = 8;

}

message GetNetworkApplianceSecurityEventsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkApplianceUplinksUsageHistoryRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 10 minutes.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 600, 1800, 3600, 86400. The default is 60.
  int32 resolution = 5;

}

message GetNetworkApplianceUplinksUsageHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkBluetoothClientRequest {
  // Network ID
  string networkId = 1;
  // Bluetooth client ID
  string bluetoothClientId = 2;
  // Include the connectivity history for this client
  bool includeConnectivityHistory = 3;
  // The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used.
  int32 connectivityHistoryTimespan = 4;

}

message GetNetworkBluetoothClientsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
  string t0 = 2;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day.
  float timespan = 3;
  // The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // Include the connectivity history for this client
  bool includeConnectivityHistory = 7;

}

message GetNetworkBluetoothClientsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkClientRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;

}

message GetNetworkClientTrafficHistoryRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The number of entries per page returned. Acceptable range is 3 - 1000.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;

}

message GetNetworkClientTrafficHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkClientUsageHistoryRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;

}

message GetNetworkClientUsageHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkClientsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // Filters clients based on status. Can be one of 'Online' or 'Offline'.
  repeated string statuses = 7;
  // Filters clients based on a partial or full match for the ip address field.
  string ip = 8;
  // Filters clients based on a partial or full match for the ip6 address field.
  string ip6 = 9;
  // Filters clients based on a partial or full match for the ip6Local address field.
  string ip6Local = 10;
  // Filters clients based on a partial or full match for the mac address field.
  string mac = 11;
  // Filters clients based on a partial or full match for the os (operating system) field.
  string os = 12;
  // Filters clients based on partial or full match for the iPSK name field.
  string pskGroup = 13;
  // Filters clients based on a partial or full match for the description field.
  string description = 14;
  // Filters clients based on the full match for the VLAN field.
  string vlan = 15;
  // Filters clients based on the partial or full match for the named VLAN field.
  string namedVlan = 16;
  // Filters clients based on recent connection type. Can be one of 'Wired' or 'Wireless'.
  repeated string recentDeviceConnections = 17;

}

message GetNetworkClientsApplicationUsageRequest {
  // Network ID
  string networkId = 1;
  // A list of client keys, MACs or IPs separated by comma.
  string clients = 2;
  // An SSID number to include. If not specified, eveusage histories application usagents for all SSIDs will be returned.
  int32 ssidNumber = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 7;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 8;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 9;

}

message GetNetworkClientsApplicationUsageResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkClientsBandwidthUsageHistoryRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 30 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 5;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 6;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 7;

}

message GetNetworkClientsBandwidthUsageHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkClientsOverviewRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 7200, 86400, 604800, 2592000. The default is 604800.
  int32 resolution = 5;

}

message GetNetworkClientsUsageHistoriesRequest {
  // Network ID
  string networkId = 1;
  // A list of client keys, MACs or IPs separated by comma.
  string clients = 2;
  // An SSID number to include. If not specified, events for all SSIDs will be returned.
  int32 ssidNumber = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 7;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 8;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 9;

}

message GetNetworkClientsUsageHistoriesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkEventsRequest {
  // Network ID
  string networkId = 1;
  // The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, and cellularGateway
  string productType = 2;
  // A list of event types. The returned events will be filtered to only include events with these types.
  repeated string includedEventTypes = 3;
  // A list of event types. The returned events will be filtered to exclude events with these types.
  repeated string excludedEventTypes = 4;
  // The MAC address of the Meraki device which the list of events will be filtered with
  string deviceMac = 5;
  // The serial of the Meraki device which the list of events will be filtered with
  string deviceSerial = 6;
  // The name of the Meraki device which the list of events will be filtered with
  string deviceName = 7;
  // The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks.
  string clientIp = 8;
  // The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks.
  string clientMac = 9;
  // The name, or partial name, of the client which the list of events will be filtered with
  string clientName = 10;
  // The MAC address of the Systems Manager device which the list of events will be filtered with
  string smDeviceMac = 11;
  // The name of the Systems Manager device which the list of events will be filtered with
  string smDeviceName = 12;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
  int32 perPage = 13;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 14;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 15;

}

message GetNetworkEventsEventTypesRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkEventsEventTypesResponse {
  repeated GetNetworkEventsEventTypes200ResponseInner data = 1;
}

message GetNetworkInsightApplicationHealthByTimeRequest {
  // Network ID
  string networkId = 1;
  // Application ID
  string applicationId = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.
  float timespan = 5;
  // The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300.
  int32 resolution = 6;

}

message GetNetworkInsightApplicationHealthByTimeResponse {
  repeated GetNetworkInsightApplicationHealthByTime200ResponseInner data = 1;
}

message GetNetworkNetworkHealthChannelUtilizationRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 600. The default is 600.
  int32 resolution = 5;
  // The number of entries per page returned. Acceptable range is 3 - 100. Default is 10.
  int32 perPage = 6;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 7;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 8;

}

message GetNetworkNetworkHealthChannelUtilizationResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkSensorAlertsCurrentOverviewByMetricRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkSensorAlertsOverviewByMetricRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 4;
  // The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
  int32 interval = 5;

}

message GetNetworkSensorAlertsOverviewByMetricResponse {
  repeated GetNetworkSensorAlertsOverviewByMetric200ResponseInner data = 1;
}

message GetNetworkSmDeviceCellularUsageHistoryRequest {
  // Network ID
  string networkId = 1;
  // Device ID
  string deviceId = 2;

}

message GetNetworkSmDeviceCellularUsageHistoryResponse {
  repeated GetNetworkSmDeviceCellularUsageHistory200ResponseInner data = 1;
}

message GetNetworkSmDeviceConnectivityRequest {
  // Network ID
  string networkId = 1;
  // Device ID
  string deviceId = 2;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;

}

message GetNetworkSmDeviceConnectivityResponse {
  repeated GetNetworkSmDeviceConnectivity200ResponseInner data = 1;
}

message GetNetworkSmDeviceDesktopLogsRequest {
  // Network ID
  string networkId = 1;
  // Device ID
  string deviceId = 2;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;

}

message GetNetworkSmDeviceDesktopLogsResponse {
  repeated GetNetworkSmDeviceDesktopLogs200ResponseInner data = 1;
}

message GetNetworkSmDeviceDeviceCommandLogsRequest {
  // Network ID
  string networkId = 1;
  // Device ID
  string deviceId = 2;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;

}

message GetNetworkSmDeviceDeviceCommandLogsResponse {
  repeated GetNetworkSmDeviceDeviceCommandLogs200ResponseInner data = 1;
}

message GetNetworkSmDevicePerformanceHistoryRequest {
  // Network ID
  string networkId = 1;
  // Device ID
  string deviceId = 2;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;

}

message GetNetworkSmDevicePerformanceHistoryResponse {
  repeated GetNetworkSmDevicePerformanceHistory200ResponseInner data = 1;
}

message GetNetworkSplashLoginAttemptsRequest {
  // Network ID
  string networkId = 1;
  // Only return the login attempts for the specified SSID
  int32 ssidNumber = 2;
  // The username, email, or phone number used during login
  string loginIdentifier = 3;
  // The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months
  int32 timespan = 4;

}

message GetNetworkSplashLoginAttemptsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkTopologyLinkLayerRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkTrafficRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 30 days from today.
  string t0 = 2;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days.
  float timespan = 3;
  // Filter the data by device type: 'combined', 'wireless', 'switch' or 'appliance'. Defaults to 'combined'. When using 'combined', for each rule the data will come from the device type with the most usage.
  string deviceType = 4;

}

message GetNetworkTrafficResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessAirMarshalRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 3;

}

message GetNetworkWirelessAirMarshalResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessChannelUtilizationHistoryRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 600, 1200, 3600, 14400, 86400. The default is 86400.
  int32 resolution = 5;
  // Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
  bool autoResolution = 6;
  // Filter results by network client to return per-device, per-band AP channel utilization metrics inner joined by the queried client's connection history.
  string clientId = 7;
  // Filter results by device to return AP channel utilization metrics for the queried device; either :band or :clientId must be jointly specified.
  string deviceSerial = 8;
  // Filter results by AP tag to return AP channel utilization metrics for devices labeled with the given tag; either :clientId or :deviceSerial must be jointly specified.
  string apTag = 9;
  // Filter results by band (either '2.4', '5' or '6').
  string band = 10;

}

message GetNetworkWirelessChannelUtilizationHistoryResponse {
  repeated GetNetworkWirelessChannelUtilizationHistory200ResponseInner data = 1;
}

message GetNetworkWirelessClientConnectionStatsRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 5;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 6;
  // Filter results by SSID
  int32 ssid = 7;
  // Filter results by VLAN
  int32 vlan = 8;
  // Filter results by AP Tag
  string apTag = 9;

}

message GetNetworkWirelessClientConnectivityEventsRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The number of entries per page returned. Acceptable range is 3 - 1000.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 6;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 7;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 8;
  // A list of event types to include. If not specified, events of all types will be returned. Valid types are 'assoc', 'disassoc', 'auth', 'deauth', 'dns', 'dhcp', 'roam', 'connection' and/or 'sticky'.
  repeated string types = 9;
  // A list of severities to include. If not specified, events of all severities will be returned. Valid severities are 'good', 'info', 'warn' and/or 'bad'.
  repeated string includedSeverities = 10;
  // Filter results by band (either '2.4', '5', '6').
  string band = 11;
  // An SSID number to include. If not specified, events for all SSIDs will be returned.
  int32 ssidNumber = 12;
  // Filter results by an AP's serial number.
  string deviceSerial = 13;

}

message GetNetworkWirelessClientConnectivityEventsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessClientCountHistoryRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.
  int32 resolution = 5;
  // Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
  bool autoResolution = 6;
  // Filter results by network client to return per-device client counts over time inner joined by the queried client's connection history.
  string clientId = 7;
  // Filter results by device.
  string deviceSerial = 8;
  // Filter results by AP tag.
  string apTag = 9;
  // Filter results by band (either '2.4', '5' or '6').
  string band = 10;
  // Filter results by SSID number.
  int32 ssid = 11;

}

message GetNetworkWirelessClientCountHistoryResponse {
  repeated GetNetworkWirelessClientCountHistory200ResponseInner data = 1;
}

message GetNetworkWirelessClientLatencyHistoryRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 791 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day.
  float timespan = 5;
  // The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400.
  int32 resolution = 6;

}

message GetNetworkWirelessClientLatencyHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessClientLatencyStatsRequest {
  // Network ID
  string networkId = 1;
  // Client ID
  string clientId = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 5;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 6;
  // Filter results by SSID
  int32 ssid = 7;
  // Filter results by VLAN
  int32 vlan = 8;
  // Filter results by AP Tag
  string apTag = 9;
  // Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
  string fields = 10;

}

message GetNetworkWirelessClientsConnectionStatsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 4;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 5;
  // Filter results by SSID
  int32 ssid = 6;
  // Filter results by VLAN
  int32 vlan = 7;
  // Filter results by AP Tag
  string apTag = 8;

}

message GetNetworkWirelessClientsConnectionStatsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessClientsLatencyStatsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 4;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 5;
  // Filter results by SSID
  int32 ssid = 6;
  // Filter results by VLAN
  int32 vlan = 7;
  // Filter results by AP Tag
  string apTag = 8;
  // Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
  string fields = 9;

}

message GetNetworkWirelessClientsLatencyStatsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessConnectionStatsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 4;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 5;
  // Filter results by SSID
  int32 ssid = 6;
  // Filter results by VLAN
  int32 vlan = 7;
  // Filter results by AP Tag
  string apTag = 8;

}

message GetNetworkWirelessDataRateHistoryRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.
  int32 resolution = 5;
  // Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
  bool autoResolution = 6;
  // Filter results by network client.
  string clientId = 7;
  // Filter results by device.
  string deviceSerial = 8;
  // Filter results by AP tag.
  string apTag = 9;
  // Filter results by band (either '2.4', '5' or '6').
  string band = 10;
  // Filter results by SSID number.
  int32 ssid = 11;

}

message GetNetworkWirelessDataRateHistoryResponse {
  repeated GetNetworkWirelessDataRateHistory200ResponseInner data = 1;
}

message GetNetworkWirelessDevicesConnectionStatsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 4;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 5;
  // Filter results by SSID
  int32 ssid = 6;
  // Filter results by VLAN
  int32 vlan = 7;
  // Filter results by AP Tag
  string apTag = 8;

}

message GetNetworkWirelessDevicesConnectionStatsResponse {
  repeated GetDeviceWirelessConnectionStats200Response data = 1;
}

message GetNetworkWirelessDevicesLatencyStatsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 4;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 5;
  // Filter results by SSID
  int32 ssid = 6;
  // Filter results by VLAN
  int32 vlan = 7;
  // Filter results by AP Tag
  string apTag = 8;
  // Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
  string fields = 9;

}

message GetNetworkWirelessDevicesLatencyStatsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkWirelessFailedConnectionsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 4;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 5;
  // Filter results by SSID
  int32 ssid = 6;
  // Filter results by VLAN
  int32 vlan = 7;
  // Filter results by AP Tag
  string apTag = 8;
  // Filter by AP
  string serial = 9;
  // Filter by client MAC
  string clientId = 10;

}

message GetNetworkWirelessFailedConnectionsResponse {
  repeated GetNetworkWirelessFailedConnections200ResponseInner data = 1;
}

message GetNetworkWirelessLatencyHistoryRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.
  int32 resolution = 5;
  // Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
  bool autoResolution = 6;
  // Filter results by network client.
  string clientId = 7;
  // Filter results by device.
  string deviceSerial = 8;
  // Filter results by AP tag.
  string apTag = 9;
  // Filter results by band (either '2.4', '5' or '6').
  string band = 10;
  // Filter results by SSID number.
  int32 ssid = 11;
  // Filter by access category.
  string accessCategory = 12;

}

message GetNetworkWirelessLatencyHistoryResponse {
  repeated GetNetworkWirelessLatencyHistory200ResponseInner data = 1;
}

message GetNetworkWirelessLatencyStatsRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
  float timespan = 4;
  // Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
  string band = 5;
  // Filter results by SSID
  int32 ssid = 6;
  // Filter results by VLAN
  int32 vlan = 7;
  // Filter results by AP Tag
  string apTag = 8;
  // Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.
  string fields = 9;

}

message GetNetworkWirelessMeshStatusesRequest {
  // Network ID
  string networkId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 500. Default is 50.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;

}

message GetNetworkWirelessSignalQualityHistoryRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.
  int32 resolution = 5;
  // Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
  bool autoResolution = 6;
  // Filter results by network client.
  string clientId = 7;
  // Filter results by device.
  string deviceSerial = 8;
  // Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified.
  string apTag = 9;
  // Filter results by band (either '2.4', '5' or '6').
  string band = 10;
  // Filter results by SSID number.
  int32 ssid = 11;

}

message GetNetworkWirelessSignalQualityHistoryResponse {
  repeated GetNetworkWirelessSignalQualityHistory200ResponseInner data = 1;
}

message GetNetworkWirelessUsageHistoryRequest {
  // Network ID
  string networkId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 4;
  // The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.
  int32 resolution = 5;
  // Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
  bool autoResolution = 6;
  // Filter results by network client to return per-device AP usage over time inner joined by the queried client's connection history.
  string clientId = 7;
  // Filter results by device. Requires :band.
  string deviceSerial = 8;
  // Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified.
  string apTag = 9;
  // Filter results by band (either '2.4', '5' or '6').
  string band = 10;
  // Filter results by SSID number.
  int32 ssid = 11;

}

message GetNetworkWirelessUsageHistoryResponse {
  repeated GetNetworkWirelessUsageHistory200ResponseInner data = 1;
}

message GetOrganizationAdaptivePolicyOverviewRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationApplianceSecurityEventsRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.
  float timespan = 4;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
  int32 perPage = 5;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 6;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 7;
  // Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.
  string sortOrder = 8;

}

message GetOrganizationApplianceSecurityEventsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationApplianceUplinkStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of network IDs. The returned devices will be filtered to only include these networks.
  repeated string networkIds = 5;
  // A list of serial numbers. The returned devices will be filtered to only include these serials.
  repeated string serials = 6;
  // A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
  repeated string iccids = 7;

}

message GetOrganizationApplianceUplinkStatusesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationApplianceUplinksUsageByNetworkRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 14 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationApplianceUplinksUsageByNetworkResponse {
  repeated GetOrganizationApplianceUplinksUsageByNetwork200ResponseInner data = 1;
}

message GetOrganizationApplianceVpnStatsRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 300. Default is 300.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456
  repeated string networkIds = 5;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 6;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 7;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 8;

}

message GetOrganizationApplianceVpnStatsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationApplianceVpnStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 300. Default is 300.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456
  repeated string networkIds = 5;

}

message GetOrganizationApplianceVpnStatusesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationCellularGatewayUplinkStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of network IDs. The returned devices will be filtered to only include these networks.
  repeated string networkIds = 5;
  // A list of serial numbers. The returned devices will be filtered to only include these serials.
  repeated string serials = 6;
  // A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
  repeated string iccids = 7;

}

message GetOrganizationCellularGatewayUplinkStatusesResponse {
  repeated GetOrganizationCellularGatewayUplinkStatuses200ResponseInner data = 1;
}

message GetOrganizationClientsBandwidthUsageHistoryRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationClientsBandwidthUsageHistoryResponse {
  repeated GetOrganizationClientsBandwidthUsageHistory200ResponseInner data = 1;
}

message GetOrganizationClientsOverviewRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationConfigurationChangesRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 365 days.
  float timespan = 4;
  // The number of entries per page returned. Acceptable range is 3 - 5000. Default is 5000.
  int32 perPage = 5;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 6;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 7;
  // Filters on the given network
  string networkId = 8;
  // Filters on the given Admin
  string adminId = 9;

}

message GetOrganizationConfigurationChangesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationDevicesAvailabilitiesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches.
  repeated string networkIds = 5;
  // Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches.
  repeated string productTypes = 6;
  // Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
  repeated string serials = 7;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
  repeated string tags = 8;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 9;

}

message GetOrganizationDevicesAvailabilitiesResponse {
  repeated GetOrganizationDevicesAvailabilities200ResponseInner data = 1;
}

message GetOrganizationDevicesAvailabilitiesChangeHistoryRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // The beginning of the timespan for the data. The maximum lookback period is 14 days from today.
  string t0 = 5;
  // The end of the timespan for the data. t1 can be a maximum of 14 days after t0.
  string t1 = 6;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 days. The default is 1 day.
  float timespan = 7;
  // Optional parameter to filter device availabilities history by device serial numbers
  repeated string serials = 8;
  // Optional parameter to filter device availabilities history by device product types
  repeated string productTypes = 9;
  // Optional parameter to filter device availabilities history by network IDs
  repeated string networkIds = 10;
  // Optional parameter to filter device availabilities history by device statuses
  repeated string statuses = 11;

}

message GetOrganizationDevicesAvailabilitiesChangeHistoryResponse {
  repeated GetOrganizationDevicesAvailabilitiesChangeHistory200ResponseInner data = 1;
}

message GetOrganizationDevicesProvisioningStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter device by network ID. This filter uses multiple exact matches.
  repeated string networkIds = 5;
  // Optional parameter to filter device by device product types. This filter uses multiple exact matches.
  repeated string productTypes = 6;
  // Optional parameter to filter device by device serial numbers. This filter uses multiple exact matches.
  repeated string serials = 7;
  // An optional parameter to filter devices by the provisioning status. Accepted statuses: unprovisioned, incomplete, complete.
  string status = 8;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
  repeated string tags = 9;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 10;

}

message GetOrganizationDevicesProvisioningStatusesResponse {
  repeated GetOrganizationDevicesProvisioningStatuses200ResponseInner data = 1;
}

message GetOrganizationDevicesStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter devices by network ids.
  repeated string networkIds = 5;
  // Optional parameter to filter devices by serials.
  repeated string serials = 6;
  // Optional parameter to filter devices by statuses. Valid statuses are [\"online\", \"alerting\", \"offline\", \"dormant\"].
  repeated string statuses = 7;
  // An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
  repeated string productTypes = 8;
  // Optional parameter to filter devices by models.
  repeated string models = 9;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
  repeated string tags = 10;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 11;

}

message GetOrganizationDevicesStatusesResponse {
  repeated GetOrganizationDevicesStatuses200ResponseInner data = 1;
}

message GetOrganizationDevicesStatusesOverviewRequest {
  // Organization ID
  string organizationId = 1;
  // An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
  repeated string productTypes = 2;
  // An optional parameter to filter device statuses by network.
  repeated string networkIds = 3;

}

message GetOrganizationDevicesUplinksAddressesByDeviceRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter device uplinks by network ID. This filter uses multiple exact matches.
  repeated string networkIds = 5;
  // Optional parameter to filter device uplinks by device product types. This filter uses multiple exact matches.
  repeated string productTypes = 6;
  // Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
  repeated string serials = 7;
  // An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
  repeated string tags = 8;
  // An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
  string tagsFilterType = 9;

}

message GetOrganizationDevicesUplinksAddressesByDeviceResponse {
  repeated GetOrganizationDevicesUplinksAddressesByDevice200ResponseInner data = 1;
}

message GetOrganizationDevicesUplinksLossAndLatencyRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
  float timespan = 4;
  // Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, wan3, cellular. Default will return all uplinks.
  string uplink = 5;
  // Optional filter for a specific destination IP. Default will return all destination IPs.
  string ip = 6;

}

message GetOrganizationDevicesUplinksLossAndLatencyResponse {
  repeated GetOrganizationDevicesUplinksLossAndLatency200ResponseInner data = 1;
}

message GetOrganizationLicensesOverviewRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationOpenapiSpecRequest {
  // Organization ID
  string organizationId = 1;
  // OpenAPI Specification version to return. Default is 2
  int32 version = 2;

}

message GetOrganizationSensorReadingsHistoryRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days and 6 hours from today.
  string t0 = 5;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 6;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.
  float timespan = 7;
  // Optional parameter to filter readings by network.
  repeated string networkIds = 8;
  // Optional parameter to filter readings by sensor.
  repeated string serials = 9;
  // Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
  repeated string metrics = 10;

}

message GetOrganizationSensorReadingsHistoryResponse {
  repeated GetOrganizationSensorReadingsHistory200ResponseInner data = 1;
}

message GetOrganizationSensorReadingsLatestRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Optional parameter to filter readings by network.
  repeated string networkIds = 5;
  // Optional parameter to filter readings by sensor.
  repeated string serials = 6;
  // Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
  repeated string metrics = 7;

}

message GetOrganizationSensorReadingsLatestResponse {
  repeated GetOrganizationSensorReadingsLatest200ResponseInner data = 1;
}

message GetOrganizationSummaryTopAppliancesByUtilizationRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 25 minutes and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopAppliancesByUtilizationResponse {
  repeated GetOrganizationSummaryTopAppliancesByUtilization200ResponseInner data = 1;
}

message GetOrganizationSummaryTopClientsByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopClientsByUsageResponse {
  repeated GetOrganizationSummaryTopClientsByUsage200ResponseInner data = 1;
}

message GetOrganizationSummaryTopClientsManufacturersByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopClientsManufacturersByUsageResponse {
  repeated GetOrganizationSummaryTopClientsManufacturersByUsage200ResponseInner data = 1;
}

message GetOrganizationSummaryTopDevicesByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopDevicesByUsageResponse {
  repeated GetOrganizationSummaryTopDevicesByUsage200ResponseInner data = 1;
}

message GetOrganizationSummaryTopDevicesModelsByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopDevicesModelsByUsageResponse {
  repeated GetOrganizationSummaryTopDevicesModelsByUsage200ResponseInner data = 1;
}

message GetOrganizationSummaryTopSsidsByUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 8 hours and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopSsidsByUsageResponse {
  repeated GetOrganizationSummaryTopSsidsByUsage200ResponseInner data = 1;
}

message GetOrganizationSummaryTopSwitchesByEnergyUsageRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be greater than or equal to 25 minutes and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;

}

message GetOrganizationSummaryTopSwitchesByEnergyUsageResponse {
  repeated GetOrganizationSummaryTopSwitchesByEnergyUsage200ResponseInner data = 1;
}

message GetOrganizationUplinksStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of network IDs. The returned devices will be filtered to only include these networks.
  repeated string networkIds = 5;
  // A list of serial numbers. The returned devices will be filtered to only include these serials.
  repeated string serials = 6;
  // A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
  repeated string iccids = 7;

}

message GetOrganizationUplinksStatusesResponse {
  repeated GetOrganizationUplinksStatuses200ResponseInner data = 1;
}

message GetOrganizationWebhooksAlertTypesRequest {
  // Organization ID
  string organizationId = 1;
  // Filter sample alerts to a specific product type
  string productType = 2;

}

message GetOrganizationWebhooksAlertTypesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationWebhooksLogsRequest {
  // Organization ID
  string organizationId = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 90 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
  float timespan = 4;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
  int32 perPage = 5;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 6;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 7;
  // The URL the webhook was sent to
  string url = 8;

}

message GetOrganizationWebhooksLogsResponse {
  repeated GetOrganizationWebhooksLogs200ResponseInner data = 1;
}

message GetOrganizationWirelessDevicesChannelUtilizationByDeviceRequest {
  // Organization ID
  string organizationId = 1;
  // Filter results by network.
  repeated string networkIds = 2;
  // Filter results by device.
  repeated string serials = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // The beginning of the timespan for the data. The maximum lookback period is 90 days from today.
  string t0 = 7;
  // The end of the timespan for the data. t1 can be a maximum of 90 days after t0.
  string t1 = 8;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 90 days. The default is 7 days.
  float timespan = 9;
  // The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.
  int32 interval = 10;

}

message GetOrganizationWirelessDevicesChannelUtilizationByDeviceResponse {
  repeated GetOrganizationWirelessDevicesChannelUtilizationByDevice200ResponseInner data = 1;
}

message GetOrganizationWirelessDevicesChannelUtilizationByNetworkRequest {
  // Organization ID
  string organizationId = 1;
  // Filter results by network.
  repeated string networkIds = 2;
  // Filter results by device.
  repeated string serials = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // The beginning of the timespan for the data. The maximum lookback period is 90 days from today.
  string t0 = 7;
  // The end of the timespan for the data. t1 can be a maximum of 90 days after t0.
  string t1 = 8;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 90 days. The default is 7 days.
  float timespan = 9;
  // The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.
  int32 interval = 10;

}

message GetOrganizationWirelessDevicesChannelUtilizationByNetworkResponse {
  repeated GetOrganizationWirelessDevicesChannelUtilizationByNetwork200ResponseInner data = 1;
}

message GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalRequest {
  // Organization ID
  string organizationId = 1;
  // Filter results by network.
  repeated string networkIds = 2;
  // Filter results by device.
  repeated string serials = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 7;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 8;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 9;
  // The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.
  int32 interval = 10;

}

message GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByIntervalResponse {
  repeated GetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByInterval200ResponseInner data = 1;
}

message GetOrganizationWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalRequest {
  // Organization ID
  string organizationId = 1;
  // Filter results by network.
  repeated string networkIds = 2;
  // Filter results by device.
  repeated string serials = 3;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 4;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 5;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 6;
  // The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
  string t0 = 7;
  // The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
  string t1 = 8;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
  float timespan = 9;
  // The time interval in seconds for returned data. The valid intervals are: 300, 600, 3600, 7200, 14400, 21600. The default is 3600.
  int32 interval = 10;

}

message GetOrganizationWirelessDevicesChannelUtilizationHistoryByNetworkByIntervalResponse {
  repeated GetOrganizationWirelessDevicesChannelUtilizationHistoryByNetworkByInterval200ResponseInner data = 1;
}

message GetOrganizationWirelessDevicesEthernetStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456
  repeated string networkIds = 5;

}

message GetOrganizationWirelessDevicesEthernetStatusesResponse {
  repeated GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner data = 1;
}

