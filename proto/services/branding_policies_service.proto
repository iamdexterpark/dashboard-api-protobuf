/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.brandingpoliciesservice;

import "google/protobuf/empty.proto";
import public "models/create_organization_branding_policy201_response.proto";
import public "models/create_organization_branding_policy_request.proto";
import public "models/get_organization_branding_policies200_response_inner.proto";
import public "models/get_organization_branding_policies_priorities200_response.proto";
import public "models/update_organization_branding_policies_priorities_request.proto";
import public "models/update_organization_branding_policy_request.proto";

service BrandingPoliciesService {
  rpc CreateOrganizationBrandingPolicy (CreateOrganizationBrandingPolicyRequest) returns (CreateOrganizationBrandingPolicy201Response);

  rpc DeleteOrganizationBrandingPolicy (DeleteOrganizationBrandingPolicyRequest) returns (google.protobuf.Empty);

  rpc GetOrganizationBrandingPolicies (GetOrganizationBrandingPoliciesRequest) returns (GetOrganizationBrandingPoliciesResponse);

  rpc GetOrganizationBrandingPoliciesPriorities (GetOrganizationBrandingPoliciesPrioritiesRequest) returns (GetOrganizationBrandingPoliciesPriorities200Response);

  rpc GetOrganizationBrandingPolicy (GetOrganizationBrandingPolicyRequest) returns (GetOrganizationBrandingPolicies200ResponseInner);

  rpc UpdateOrganizationBrandingPoliciesPriorities (UpdateOrganizationBrandingPoliciesPrioritiesRequest) returns (GetOrganizationBrandingPoliciesPriorities200Response);

  rpc UpdateOrganizationBrandingPolicy (UpdateOrganizationBrandingPolicyRequest) returns (GetOrganizationBrandingPolicies200ResponseInner);

}

message CreateOrganizationBrandingPolicyRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationBrandingPolicyRequest createOrganizationBrandingPolicyRequest = 2;

}

message DeleteOrganizationBrandingPolicyRequest {
  // Organization ID
  string organizationId = 1;
  // Branding policy ID
  string brandingPolicyId = 2;

}

message GetOrganizationBrandingPoliciesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationBrandingPoliciesResponse {
  repeated GetOrganizationBrandingPolicies200ResponseInner data = 1;
}

message GetOrganizationBrandingPoliciesPrioritiesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationBrandingPolicyRequest {
  // Organization ID
  string organizationId = 1;
  // Branding policy ID
  string brandingPolicyId = 2;

}

message UpdateOrganizationBrandingPoliciesPrioritiesRequest {
  // Organization ID
  string organizationId = 1;
  UpdateOrganizationBrandingPoliciesPrioritiesRequest updateOrganizationBrandingPoliciesPrioritiesRequest = 2;

}

message UpdateOrganizationBrandingPolicyRequest {
  // Organization ID
  string organizationId = 1;
  // Branding policy ID
  string brandingPolicyId = 2;
  UpdateOrganizationBrandingPolicyRequest updateOrganizationBrandingPolicyRequest = 3;

}

