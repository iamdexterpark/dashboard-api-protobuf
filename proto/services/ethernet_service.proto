/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.ethernetservice;

import "google/protobuf/empty.proto";
import public "models/assign_network_wireless_ethernet_ports_profiles201_response.proto";
import public "models/assign_network_wireless_ethernet_ports_profiles_request.proto";
import public "models/create_network_wireless_ethernet_ports_profile_request.proto";
import public "models/get_network_wireless_ethernet_ports_profiles200_response_inner.proto";
import public "models/get_organization_wireless_devices_ethernet_statuses200_response_inner.proto";
import public "models/set_network_wireless_ethernet_ports_profiles_default200_response.proto";
import public "models/set_network_wireless_ethernet_ports_profiles_default_request.proto";
import public "models/update_network_wireless_ethernet_ports_profile_request.proto";

service EthernetService {
  rpc AssignNetworkWirelessEthernetPortsProfiles (AssignNetworkWirelessEthernetPortsProfilesRequest) returns (AssignNetworkWirelessEthernetPortsProfiles201Response);

  rpc CreateNetworkWirelessEthernetPortsProfile (CreateNetworkWirelessEthernetPortsProfileRequest) returns (GetNetworkWirelessEthernetPortsProfiles200ResponseInner);

  rpc DeleteNetworkWirelessEthernetPortsProfile (DeleteNetworkWirelessEthernetPortsProfileRequest) returns (google.protobuf.Empty);

  rpc GetNetworkWirelessEthernetPortsProfile (GetNetworkWirelessEthernetPortsProfileRequest) returns (GetNetworkWirelessEthernetPortsProfiles200ResponseInner);

  rpc GetNetworkWirelessEthernetPortsProfiles (GetNetworkWirelessEthernetPortsProfilesRequest) returns (GetNetworkWirelessEthernetPortsProfilesResponse);

  rpc GetOrganizationWirelessDevicesEthernetStatuses (GetOrganizationWirelessDevicesEthernetStatusesRequest) returns (GetOrganizationWirelessDevicesEthernetStatusesResponse);

  rpc SetNetworkWirelessEthernetPortsProfilesDefault (SetNetworkWirelessEthernetPortsProfilesDefaultRequest) returns (SetNetworkWirelessEthernetPortsProfilesDefault200Response);

  rpc UpdateNetworkWirelessEthernetPortsProfile (UpdateNetworkWirelessEthernetPortsProfileRequest) returns (GetNetworkWirelessEthernetPortsProfiles200ResponseInner);

}

message AssignNetworkWirelessEthernetPortsProfilesRequest {
  // Network ID
  string networkId = 1;
  AssignNetworkWirelessEthernetPortsProfilesRequest assignNetworkWirelessEthernetPortsProfilesRequest = 2;

}

message CreateNetworkWirelessEthernetPortsProfileRequest {
  // Network ID
  string networkId = 1;
  CreateNetworkWirelessEthernetPortsProfileRequest createNetworkWirelessEthernetPortsProfileRequest = 2;

}

message DeleteNetworkWirelessEthernetPortsProfileRequest {
  // Network ID
  string networkId = 1;
  // Profile ID
  string profileId = 2;

}

message GetNetworkWirelessEthernetPortsProfileRequest {
  // Network ID
  string networkId = 1;
  // Profile ID
  string profileId = 2;

}

message GetNetworkWirelessEthernetPortsProfilesRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkWirelessEthernetPortsProfilesResponse {
  repeated GetNetworkWirelessEthernetPortsProfiles200ResponseInner data = 1;
}

message GetOrganizationWirelessDevicesEthernetStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456
  repeated string networkIds = 5;

}

message GetOrganizationWirelessDevicesEthernetStatusesResponse {
  repeated GetOrganizationWirelessDevicesEthernetStatuses200ResponseInner data = 1;
}

message SetNetworkWirelessEthernetPortsProfilesDefaultRequest {
  // Network ID
  string networkId = 1;
  SetNetworkWirelessEthernetPortsProfilesDefaultRequest setNetworkWirelessEthernetPortsProfilesDefaultRequest = 2;

}

message UpdateNetworkWirelessEthernetPortsProfileRequest {
  // Network ID
  string networkId = 1;
  // Profile ID
  string profileId = 2;
  UpdateNetworkWirelessEthernetPortsProfileRequest updateNetworkWirelessEthernetPortsProfileRequest = 3;

}

