/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.inventoryservice;

import "google/protobuf/empty.proto";
import public "models/claim_into_organization200_response.proto";
import public "models/claim_into_organization_inventory_request.proto";
import public "models/create_organization_inventory_onboarding_cloud_monitoring_export_event_request.proto";
import public "models/create_organization_inventory_onboarding_cloud_monitoring_import201_response_inner.proto";
import public "models/create_organization_inventory_onboarding_cloud_monitoring_import_request.proto";
import public "models/create_organization_inventory_onboarding_cloud_monitoring_prepare201_response_inner.proto";
import public "models/create_organization_inventory_onboarding_cloud_monitoring_prepare_request.proto";
import public "models/get_network200_response.proto";
import public "models/get_organization_inventory_devices200_response_inner.proto";
import public "models/get_organization_inventory_onboarding_cloud_monitoring_imports200_response_inner.proto";
import public "models/release_from_organization_inventory_request.proto";
import public "models/todo_object_mapping.proto";

service InventoryService {
  rpc ClaimIntoOrganizationInventory (ClaimIntoOrganizationInventoryRequest) returns (ClaimIntoOrganization200Response);

  rpc CreateOrganizationInventoryOnboardingCloudMonitoringExportEvent (CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateOrganizationInventoryOnboardingCloudMonitoringImport (CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest) returns (CreateOrganizationInventoryOnboardingCloudMonitoringImportResponse);

  rpc CreateOrganizationInventoryOnboardingCloudMonitoringPrepare (CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest) returns (CreateOrganizationInventoryOnboardingCloudMonitoringPrepareResponse);

  rpc GetOrganizationInventoryDevice (GetOrganizationInventoryDeviceRequest) returns (GetOrganizationInventoryDevices200ResponseInner);

  rpc GetOrganizationInventoryDevices (GetOrganizationInventoryDevicesRequest) returns (GetOrganizationInventoryDevicesResponse);

  rpc GetOrganizationInventoryOnboardingCloudMonitoringImports (GetOrganizationInventoryOnboardingCloudMonitoringImportsRequest) returns (GetOrganizationInventoryOnboardingCloudMonitoringImportsResponse);

  rpc GetOrganizationInventoryOnboardingCloudMonitoringNetworks (GetOrganizationInventoryOnboardingCloudMonitoringNetworksRequest) returns (GetOrganizationInventoryOnboardingCloudMonitoringNetworksResponse);

  rpc ReleaseFromOrganizationInventory (ReleaseFromOrganizationInventoryRequest) returns (TODO_OBJECT_MAPPING);

}

message ClaimIntoOrganizationInventoryRequest {
  // Organization ID
  string organizationId = 1;
  ClaimIntoOrganizationInventoryRequest claimIntoOrganizationInventoryRequest = 2;

}

message CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest createOrganizationInventoryOnboardingCloudMonitoringExportEventRequest = 2;

}

message CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest createOrganizationInventoryOnboardingCloudMonitoringImportRequest = 2;

}

message CreateOrganizationInventoryOnboardingCloudMonitoringImportResponse {
  repeated CreateOrganizationInventoryOnboardingCloudMonitoringImport201ResponseInner data = 1;
}

message CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest createOrganizationInventoryOnboardingCloudMonitoringPrepareRequest = 2;

}

message CreateOrganizationInventoryOnboardingCloudMonitoringPrepareResponse {
  repeated CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ResponseInner data = 1;
}

message GetOrganizationInventoryDeviceRequest {
  // Organization ID
  string organizationId = 1;
  // Serial
  string serial = 2;

}

message GetOrganizationInventoryDevicesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // Filter results by used or unused inventory. Accepted values are 'used' or 'unused'.
  string usedState = 5;
  // Search for devices in inventory based on serial number, mac address, or model.
  string search = 6;
  // Search for devices in inventory based on mac addresses.
  repeated string macs = 7;
  // Search for devices in inventory based on network ids.
  repeated string networkIds = 8;
  // Search for devices in inventory based on serials.
  repeated string serials = 9;
  // Search for devices in inventory based on model.
  repeated string models = 10;
  // Search for devices in inventory based on order numbers.
  repeated string orderNumbers = 11;
  // Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
  repeated string tags = 12;
  // To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'.
  string tagsFilterType = 13;
  // Filter devices by product type. Accepted values are appliance, camera, cellularGateway, sensor, switch, systemsManager, and wireless.
  repeated string productTypes = 14;

}

message GetOrganizationInventoryDevicesResponse {
  repeated GetOrganizationInventoryDevices200ResponseInner data = 1;
}

message GetOrganizationInventoryOnboardingCloudMonitoringImportsRequest {
  // Organization ID
  string organizationId = 1;
  // import ids from an imports
  repeated string importIds = 2;

}

message GetOrganizationInventoryOnboardingCloudMonitoringImportsResponse {
  repeated GetOrganizationInventoryOnboardingCloudMonitoringImports200ResponseInner data = 1;
}

message GetOrganizationInventoryOnboardingCloudMonitoringNetworksRequest {
  // Organization ID
  string organizationId = 1;
  // Device Type switch or wireless controller
  string deviceType = 2;
  // The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.
  int32 perPage = 3;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 4;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 5;

}

message GetOrganizationInventoryOnboardingCloudMonitoringNetworksResponse {
  repeated GetNetwork200Response data = 1;
}

message ReleaseFromOrganizationInventoryRequest {
  // Organization ID
  string organizationId = 1;
  ReleaseFromOrganizationInventoryRequest releaseFromOrganizationInventoryRequest = 2;

}

