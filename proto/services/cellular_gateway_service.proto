/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.cellulargatewayservice;

import "google/protobuf/empty.proto";
import public "models/get_network_cellular_gateway_dhcp200_response.proto";
import public "models/get_organization_cellular_gateway_uplink_statuses200_response_inner.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_device_cellular_gateway_lan_request.proto";
import public "models/update_device_cellular_gateway_port_forwarding_rules_request.proto";
import public "models/update_network_cellular_gateway_connectivity_monitoring_destinations_request.proto";
import public "models/update_network_cellular_gateway_dhcp_request.proto";
import public "models/update_network_cellular_gateway_subnet_pool_request.proto";
import public "models/update_network_cellular_gateway_uplink_request.proto";

service CellularGatewayService {
  rpc GetDeviceCellularGatewayLan (GetDeviceCellularGatewayLanRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetDeviceCellularGatewayPortForwardingRules (GetDeviceCellularGatewayPortForwardingRulesRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkCellularGatewayConnectivityMonitoringDestinations (GetNetworkCellularGatewayConnectivityMonitoringDestinationsRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkCellularGatewayDhcp (GetNetworkCellularGatewayDhcpRequest) returns (GetNetworkCellularGatewayDhcp200Response);

  rpc GetNetworkCellularGatewaySubnetPool (GetNetworkCellularGatewaySubnetPoolRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkCellularGatewayUplink (GetNetworkCellularGatewayUplinkRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationCellularGatewayUplinkStatuses (GetOrganizationCellularGatewayUplinkStatusesRequest) returns (GetOrganizationCellularGatewayUplinkStatusesResponse);

  rpc UpdateDeviceCellularGatewayLan (UpdateDeviceCellularGatewayLanRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateDeviceCellularGatewayPortForwardingRules (UpdateDeviceCellularGatewayPortForwardingRulesRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkCellularGatewayConnectivityMonitoringDestinations (UpdateNetworkCellularGatewayConnectivityMonitoringDestinationsRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkCellularGatewayDhcp (UpdateNetworkCellularGatewayDhcpRequest) returns (GetNetworkCellularGatewayDhcp200Response);

  rpc UpdateNetworkCellularGatewaySubnetPool (UpdateNetworkCellularGatewaySubnetPoolRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkCellularGatewayUplink (UpdateNetworkCellularGatewayUplinkRequest) returns (TODO_OBJECT_MAPPING);

}

message GetDeviceCellularGatewayLanRequest {
  // Serial
  string serial = 1;

}

message GetDeviceCellularGatewayPortForwardingRulesRequest {
  // Serial
  string serial = 1;

}

message GetNetworkCellularGatewayConnectivityMonitoringDestinationsRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkCellularGatewayDhcpRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkCellularGatewaySubnetPoolRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkCellularGatewayUplinkRequest {
  // Network ID
  string networkId = 1;

}

message GetOrganizationCellularGatewayUplinkStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
  int32 perPage = 2;
  // A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string startingAfter = 3;
  // A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
  string endingBefore = 4;
  // A list of network IDs. The returned devices will be filtered to only include these networks.
  repeated string networkIds = 5;
  // A list of serial numbers. The returned devices will be filtered to only include these serials.
  repeated string serials = 6;
  // A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
  repeated string iccids = 7;

}

message GetOrganizationCellularGatewayUplinkStatusesResponse {
  repeated GetOrganizationCellularGatewayUplinkStatuses200ResponseInner data = 1;
}

message UpdateDeviceCellularGatewayLanRequest {
  // Serial
  string serial = 1;
  UpdateDeviceCellularGatewayLanRequest updateDeviceCellularGatewayLanRequest = 2;

}

message UpdateDeviceCellularGatewayPortForwardingRulesRequest {
  // Serial
  string serial = 1;
  UpdateDeviceCellularGatewayPortForwardingRulesRequest updateDeviceCellularGatewayPortForwardingRulesRequest = 2;

}

message UpdateNetworkCellularGatewayConnectivityMonitoringDestinationsRequest {
  // Network ID
  string networkId = 1;
  UpdateNetworkCellularGatewayConnectivityMonitoringDestinationsRequest updateNetworkCellularGatewayConnectivityMonitoringDestinationsRequest = 2;

}

message UpdateNetworkCellularGatewayDhcpRequest {
  // Network ID
  string networkId = 1;
  UpdateNetworkCellularGatewayDhcpRequest updateNetworkCellularGatewayDhcpRequest = 2;

}

message UpdateNetworkCellularGatewaySubnetPoolRequest {
  // Network ID
  string networkId = 1;
  UpdateNetworkCellularGatewaySubnetPoolRequest updateNetworkCellularGatewaySubnetPoolRequest = 2;

}

message UpdateNetworkCellularGatewayUplinkRequest {
  // Network ID
  string networkId = 1;
  UpdateNetworkCellularGatewayUplinkRequest updateNetworkCellularGatewayUplinkRequest = 2;

}

