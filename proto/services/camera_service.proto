/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.cameraservice;

import "google/protobuf/empty.proto";
import public "models/create_network_camera_quality_retention_profile_request.proto";
import public "models/create_network_camera_wireless_profile_request.proto";
import public "models/create_organization_camera_custom_analytics_artifact_request.proto";
import public "models/create_organization_camera_role_request.proto";
import public "models/generate_device_camera_snapshot_request.proto";
import public "models/get_device_camera_video_settings200_response.proto";
import public "models/get_network_camera_schedules200_response_inner.proto";
import public "models/get_organization_camera_permissions200_response_inner.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_device_camera_custom_analytics_request.proto";
import public "models/update_device_camera_sense_request.proto";
import public "models/update_device_camera_video_settings_request.proto";
import public "models/update_device_camera_wireless_profiles_request.proto";
import public "models/update_network_camera_quality_retention_profile_request.proto";
import public "models/update_network_camera_wireless_profile_request.proto";
import public "models/update_organization_camera_onboarding_statuses_request.proto";
import public "models/update_organization_camera_role_request.proto";

service CameraService {
  rpc CreateNetworkCameraQualityRetentionProfile (CreateNetworkCameraQualityRetentionProfileRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateNetworkCameraWirelessProfile (CreateNetworkCameraWirelessProfileRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateOrganizationCameraCustomAnalyticsArtifact (CreateOrganizationCameraCustomAnalyticsArtifactRequest) returns (TODO_OBJECT_MAPPING);

  rpc CreateOrganizationCameraRole (CreateOrganizationCameraRoleRequest) returns (TODO_OBJECT_MAPPING);

  rpc DeleteNetworkCameraQualityRetentionProfile (DeleteNetworkCameraQualityRetentionProfileRequest) returns (google.protobuf.Empty);

  rpc DeleteNetworkCameraWirelessProfile (DeleteNetworkCameraWirelessProfileRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationCameraCustomAnalyticsArtifact (DeleteOrganizationCameraCustomAnalyticsArtifactRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationCameraRole (DeleteOrganizationCameraRoleRequest) returns (google.protobuf.Empty);

  rpc GenerateDeviceCameraSnapshot (GenerateDeviceCameraSnapshotRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetDeviceCameraAnalyticsLive (GetDeviceCameraAnalyticsLiveRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetDeviceCameraAnalyticsOverview (GetDeviceCameraAnalyticsOverviewRequest) returns (GetDeviceCameraAnalyticsOverviewResponse);

  rpc GetDeviceCameraAnalyticsRecent (GetDeviceCameraAnalyticsRecentRequest) returns (GetDeviceCameraAnalyticsRecentResponse);

  rpc GetDeviceCameraAnalyticsZoneHistory (GetDeviceCameraAnalyticsZoneHistoryRequest) returns (GetDeviceCameraAnalyticsZoneHistoryResponse);

  rpc GetDeviceCameraAnalyticsZones (GetDeviceCameraAnalyticsZonesRequest) returns (GetDeviceCameraAnalyticsZonesResponse);

  rpc GetDeviceCameraCustomAnalytics (GetDeviceCameraCustomAnalyticsRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetDeviceCameraSense (GetDeviceCameraSenseRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetDeviceCameraSenseObjectDetectionModels (GetDeviceCameraSenseObjectDetectionModelsRequest) returns (GetDeviceCameraSenseObjectDetectionModelsResponse);

  rpc GetDeviceCameraVideoLink (GetDeviceCameraVideoLinkRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetDeviceCameraVideoSettings (GetDeviceCameraVideoSettingsRequest) returns (GetDeviceCameraVideoSettings200Response);

  rpc GetDeviceCameraWirelessProfiles (GetDeviceCameraWirelessProfilesRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkCameraQualityRetentionProfile (GetNetworkCameraQualityRetentionProfileRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkCameraQualityRetentionProfiles (GetNetworkCameraQualityRetentionProfilesRequest) returns (GetNetworkCameraQualityRetentionProfilesResponse);

  rpc GetNetworkCameraSchedules (GetNetworkCameraSchedulesRequest) returns (GetNetworkCameraSchedulesResponse);

  rpc GetNetworkCameraWirelessProfile (GetNetworkCameraWirelessProfileRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkCameraWirelessProfiles (GetNetworkCameraWirelessProfilesRequest) returns (GetNetworkCameraWirelessProfilesResponse);

  rpc GetOrganizationCameraCustomAnalyticsArtifact (GetOrganizationCameraCustomAnalyticsArtifactRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationCameraCustomAnalyticsArtifacts (GetOrganizationCameraCustomAnalyticsArtifactsRequest) returns (GetOrganizationCameraCustomAnalyticsArtifactsResponse);

  rpc GetOrganizationCameraOnboardingStatuses (GetOrganizationCameraOnboardingStatusesRequest) returns (GetOrganizationCameraOnboardingStatusesResponse);

  rpc GetOrganizationCameraPermission (GetOrganizationCameraPermissionRequest) returns (GetOrganizationCameraPermissions200ResponseInner);

  rpc GetOrganizationCameraPermissions (GetOrganizationCameraPermissionsRequest) returns (GetOrganizationCameraPermissionsResponse);

  rpc GetOrganizationCameraRole (GetOrganizationCameraRoleRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetOrganizationCameraRoles (GetOrganizationCameraRolesRequest) returns (GetOrganizationCameraRolesResponse);

  rpc UpdateDeviceCameraCustomAnalytics (UpdateDeviceCameraCustomAnalyticsRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateDeviceCameraSense (UpdateDeviceCameraSenseRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateDeviceCameraVideoSettings (UpdateDeviceCameraVideoSettingsRequest) returns (GetDeviceCameraVideoSettings200Response);

  rpc UpdateDeviceCameraWirelessProfiles (UpdateDeviceCameraWirelessProfilesRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkCameraQualityRetentionProfile (UpdateNetworkCameraQualityRetentionProfileRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateNetworkCameraWirelessProfile (UpdateNetworkCameraWirelessProfileRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationCameraOnboardingStatuses (UpdateOrganizationCameraOnboardingStatusesRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationCameraRole (UpdateOrganizationCameraRoleRequest) returns (TODO_OBJECT_MAPPING);

}

message CreateNetworkCameraQualityRetentionProfileRequest {
  // Network ID
  string networkId = 1;
  CreateNetworkCameraQualityRetentionProfileRequest createNetworkCameraQualityRetentionProfileRequest = 2;

}

message CreateNetworkCameraWirelessProfileRequest {
  // Network ID
  string networkId = 1;
  CreateNetworkCameraWirelessProfileRequest createNetworkCameraWirelessProfileRequest = 2;

}

message CreateOrganizationCameraCustomAnalyticsArtifactRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationCameraCustomAnalyticsArtifactRequest createOrganizationCameraCustomAnalyticsArtifactRequest = 2;

}

message CreateOrganizationCameraRoleRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationCameraRoleRequest createOrganizationCameraRoleRequest = 2;

}

message DeleteNetworkCameraQualityRetentionProfileRequest {
  // Network ID
  string networkId = 1;
  // Quality retention profile ID
  string qualityRetentionProfileId = 2;

}

message DeleteNetworkCameraWirelessProfileRequest {
  // Network ID
  string networkId = 1;
  // Wireless profile ID
  string wirelessProfileId = 2;

}

message DeleteOrganizationCameraCustomAnalyticsArtifactRequest {
  // Organization ID
  string organizationId = 1;
  // Artifact ID
  string artifactId = 2;

}

message DeleteOrganizationCameraRoleRequest {
  // Organization ID
  string organizationId = 1;
  // Role ID
  string roleId = 2;

}

message GenerateDeviceCameraSnapshotRequest {
  // Serial
  string serial = 1;
  GenerateDeviceCameraSnapshotRequest generateDeviceCameraSnapshotRequest = 2;

}

message GetDeviceCameraAnalyticsLiveRequest {
  // Serial
  string serial = 1;

}

message GetDeviceCameraAnalyticsOverviewRequest {
  // Serial
  string serial = 1;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 2;
  // The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
  string t1 = 3;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour.
  float timespan = 4;
  // [optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].
  string objectType = 5;

}

message GetDeviceCameraAnalyticsOverviewResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceCameraAnalyticsRecentRequest {
  // Serial
  string serial = 1;
  // [optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].
  string objectType = 2;

}

message GetDeviceCameraAnalyticsRecentResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceCameraAnalyticsZoneHistoryRequest {
  // Serial
  string serial = 1;
  // Zone ID
  string zoneId = 2;
  // The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
  string t0 = 3;
  // The end of the timespan for the data. t1 can be a maximum of 14 hours after t0.
  string t1 = 4;
  // The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour.
  float timespan = 5;
  // The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60.
  int32 resolution = 6;
  // [optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle].
  string objectType = 7;

}

message GetDeviceCameraAnalyticsZoneHistoryResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceCameraAnalyticsZonesRequest {
  // Serial
  string serial = 1;

}

message GetDeviceCameraAnalyticsZonesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceCameraCustomAnalyticsRequest {
  // Serial
  string serial = 1;

}

message GetDeviceCameraSenseRequest {
  // Serial
  string serial = 1;

}

message GetDeviceCameraSenseObjectDetectionModelsRequest {
  // Serial
  string serial = 1;

}

message GetDeviceCameraSenseObjectDetectionModelsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetDeviceCameraVideoLinkRequest {
  // Serial
  string serial = 1;
  // [optional] The video link will start at this time. The timestamp should be a string in ISO8601 format. If no timestamp is specified, we will assume current time.
  string timestamp = 2;

}

message GetDeviceCameraVideoSettingsRequest {
  // Serial
  string serial = 1;

}

message GetDeviceCameraWirelessProfilesRequest {
  // Serial
  string serial = 1;

}

message GetNetworkCameraQualityRetentionProfileRequest {
  // Network ID
  string networkId = 1;
  // Quality retention profile ID
  string qualityRetentionProfileId = 2;

}

message GetNetworkCameraQualityRetentionProfilesRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkCameraQualityRetentionProfilesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetNetworkCameraSchedulesRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkCameraSchedulesResponse {
  repeated GetNetworkCameraSchedules200ResponseInner data = 1;
}

message GetNetworkCameraWirelessProfileRequest {
  // Network ID
  string networkId = 1;
  // Wireless profile ID
  string wirelessProfileId = 2;

}

message GetNetworkCameraWirelessProfilesRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkCameraWirelessProfilesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationCameraCustomAnalyticsArtifactRequest {
  // Organization ID
  string organizationId = 1;
  // Artifact ID
  string artifactId = 2;

}

message GetOrganizationCameraCustomAnalyticsArtifactsRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationCameraCustomAnalyticsArtifactsResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationCameraOnboardingStatusesRequest {
  // Organization ID
  string organizationId = 1;
  // A list of serial numbers. The returned cameras will be filtered to only include these serials.
  repeated string serials = 2;
  // A list of network IDs. The returned cameras will be filtered to only include these networks.
  repeated string networkIds = 3;

}

message GetOrganizationCameraOnboardingStatusesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationCameraPermissionRequest {
  // Organization ID
  string organizationId = 1;
  // Permission scope ID
  string permissionScopeId = 2;

}

message GetOrganizationCameraPermissionsRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationCameraPermissionsResponse {
  repeated GetOrganizationCameraPermissions200ResponseInner data = 1;
}

message GetOrganizationCameraRoleRequest {
  // Organization ID
  string organizationId = 1;
  // Role ID
  string roleId = 2;

}

message GetOrganizationCameraRolesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationCameraRolesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message UpdateDeviceCameraCustomAnalyticsRequest {
  // Serial
  string serial = 1;
  UpdateDeviceCameraCustomAnalyticsRequest updateDeviceCameraCustomAnalyticsRequest = 2;

}

message UpdateDeviceCameraSenseRequest {
  // Serial
  string serial = 1;
  UpdateDeviceCameraSenseRequest updateDeviceCameraSenseRequest = 2;

}

message UpdateDeviceCameraVideoSettingsRequest {
  // Serial
  string serial = 1;
  UpdateDeviceCameraVideoSettingsRequest updateDeviceCameraVideoSettingsRequest = 2;

}

message UpdateDeviceCameraWirelessProfilesRequest {
  // Serial
  string serial = 1;
  UpdateDeviceCameraWirelessProfilesRequest updateDeviceCameraWirelessProfilesRequest = 2;

}

message UpdateNetworkCameraQualityRetentionProfileRequest {
  // Network ID
  string networkId = 1;
  // Quality retention profile ID
  string qualityRetentionProfileId = 2;
  UpdateNetworkCameraQualityRetentionProfileRequest updateNetworkCameraQualityRetentionProfileRequest = 3;

}

message UpdateNetworkCameraWirelessProfileRequest {
  // Network ID
  string networkId = 1;
  // Wireless profile ID
  string wirelessProfileId = 2;
  UpdateNetworkCameraWirelessProfileRequest updateNetworkCameraWirelessProfileRequest = 3;

}

message UpdateOrganizationCameraOnboardingStatusesRequest {
  // Organization ID
  string organizationId = 1;
  UpdateOrganizationCameraOnboardingStatusesRequest updateOrganizationCameraOnboardingStatusesRequest = 2;

}

message UpdateOrganizationCameraRoleRequest {
  // Organization ID
  string organizationId = 1;
  // Role ID
  string roleId = 2;
  UpdateOrganizationCameraRoleRequest updateOrganizationCameraRoleRequest = 3;

}

