/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.profilesservice;

import "google/protobuf/empty.proto";
import public "models/assign_network_wireless_ethernet_ports_profiles201_response.proto";
import public "models/assign_network_wireless_ethernet_ports_profiles_request.proto";
import public "models/create_network_wireless_ethernet_ports_profile_request.proto";
import public "models/create_organization_alerts_profile_request.proto";
import public "models/get_network_wireless_ethernet_ports_profiles200_response_inner.proto";
import public "models/get_organization_config_template_switch_profile_ports200_response_inner.proto";
import public "models/get_organization_config_template_switch_profiles200_response_inner.proto";
import public "models/set_network_wireless_ethernet_ports_profiles_default200_response.proto";
import public "models/set_network_wireless_ethernet_ports_profiles_default_request.proto";
import public "models/todo_object_mapping.proto";
import public "models/update_network_wireless_ethernet_ports_profile_request.proto";
import public "models/update_organization_alerts_profile_request.proto";
import public "models/update_organization_config_template_switch_profile_port_request.proto";

service ProfilesService {
  rpc AssignNetworkWirelessEthernetPortsProfiles (AssignNetworkWirelessEthernetPortsProfilesRequest) returns (AssignNetworkWirelessEthernetPortsProfiles201Response);

  rpc CreateNetworkWirelessEthernetPortsProfile (CreateNetworkWirelessEthernetPortsProfileRequest) returns (GetNetworkWirelessEthernetPortsProfiles200ResponseInner);

  rpc CreateOrganizationAlertsProfile (CreateOrganizationAlertsProfileRequest) returns (TODO_OBJECT_MAPPING);

  rpc DeleteNetworkWirelessEthernetPortsProfile (DeleteNetworkWirelessEthernetPortsProfileRequest) returns (google.protobuf.Empty);

  rpc DeleteOrganizationAlertsProfile (DeleteOrganizationAlertsProfileRequest) returns (google.protobuf.Empty);

  rpc GetNetworkSmProfiles (GetNetworkSmProfilesRequest) returns (TODO_OBJECT_MAPPING);

  rpc GetNetworkWirelessEthernetPortsProfile (GetNetworkWirelessEthernetPortsProfileRequest) returns (GetNetworkWirelessEthernetPortsProfiles200ResponseInner);

  rpc GetNetworkWirelessEthernetPortsProfiles (GetNetworkWirelessEthernetPortsProfilesRequest) returns (GetNetworkWirelessEthernetPortsProfilesResponse);

  rpc GetOrganizationAlertsProfiles (GetOrganizationAlertsProfilesRequest) returns (GetOrganizationAlertsProfilesResponse);

  rpc GetOrganizationConfigTemplateSwitchProfilePort (GetOrganizationConfigTemplateSwitchProfilePortRequest) returns (GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner);

  rpc GetOrganizationConfigTemplateSwitchProfilePorts (GetOrganizationConfigTemplateSwitchProfilePortsRequest) returns (GetOrganizationConfigTemplateSwitchProfilePortsResponse);

  rpc GetOrganizationConfigTemplateSwitchProfiles (GetOrganizationConfigTemplateSwitchProfilesRequest) returns (GetOrganizationConfigTemplateSwitchProfilesResponse);

  rpc SetNetworkWirelessEthernetPortsProfilesDefault (SetNetworkWirelessEthernetPortsProfilesDefaultRequest) returns (SetNetworkWirelessEthernetPortsProfilesDefault200Response);

  rpc UpdateNetworkWirelessEthernetPortsProfile (UpdateNetworkWirelessEthernetPortsProfileRequest) returns (GetNetworkWirelessEthernetPortsProfiles200ResponseInner);

  rpc UpdateOrganizationAlertsProfile (UpdateOrganizationAlertsProfileRequest) returns (TODO_OBJECT_MAPPING);

  rpc UpdateOrganizationConfigTemplateSwitchProfilePort (UpdateOrganizationConfigTemplateSwitchProfilePortRequest) returns (GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner);

}

message AssignNetworkWirelessEthernetPortsProfilesRequest {
  // Network ID
  string networkId = 1;
  AssignNetworkWirelessEthernetPortsProfilesRequest assignNetworkWirelessEthernetPortsProfilesRequest = 2;

}

message CreateNetworkWirelessEthernetPortsProfileRequest {
  // Network ID
  string networkId = 1;
  CreateNetworkWirelessEthernetPortsProfileRequest createNetworkWirelessEthernetPortsProfileRequest = 2;

}

message CreateOrganizationAlertsProfileRequest {
  // Organization ID
  string organizationId = 1;
  CreateOrganizationAlertsProfileRequest createOrganizationAlertsProfileRequest = 2;

}

message DeleteNetworkWirelessEthernetPortsProfileRequest {
  // Network ID
  string networkId = 1;
  // Profile ID
  string profileId = 2;

}

message DeleteOrganizationAlertsProfileRequest {
  // Organization ID
  string organizationId = 1;
  // Alert config ID
  string alertConfigId = 2;

}

message GetNetworkSmProfilesRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkWirelessEthernetPortsProfileRequest {
  // Network ID
  string networkId = 1;
  // Profile ID
  string profileId = 2;

}

message GetNetworkWirelessEthernetPortsProfilesRequest {
  // Network ID
  string networkId = 1;

}

message GetNetworkWirelessEthernetPortsProfilesResponse {
  repeated GetNetworkWirelessEthernetPortsProfiles200ResponseInner data = 1;
}

message GetOrganizationAlertsProfilesRequest {
  // Organization ID
  string organizationId = 1;

}

message GetOrganizationAlertsProfilesResponse {
  repeated TODO_OBJECT_MAPPING data = 1;
}

message GetOrganizationConfigTemplateSwitchProfilePortRequest {
  // Organization ID
  string organizationId = 1;
  // Config template ID
  string configTemplateId = 2;
  // Profile ID
  string profileId = 3;
  // Port ID
  string portId = 4;

}

message GetOrganizationConfigTemplateSwitchProfilePortsRequest {
  // Organization ID
  string organizationId = 1;
  // Config template ID
  string configTemplateId = 2;
  // Profile ID
  string profileId = 3;

}

message GetOrganizationConfigTemplateSwitchProfilePortsResponse {
  repeated GetOrganizationConfigTemplateSwitchProfilePorts200ResponseInner data = 1;
}

message GetOrganizationConfigTemplateSwitchProfilesRequest {
  // Organization ID
  string organizationId = 1;
  // Config template ID
  string configTemplateId = 2;

}

message GetOrganizationConfigTemplateSwitchProfilesResponse {
  repeated GetOrganizationConfigTemplateSwitchProfiles200ResponseInner data = 1;
}

message SetNetworkWirelessEthernetPortsProfilesDefaultRequest {
  // Network ID
  string networkId = 1;
  SetNetworkWirelessEthernetPortsProfilesDefaultRequest setNetworkWirelessEthernetPortsProfilesDefaultRequest = 2;

}

message UpdateNetworkWirelessEthernetPortsProfileRequest {
  // Network ID
  string networkId = 1;
  // Profile ID
  string profileId = 2;
  UpdateNetworkWirelessEthernetPortsProfileRequest updateNetworkWirelessEthernetPortsProfileRequest = 3;

}

message UpdateOrganizationAlertsProfileRequest {
  // Organization ID
  string organizationId = 1;
  // Alert config ID
  string alertConfigId = 2;
  UpdateOrganizationAlertsProfileRequest updateOrganizationAlertsProfileRequest = 3;

}

message UpdateOrganizationConfigTemplateSwitchProfilePortRequest {
  // Organization ID
  string organizationId = 1;
  // Config template ID
  string configTemplateId = 2;
  // Profile ID
  string profileId = 3;
  // Port ID
  string portId = 4;
  UpdateOrganizationConfigTemplateSwitchProfilePortRequest updateOrganizationConfigTemplateSwitchProfilePortRequest = 5;

}

