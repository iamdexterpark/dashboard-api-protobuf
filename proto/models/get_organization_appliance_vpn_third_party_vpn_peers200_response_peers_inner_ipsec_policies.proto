/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools;


message GetOrganizationApplianceVpnThirdPartyVPNPeers200ResponsePeersInnerIpsecPolicies {

  // This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
  enum IkeCipherAlgoEnum {
    IkeCipherAlgoEnum_AES128 = 0;
    IkeCipherAlgoEnum_AES192 = 1;
    IkeCipherAlgoEnum_AES256 = 2;
    IkeCipherAlgoEnum_DES = 3;
    IkeCipherAlgoEnum_TRIPLEDES = 4;
  }

  IkeCipherAlgoEnum ikeCipherAlgo = 189612770;

  // This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
  enum IkeAuthAlgoEnum {
    IkeAuthAlgoEnum_MD5 = 0;
    IkeAuthAlgoEnum_SHA1 = 1;
    IkeAuthAlgoEnum_SHA256 = 2;
  }

  IkeAuthAlgoEnum ikeAuthAlgo = 78627006;

  // [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
  enum IkePrfAlgoEnum {
    IkePrfAlgoEnum_DEFAULT = 0;
    IkePrfAlgoEnum_PRFMD5 = 1;
    IkePrfAlgoEnum_PRFSHA1 = 2;
    IkePrfAlgoEnum_PRFSHA256 = 3;
  }

  IkePrfAlgoEnum ikePrfAlgo = 382207511;

  // This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
  repeated string ikeDiffieHellmanGroup = 20265705;

  // The lifetime of the Phase 1 SA in seconds.
  int32 ikeLifetime = 392500116;

  // This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
  enum ChildCipherAlgoEnum {
    ChildCipherAlgoEnum_AES128 = 0;
    ChildCipherAlgoEnum_AES192 = 1;
    ChildCipherAlgoEnum_AES256 = 2;
    ChildCipherAlgoEnum_DES = 3;
    ChildCipherAlgoEnum_NULL = 4;
    ChildCipherAlgoEnum_TRIPLEDES = 5;
  }

  ChildCipherAlgoEnum childCipherAlgo = 931131;

  // This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
  enum ChildAuthAlgoEnum {
    ChildAuthAlgoEnum_MD5 = 0;
    ChildAuthAlgoEnum_SHA1 = 1;
    ChildAuthAlgoEnum_SHA256 = 2;
  }

  ChildAuthAlgoEnum childAuthAlgo = 510954154;

  // This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
  repeated string childPfsGroup = 87027588;

  // The lifetime of the Phase 2 SA in seconds.
  int32 childLifetime = 445210365;

}
