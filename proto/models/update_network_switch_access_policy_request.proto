/*
  Meraki Dashboard API

  A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

  The version of the OpenAPI document: 1.38.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools;

import public "models/create_network_switch_access_policy_request_radius_accounting_servers_inner.proto";
import public "models/create_network_switch_access_policy_request_radius_servers_inner.proto";
import public "models/get_network_switch_access_policies200_response_inner_dot1x.proto";
import public "models/get_network_switch_access_policies200_response_inner_radius.proto";

message UpdateNetworkSwitchAccessPolicyRequest {

  // Name of the access policy
  string name = 3373707;

  // List of RADIUS servers to require connecting devices to authenticate against before granting network access
  repeated CreateNetworkSwitchAccessPolicyRequestRadiusServersInner radiusServers = 486015843;

  GetNetworkSwitchAccessPolicies200ResponseInnerRadius radius = 401707887;

  // If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
  bool guestPortBouncing = 37946658;

  // If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
  bool radiusTestingEnabled = 13783109;

  // Change of authentication for RADIUS re-authentication and disconnection
  bool radiusCoaSupportEnabled = 111906091;

  // Enable to send start, interim-update and stop messages to a configured RADIUS accounting server for tracking connected clients
  bool radiusAccountingEnabled = 1640571;

  // List of RADIUS accounting servers to require connecting devices to authenticate against before granting network access
  repeated CreateNetworkSwitchAccessPolicyRequestRadiusAccountingServersInner radiusAccountingServers = 162711863;

  // Acceptable values are `\"\"` for None, or `\"11\"` for Group Policies ACL
  string radiusGroupAttribute = 45644785;

  // Choose the Host Mode for the access policy.
  enum HostModeEnum {
    HostModeEnum_MULTI_AUTH = 0;
    HostModeEnum_MULTI_DOMAIN = 1;
    HostModeEnum_MULTI_HOST = 2;
    HostModeEnum_SINGLE_HOST = 3;
  }

  HostModeEnum hostMode = 300773525;

  // Access Type of the policy. Automatically 'Hybrid authentication' when hostMode is 'Multi-Domain'.
  enum AccessPolicyTypeEnum {
    AccessPolicyTypeEnum__802_1X = 0;
    AccessPolicyTypeEnum_HYBRID_AUTHENTICATION = 1;
    AccessPolicyTypeEnum_MAC_AUTHENTICATION_BYPASS = 2;
  }

  AccessPolicyTypeEnum accessPolicyType = 135470065;

  // Enabling this option will make switches execute 802.1X and MAC-bypass authentication simultaneously so that clients authenticate faster. Only required when accessPolicyType is 'Hybrid Authentication.
  bool increaseAccessSpeed = 235330144;

  // ID for the guest VLAN allow unauthorized devices access to limited network resources
  int32 guestVlanId = 133093848;

  GetNetworkSwitchAccessPolicies200ResponseInnerDot1x dot1x = 95772016;

  // CDP/LLDP capable voice clients will be able to use this VLAN. Automatically true when hostMode is 'Multi-Domain'.
  bool voiceVlanClients = 337381013;

  // Enable to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication
  bool urlRedirectWalledGardenEnabled = 469408395;

  // IP address ranges, in CIDR notation, to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication
  repeated string urlRedirectWalledGardenRanges = 278040130;

}
